{
    "report": {
        "environment": {
            "Python": "3.8.10",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_dict",
                "duration": 13.867264700000002,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 5.102497700000001,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6612834000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000985899999999873,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-sum-0]",
                "duration": 1.4248515000000026,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010152000000012151,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4222856999999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005354000000004078,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-sum-1]",
                "duration": 0.6676966000000011,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011457000000003603,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6648788000000003,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000526400000000038,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-df sum-0]",
                "duration": 0.6650889000000042,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.000743700000001013,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6630713999999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005301000000024203,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-df sum-1]",
                "duration": 0.6655027000000047,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007408000000026504,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6635072999999991,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005138000000002307,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-str-0]",
                "duration": 0.700984499999997,
                "run_index": 5,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007549999999980628,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6989502000000023,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005242999999985898,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-str-1]",
                "duration": 0.6443265000000089,
                "run_index": 6,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007508000000022719,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.642256200000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000568700000002309,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-sum mean-0]",
                "duration": 0.619008799999996,
                "run_index": 7,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010437999999979297,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6163644000000019,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005567999999982476,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-sum mean-1]",
                "duration": 0.6684411000000061,
                "run_index": 8,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007451000000031627,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6664160999999993,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005348000000005015,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-sum df sum-0]",
                "duration": 0.6860255000000031,
                "run_index": 9,
                "setup": {
                    "name": "setup",
                    "duration": 0.001477600000001189,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6825268999999992,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000543400000001526,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-sum df sum-1]",
                "duration": 0.7635956000000022,
                "run_index": 10,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007750000000008583,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7615026,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005430000000004043,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-should raise TypeError-0]",
                "duration": 0.6454737000000002,
                "run_index": 11,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009961999999994475,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6429179000000005,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005634000000007688,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-should raise TypeError-1]",
                "duration": 0.7260300999999956,
                "run_index": 12,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010303999999976554,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7234654999999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005038000000006093,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-sum sum-0]",
                "duration": 0.7274822000000043,
                "run_index": 13,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009064000000016392,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7251076000000012,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005617999999998347,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[agg-sum sum-1]",
                "duration": 0.7336436000000006,
                "run_index": 14,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008181000000000438,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7312492000000006,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007581999999999312,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-sum-0]",
                "duration": 0.6629124000000068,
                "run_index": 15,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009700000000023579,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.660418,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005544000000021754,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-sum-1]",
                "duration": 0.6901942999999982,
                "run_index": 16,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008626999999989948,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6877418999999989,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007270000000012544,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-df sum-0]",
                "duration": 0.7175024000000008,
                "run_index": 17,
                "setup": {
                    "name": "setup",
                    "duration": 0.000782900000000808,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7154181999999984,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005184000000006961,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-df sum-1]",
                "duration": 0.6659904999999995,
                "run_index": 18,
                "setup": {
                    "name": "setup",
                    "duration": 0.00074509999999961,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6639355000000009,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005647999999993658,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-str-0]",
                "duration": 0.7142340999999988,
                "run_index": 19,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008172000000001844,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7120631000000017,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005365999999966675,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-str-1]",
                "duration": 0.6693368000000035,
                "run_index": 20,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010483000000007792,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6667285000000014,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005117000000005589,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-sum mean-0]",
                "duration": 0.6848582000000007,
                "run_index": 21,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007692000000005805,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6827535999999981,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005662000000015155,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-sum mean-1]",
                "duration": 0.6234399999999987,
                "run_index": 22,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007900999999996827,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6206569000000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0012028999999991186,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-sum df sum-0]",
                "duration": 0.7194540999999965,
                "run_index": 23,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008708999999988976,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7169336999999985,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007786000000002957,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-sum df sum-1]",
                "duration": 0.7437120999999998,
                "run_index": 24,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008002999999980887,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7415557000000028,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005558000000007723,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-should raise TypeError-0]",
                "duration": 0.8499313000000015,
                "run_index": 25,
                "setup": {
                    "name": "setup",
                    "duration": 0.000948700000002134,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8474584999999948,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005754000000024462,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-should raise TypeError-1]",
                "duration": 0.8402670999999984,
                "run_index": 26,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008797999999998751,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8379073999999989,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006000999999997703,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-sum sum-0]",
                "duration": 0.8660646000000014,
                "run_index": 27,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014581000000006838,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8626159000000015,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005324999999984925,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply[apply-sum sum-1]",
                "duration": 0.7681181999999964,
                "run_index": 28,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007564000000002125,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7657650999999959,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:66: in test_agg_apply\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008403000000001271,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-sum-rows]",
                "duration": 3.5574992000000023,
                "run_index": 29,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007870000000025357,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5552568999999963,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006683000000009542,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-sum-columns]",
                "duration": 3.0797408000000175,
                "run_index": 30,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008220000000065397,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0773988000000045,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006979999999998654,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-df sum-rows]",
                "duration": 3.1562556999999956,
                "run_index": 31,
                "setup": {
                    "name": "setup",
                    "duration": 0.000755599999997969,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1540839999999974,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006605000000021732,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-df sum-columns]",
                "duration": 3.1299650000000057,
                "run_index": 32,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007880000000000109,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1274859000000035,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000903100000002155,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-str-rows]",
                "duration": 3.3020944000000014,
                "run_index": 33,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007269000000036385,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2999307999999985,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007097999999956528,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-str-columns]",
                "duration": 3.5521912999999827,
                "run_index": 34,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007723999999953435,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5499519999999976,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006944999999944912,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-sum mean-rows]",
                "duration": 3.412197600000006,
                "run_index": 35,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007905000000008044,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4099296000000052,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000686999999999216,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-sum mean-columns]",
                "duration": 3.514035100000001,
                "run_index": 36,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008228000000016777,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5116806000000054,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007088999999922407,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-sum df sum-rows]",
                "duration": 3.4540463000000017,
                "run_index": 37,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008181999999976597,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.451738700000007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006711999999993168,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-sum df sum-columns]",
                "duration": 4.067182100000011,
                "run_index": 38,
                "setup": {
                    "name": "setup",
                    "duration": 0.001129099999999994,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.0641827000000035,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007412000000073249,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-should raise TypeError-rows]",
                "duration": 3.0494582000000037,
                "run_index": 39,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007745999999997366,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.047257000000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006520000000023174,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-should raise TypeError-columns]",
                "duration": 2.963324500000013,
                "run_index": 40,
                "setup": {
                    "name": "setup",
                    "duration": 0.001026500000008923,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.960680999999994,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005905000000012706,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-sum sum-rows]",
                "duration": 3.1171717000000143,
                "run_index": 41,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008549000000073192,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.114497,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009648999999996022,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[agg-sum sum-columns]",
                "duration": 2.9870917000000077,
                "run_index": 42,
                "setup": {
                    "name": "setup",
                    "duration": 0.00145530000000349,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.9835648000000106,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006162999999901331,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-sum-rows]",
                "duration": 3.066978400000025,
                "run_index": 43,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008240000000085956,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0646039000000087,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007264999999989641,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-sum-columns]",
                "duration": 3.1224829000000085,
                "run_index": 44,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007846000000029107,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.120198799999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007149000000055139,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-df sum-rows]",
                "duration": 3.211258999999984,
                "run_index": 45,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007842999999922995,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2091139999999996,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005763999999999214,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-df sum-columns]",
                "duration": 3.1459714999999733,
                "run_index": 46,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008120999999903233,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.143671399999988,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006759000000045035,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-str-rows]",
                "duration": 3.3191481999999866,
                "run_index": 47,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007557999999932008,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3169658000000055,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006707999999946423,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-str-columns]",
                "duration": 3.5683154000000314,
                "run_index": 48,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008211000000102331,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.566067600000011,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:79: in test_agg_apply_axis_names\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000605600000000095,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-sum mean-rows]",
                "duration": 3.564971100000008,
                "run_index": 49,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009031999999962181,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5625315000000057,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006332000000099924,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-sum mean-columns]",
                "duration": 3.5671450000000107,
                "run_index": 50,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007711000000085733,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.56489719999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007056000000034146,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-sum df sum-rows]",
                "duration": 3.4022336999999965,
                "run_index": 51,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013017999999931362,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3990170000000006,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000613100000009581,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-sum df sum-columns]",
                "duration": 3.552553199999977,
                "run_index": 52,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008309999999909223,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5502051999999935,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006860000000017408,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-should raise TypeError-rows]",
                "duration": 3.051882899999981,
                "run_index": 53,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008490999999963833,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.049578699999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006059999999905585,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-should raise TypeError-columns]",
                "duration": 2.9936997000000076,
                "run_index": 54,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007971999999938362,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.9914805000000086,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006248000000113052,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-sum sum-rows]",
                "duration": 3.018954600000029,
                "run_index": 55,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008098000000131833,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.016733500000001,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006015000000019199,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_agg_apply_axis_names[apply-sum sum-columns]",
                "duration": 2.964437799999999,
                "run_index": 56,
                "setup": {
                    "name": "setup",
                    "duration": 0.000808499999990886,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.962175000000016,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006458000000009179,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_aggregate_alias",
                "duration": 0.003097300000007408,
                "run_index": 57,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005046999999933632,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0017540000000053624,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00033390000001531916,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_aggregate_error_checking",
                "duration": 0.5971346999999696,
                "run_index": 58,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004440999999815176,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.595777499999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:90: in test_aggregate_error_checking\n    modin_df = pd.DataFrame(test_data[\"float_nan_data\"])\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004690000000096006,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_type_error[sum]",
                "duration": 3.0494446999999525,
                "run_index": 59,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006557999999756703,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0475620999999933,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005710000000078708,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_type_error[df sum]",
                "duration": 2.9819909000000564,
                "run_index": 60,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006756000000223139,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.9800611999999944,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005785000000173568,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_type_error[str]",
                "duration": 2.966567500000025,
                "run_index": 61,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006391000000007807,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.9647125000000187,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005768000000045959,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_type_error[sum mean]",
                "duration": 2.990295100000054,
                "run_index": 62,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006210000000237414,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.9884785999999792,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005745000000274558,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_type_error[sum df sum]",
                "duration": 3.032992400000012,
                "run_index": 63,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006162999999901331,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0311531000000116,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006067000000200551,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_type_error[should raise TypeError]",
                "duration": 3.0027540000000386,
                "run_index": 64,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006639000000063788,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.000849800000026,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005763999999999214,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_type_error[sum sum]",
                "duration": 3.038689900000037,
                "run_index": 65,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006236000000114927,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0368673000000115,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005754000000024462,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-int_data-None-0]",
                "duration": 3.978003400000034,
                "run_index": 66,
                "setup": {
                    "name": "setup",
                    "duration": 0.000881800000001931,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.9752676000000235,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000972200000006751,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-int_data-None-1]",
                "duration": 3.704093499999999,
                "run_index": 67,
                "setup": {
                    "name": "setup",
                    "duration": 0.001041200000003073,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.7013591999999846,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1228: in needs_i8_conversion\n    is_datetime_or_timedelta_dtype(arr_or_dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1067: in is_datetime_or_timedelta_dtype\n    return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1640: in _is_dtype_type\n    elif is_list_like(arr_or_dtype):\npandas\\_libs\\lib.pyx:1033: in pandas._libs.lib.is_list_like\n    ???\npandas\\_libs\\lib.pyx:1038: in pandas._libs.lib.c_is_list_like\n    ???\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006519000000082542,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-int_data--1-0]",
                "duration": 6.111537999999996,
                "run_index": 68,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008716000000106305,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 6.109230999999994,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 965, in aggregate\nE       result = agg_list_like(self, [func], _axis=self.axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 672, in agg_list_like\nE       raise ValueError(\"no results\")\nE   ValueError: no results\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1472, in kurt\nE       query_compiler=self._query_compiler.apply(\"kurt\", axis, **func_kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2341, in apply\nE       return self._apply_text_func_elementwise(func, axis, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2377, in _apply_text_func_elementwise\nE       new_modin_frame = self._modin_frame.apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1396, in apply_full_axis\nE       return self.broadcast_apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1804, in broadcast_apply_full_axis\nE       new_partitions = self._partition_mgr_cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1153, in _map_reduce_func\nE       series_result = func(df, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2378, in <lambda>\nE       axis, lambda df: df.apply(func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 7768, in apply\nE       return op.get_result()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\apply.py\", line 164, in get_result\nE       return func(*self.args, **self.kwds)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 11155, in kurt\nE       return NDFrame.kurt(self, axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10741, in kurt\nE       return self._stat_function(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10710, in _stat_function\nE       return self._agg_by_level(name, axis=axis, level=level, skipna=skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10563, in _agg_by_level\nE       return grouped.aggregate(applyf)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 977, in aggregate\nE       result = self._aggregate_frame(func)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1134, in _aggregate_frame\nE       for name, data in self:\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 146, in get_iterator\nE       splitter = self._get_splitter(data, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 160, in _get_splitter\nE       comp_ids, _, ngroups = self.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005637999999805743,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-int_data--1-1]",
                "duration": 7.270732999999922,
                "run_index": 69,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013245999999753622,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 7.267394599999989,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006891999999822929,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-int_data-0-0]",
                "duration": 6.482784699999996,
                "run_index": 70,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009570999999937158,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 6.480368800000008,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 965, in aggregate\nE       result = agg_list_like(self, [func], _axis=self.axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 672, in agg_list_like\nE       raise ValueError(\"no results\")\nE   ValueError: no results\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1472, in kurt\nE       query_compiler=self._query_compiler.apply(\"kurt\", axis, **func_kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2341, in apply\nE       return self._apply_text_func_elementwise(func, axis, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2377, in _apply_text_func_elementwise\nE       new_modin_frame = self._modin_frame.apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1396, in apply_full_axis\nE       return self.broadcast_apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1804, in broadcast_apply_full_axis\nE       new_partitions = self._partition_mgr_cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1153, in _map_reduce_func\nE       series_result = func(df, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2378, in <lambda>\nE       axis, lambda df: df.apply(func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 7768, in apply\nE       return op.get_result()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\apply.py\", line 164, in get_result\nE       return func(*self.args, **self.kwds)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 11155, in kurt\nE       return NDFrame.kurt(self, axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10741, in kurt\nE       return self._stat_function(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10710, in _stat_function\nE       return self._agg_by_level(name, axis=axis, level=level, skipna=skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10563, in _agg_by_level\nE       return grouped.aggregate(applyf)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 977, in aggregate\nE       result = self._aggregate_frame(func)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1134, in _aggregate_frame\nE       for name, data in self:\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 146, in get_iterator\nE       splitter = self._get_splitter(data, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 160, in _get_splitter\nE       comp_ids, _, ngroups = self.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005017000000009375,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-int_data-0-1]",
                "duration": 6.598848300000014,
                "run_index": 71,
                "setup": {
                    "name": "setup",
                    "duration": 0.000997699999999213,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 6.596108700000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007442000000139615,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-int_data-1-0]",
                "duration": 6.272728599999937,
                "run_index": 72,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009002999999836447,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 6.270425599999982,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 965, in aggregate\nE       result = agg_list_like(self, [func], _axis=self.axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 672, in agg_list_like\nE       raise ValueError(\"no results\")\nE   ValueError: no results\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1472, in kurt\nE       query_compiler=self._query_compiler.apply(\"kurt\", axis, **func_kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2341, in apply\nE       return self._apply_text_func_elementwise(func, axis, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2377, in _apply_text_func_elementwise\nE       new_modin_frame = self._modin_frame.apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1396, in apply_full_axis\nE       return self.broadcast_apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1804, in broadcast_apply_full_axis\nE       new_partitions = self._partition_mgr_cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1153, in _map_reduce_func\nE       series_result = func(df, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2378, in <lambda>\nE       axis, lambda df: df.apply(func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 7768, in apply\nE       return op.get_result()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\apply.py\", line 164, in get_result\nE       return func(*self.args, **self.kwds)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 11155, in kurt\nE       return NDFrame.kurt(self, axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10741, in kurt\nE       return self._stat_function(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10710, in _stat_function\nE       return self._agg_by_level(name, axis=axis, level=level, skipna=skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10563, in _agg_by_level\nE       return grouped.aggregate(applyf)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 977, in aggregate\nE       result = self._aggregate_frame(func)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1134, in _aggregate_frame\nE       for name, data in self:\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 146, in get_iterator\nE       splitter = self._get_splitter(data, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 160, in _get_splitter\nE       comp_ids, _, ngroups = self.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005023999999878015,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-int_data-1-1]",
                "duration": 3.4530226000000255,
                "run_index": 73,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008241000000168697,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.450693099999995,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006812999999965541,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-float_nan_data-None-0]",
                "duration": 1.2615792000000283,
                "run_index": 74,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008792000000141797,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.2592019999999877,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006188000000122429,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-float_nan_data-None-1]",
                "duration": 0.5149793999999872,
                "run_index": 75,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008727999999962321,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5126301999999896,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006036000000051445,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-float_nan_data--1-0]",
                "duration": 0.5249121999999886,
                "run_index": 76,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008277999999961594,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5226557999999955,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006008000000008451,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-float_nan_data--1-1]",
                "duration": 0.520314800000051,
                "run_index": 77,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008949000000200158,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5178592000000037,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006658000000072661,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-float_nan_data-0-0]",
                "duration": 0.45725340000001324,
                "run_index": 78,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011047000000132812,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4540604999999971,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00098349999998959,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-float_nan_data-0-1]",
                "duration": 0.5256241999999816,
                "run_index": 79,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009273999999948046,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5231700999999873,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005993000000046322,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-float_nan_data-1-0]",
                "duration": 0.5170648000000142,
                "run_index": 80,
                "setup": {
                    "name": "setup",
                    "duration": 0.001162800000003017,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5141659000000232,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005732999999850108,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[kurt-float_nan_data-1-1]",
                "duration": 0.5244920999999749,
                "run_index": 81,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008599999999887586,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5220989999999972,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006731000000002041,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-int_data-None-0]",
                "duration": 4.089631299999979,
                "run_index": 82,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009977999999932763,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.086916799999983,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007189000000096257,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-int_data-None-1]",
                "duration": 4.02346559999998,
                "run_index": 83,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008619999999837091,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.021058100000005,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1228: in needs_i8_conversion\n    is_datetime_or_timedelta_dtype(arr_or_dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1067: in is_datetime_or_timedelta_dtype\n    return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1640: in _is_dtype_type\n    elif is_list_like(arr_or_dtype):\npandas\\_libs\\lib.pyx:1033: in pandas._libs.lib.is_list_like\n    ???\npandas\\_libs\\lib.pyx:1038: in pandas._libs.lib.c_is_list_like\n    ???\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006835000000080527,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-int_data--1-0]",
                "duration": 3.641520300000053,
                "run_index": 84,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008702000000084809,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.639273800000012,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 968, in count\nE       return frame.groupby(level=level, axis=axis, sort=True).count()\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 644, in count\nE       result = self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1734, in count\nE       ids, _, ngroups = self.grouper.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005061000000239346,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-int_data--1-1]",
                "duration": 3.4442067999999892,
                "run_index": 85,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010068999999930384,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4414178000000106,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007751999999925374,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-int_data-0-0]",
                "duration": 3.617278200000044,
                "run_index": 86,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008448000000100819,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6150710000000004,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 968, in count\nE       return frame.groupby(level=level, axis=axis, sort=True).count()\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 644, in count\nE       result = self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1734, in count\nE       ids, _, ngroups = self.grouper.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005176000000233216,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-int_data-0-1]",
                "duration": 3.4686423000000275,
                "run_index": 87,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009404000000188262,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4660279999999943,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007334999999955016,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-int_data-1-0]",
                "duration": 3.5634819999999934,
                "run_index": 88,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008981999999946311,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.561019299999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 968, in count\nE       return frame.groupby(level=level, axis=axis, sort=True).count()\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 644, in count\nE       result = self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1734, in count\nE       ids, _, ngroups = self.grouper.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006663000000060038,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-int_data-1-1]",
                "duration": 3.422191099999992,
                "run_index": 89,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009694999999965148,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.419474000000008,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007780999999909,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-float_nan_data-None-0]",
                "duration": 1.2788841000000275,
                "run_index": 90,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008396000000061576,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.2765215000000012,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006834000000139895,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-float_nan_data-None-1]",
                "duration": 0.5469091999999875,
                "run_index": 91,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008006999999849995,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5446913000000109,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006165000000066811,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-float_nan_data--1-0]",
                "duration": 0.5101959000000136,
                "run_index": 92,
                "setup": {
                    "name": "setup",
                    "duration": 0.000896600000004355,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5077996999999925,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006030000000123437,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-float_nan_data--1-1]",
                "duration": 0.5230487999999696,
                "run_index": 93,
                "setup": {
                    "name": "setup",
                    "duration": 0.000858599999986609,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5207591999999863,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005724000000100204,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-float_nan_data-0-0]",
                "duration": 0.5304122999999947,
                "run_index": 94,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008219999999994343,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5278122999999937,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009560000000021773,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-float_nan_data-0-1]",
                "duration": 0.5207162000000096,
                "run_index": 95,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009153000000026168,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5183312000000058,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005543999999986227,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-float_nan_data-1-0]",
                "duration": 0.5148609999999962,
                "run_index": 96,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008817000000078679,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5125293999999769,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005682000000035714,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[count-float_nan_data-1-1]",
                "duration": 0.45405879999998433,
                "run_index": 97,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008708999999953448,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4517721999999935,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000544800000000123,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-int_data-None-0]",
                "duration": 4.298880599999961,
                "run_index": 98,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008239999999943848,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.296518599999985,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000713999999987891,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-int_data-None-1]",
                "duration": 4.024052799999993,
                "run_index": 99,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008689999999944575,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.021635500000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1228: in needs_i8_conversion\n    is_datetime_or_timedelta_dtype(arr_or_dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1067: in is_datetime_or_timedelta_dtype\n    return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1640: in _is_dtype_type\n    elif is_list_like(arr_or_dtype):\npandas\\_libs\\lib.pyx:1033: in pandas._libs.lib.is_list_like\n    ???\npandas\\_libs\\lib.pyx:1038: in pandas._libs.lib.c_is_list_like\n    ???\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006793000000016036,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-int_data--1-0]",
                "duration": 6.1389538999999615,
                "run_index": 100,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009325999999987289,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 6.136522599999978,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 965, in aggregate\nE       result = agg_list_like(self, [func], _axis=self.axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 672, in agg_list_like\nE       raise ValueError(\"no results\")\nE   ValueError: no results\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2029, in sum\nE       return self.groupby(level=level, axis=axis, sort=False).sum(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 551, in sum\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1650, in sum\nE       result = self._agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1044, in _agg_general\nE       result = self.aggregate(lambda x: npfunc(x, axis=self.axis))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 977, in aggregate\nE       result = self._aggregate_frame(func)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1134, in _aggregate_frame\nE       for name, data in self:\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 146, in get_iterator\nE       splitter = self._get_splitter(data, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 160, in _get_splitter\nE       comp_ids, _, ngroups = self.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000566099999986136,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-int_data--1-1]",
                "duration": 3.9839200000000403,
                "run_index": 101,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008866000000011809,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.981485700000036,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2029, in sum\nE       return self.groupby(level=level, axis=axis, sort=False).sum(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 551, in sum\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 866, in _wrap_aggregation\nE       return self._default_to_pandas(default_func, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 971, in _default_to_pandas\nE       return self._df._default_to_pandas(groupby_on_multiple_columns, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 415, in _default_to_pandas\nE       result = op(pandas_obj, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 963, in groupby_on_multiple_columns\nE       return f(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 553, in <lambda>\nE       lambda df, **kwargs: df.sum(**kwargs),\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1650, in sum\nE       result = self._agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1024, in _agg_general\nE       result = self._cython_agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1015, in _cython_agg_general\nE       agg_mgr = self._cython_agg_blocks(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1027, in _cython_agg_blocks\nE       data = data.get_numeric_data(copy=False)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 750, in get_numeric_data\nE       return self._combine([b for b in self.blocks if b.is_numeric], copy)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 772, in _combine\nE       axes[0] = self.items.take(indexer)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2058, in take\nE       indices = ensure_platform_int(indices)\nE     File \"pandas\\_libs\\algos_common_helper.pxi\", line 23, in pandas._libs.algos.ensure_platform_int\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006611000000020795,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-int_data-0-0]",
                "duration": 6.021178700000007,
                "run_index": 102,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008444000000054075,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 6.018965100000003,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 965, in aggregate\nE       result = agg_list_like(self, [func], _axis=self.axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 672, in agg_list_like\nE       raise ValueError(\"no results\")\nE   ValueError: no results\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2029, in sum\nE       return self.groupby(level=level, axis=axis, sort=False).sum(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 551, in sum\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1650, in sum\nE       result = self._agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1044, in _agg_general\nE       result = self.aggregate(lambda x: npfunc(x, axis=self.axis))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 977, in aggregate\nE       result = self._aggregate_frame(func)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1134, in _aggregate_frame\nE       for name, data in self:\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 146, in get_iterator\nE       splitter = self._get_splitter(data, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 160, in _get_splitter\nE       comp_ids, _, ngroups = self.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005247999999937747,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-int_data-0-1]",
                "duration": 3.6912600999999086,
                "run_index": 103,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008717999999703352,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6890134999999873,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2029, in sum\nE       return self.groupby(level=level, axis=axis, sort=False).sum(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 551, in sum\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 866, in _wrap_aggregation\nE       return self._default_to_pandas(default_func, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 971, in _default_to_pandas\nE       return self._df._default_to_pandas(groupby_on_multiple_columns, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 415, in _default_to_pandas\nE       result = op(pandas_obj, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 963, in groupby_on_multiple_columns\nE       return f(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 553, in <lambda>\nE       lambda df, **kwargs: df.sum(**kwargs),\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1650, in sum\nE       result = self._agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1024, in _agg_general\nE       result = self._cython_agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1015, in _cython_agg_general\nE       agg_mgr = self._cython_agg_blocks(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1027, in _cython_agg_blocks\nE       data = data.get_numeric_data(copy=False)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 750, in get_numeric_data\nE       return self._combine([b for b in self.blocks if b.is_numeric], copy)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 772, in _combine\nE       axes[0] = self.items.take(indexer)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2058, in take\nE       indices = ensure_platform_int(indices)\nE     File \"pandas\\_libs\\algos_common_helper.pxi\", line 23, in pandas._libs.algos.ensure_platform_int\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005029999999806023,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-int_data-1-0]",
                "duration": 5.843094800000017,
                "run_index": 104,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008252000000084081,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 5.84094429999999,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 965, in aggregate\nE       result = agg_list_like(self, [func], _axis=self.axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 672, in agg_list_like\nE       raise ValueError(\"no results\")\nE   ValueError: no results\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2029, in sum\nE       return self.groupby(level=level, axis=axis, sort=False).sum(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 551, in sum\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1650, in sum\nE       result = self._agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1044, in _agg_general\nE       result = self.aggregate(lambda x: npfunc(x, axis=self.axis))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 977, in aggregate\nE       result = self._aggregate_frame(func)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1134, in _aggregate_frame\nE       for name, data in self:\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 146, in get_iterator\nE       splitter = self._get_splitter(data, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 160, in _get_splitter\nE       comp_ids, _, ngroups = self.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005001000000106615,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-int_data-1-1]",
                "duration": 3.6741537000000335,
                "run_index": 105,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008305000000063956,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6718468000000257,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000645899999994981,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-float_nan_data-None-0]",
                "duration": 1.497813600000029,
                "run_index": 106,
                "setup": {
                    "name": "setup",
                    "duration": 0.001245900000014899,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4945056999999906,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000816100000008646,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-float_nan_data-None-1]",
                "duration": 0.5866177000000903,
                "run_index": 107,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010536000000342938,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5839177000000291,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005927999999926215,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-float_nan_data--1-0]",
                "duration": 0.5591549999999188,
                "run_index": 108,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009584999999674437,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5558844000000249,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0013535999999589876,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-float_nan_data--1-1]",
                "duration": 0.5059578000000897,
                "run_index": 109,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010308000000236461,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5032225000000494,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006736999999930049,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-float_nan_data-0-0]",
                "duration": 0.5543658999999934,
                "run_index": 110,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010030999999912638,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5516642000000047,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006955000000061773,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-float_nan_data-0-1]",
                "duration": 0.5296239999998988,
                "run_index": 111,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009632999999666936,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5270176999999876,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006796999999778564,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-float_nan_data-1-0]",
                "duration": 0.5398123000001078,
                "run_index": 112,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010155000000509062,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.537137400000006,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006439000000000306,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[sum-float_nan_data-1-1]",
                "duration": 0.5078229000000647,
                "run_index": 113,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008606000000099812,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5055207000000337,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005810000000110449,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-int_data-None-0]",
                "duration": 4.249423100000058,
                "run_index": 114,
                "setup": {
                    "name": "setup",
                    "duration": 0.001029700000003686,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.246711900000037,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000651800000014191,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-int_data-None-1]",
                "duration": 4.383422400000029,
                "run_index": 115,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010715000000232067,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.380740099999969,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1228: in needs_i8_conversion\n    is_datetime_or_timedelta_dtype(arr_or_dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1067: in is_datetime_or_timedelta_dtype\n    return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1640: in _is_dtype_type\n    elif is_list_like(arr_or_dtype):\npandas\\_libs\\lib.pyx:1033: in pandas._libs.lib.is_list_like\n    ???\npandas\\_libs\\lib.pyx:1038: in pandas._libs.lib.c_is_list_like\n    ???\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005393000000140091,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-int_data--1-0]",
                "duration": 3.9990527000000498,
                "run_index": 116,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009952999999995882,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.9962677000000326,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   pandas.core.base._get_exception_class.<locals>.Derived: No numeric types to aggregate\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1649, in mean\nE       return self._stat_operation(\"mean\", axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1613, in _stat_operation\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 421, in _default_to_pandas\nE       result = getattr(self._pandas_class, op)(pandas_obj, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 11118, in mean\nE       return NDFrame.mean(self, axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10726, in mean\nE       return self._stat_function(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10710, in _stat_function\nE       return self._agg_by_level(name, axis=axis, level=level, skipna=skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10559, in _agg_by_level\nE       return getattr(grouped, name)(**kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1496, in mean\nE       return self._cython_agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1015, in _cython_agg_general\nE       agg_mgr = self._cython_agg_blocks(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1121, in _cython_agg_blocks\nE       raise DataError(\"No numeric types to aggregate\")\nE   pandas.core.base.DataError: No numeric types to aggregate"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007944000000179585,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-int_data--1-1]",
                "duration": 3.704956299999992,
                "run_index": 117,
                "setup": {
                    "name": "setup",
                    "duration": 0.000881100000015067,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.7026779999999917,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1649, in mean\nE       return self._stat_operation(\"mean\", axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1613, in _stat_operation\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 421, in _default_to_pandas\nE       result = getattr(self._pandas_class, op)(pandas_obj, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 11118, in mean\nE       return NDFrame.mean(self, axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10726, in mean\nE       return self._stat_function(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10710, in _stat_function\nE       return self._agg_by_level(name, axis=axis, level=level, skipna=skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10559, in _agg_by_level\nE       return getattr(grouped, name)(**kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1496, in mean\nE       return self._cython_agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1015, in _cython_agg_general\nE       agg_mgr = self._cython_agg_blocks(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1027, in _cython_agg_blocks\nE       data = data.get_numeric_data(copy=False)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 750, in get_numeric_data\nE       return self._combine([b for b in self.blocks if b.is_numeric], copy)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 772, in _combine\nE       axes[0] = self.items.take(indexer)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2058, in take\nE       indices = ensure_platform_int(indices)\nE     File \"pandas\\_libs\\algos_common_helper.pxi\", line 23, in pandas._libs.algos.ensure_platform_int\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005160999999702653,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-int_data-0-0]",
                "duration": 3.906854899999985,
                "run_index": 118,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014188000000103784,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.9034593000000086,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   pandas.core.base._get_exception_class.<locals>.Derived: No numeric types to aggregate\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1649, in mean\nE       return self._stat_operation(\"mean\", axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1613, in _stat_operation\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 421, in _default_to_pandas\nE       result = getattr(self._pandas_class, op)(pandas_obj, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 11118, in mean\nE       return NDFrame.mean(self, axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10726, in mean\nE       return self._stat_function(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10710, in _stat_function\nE       return self._agg_by_level(name, axis=axis, level=level, skipna=skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10559, in _agg_by_level\nE       return getattr(grouped, name)(**kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1496, in mean\nE       return self._cython_agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1015, in _cython_agg_general\nE       agg_mgr = self._cython_agg_blocks(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1121, in _cython_agg_blocks\nE       raise DataError(\"No numeric types to aggregate\")\nE   pandas.core.base.DataError: No numeric types to aggregate"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005579999999554275,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-int_data-0-1]",
                "duration": 3.9562685000000215,
                "run_index": 119,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008088000000157081,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.954046099999971,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1649, in mean\nE       return self._stat_operation(\"mean\", axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1613, in _stat_operation\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 421, in _default_to_pandas\nE       result = getattr(self._pandas_class, op)(pandas_obj, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 11118, in mean\nE       return NDFrame.mean(self, axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10726, in mean\nE       return self._stat_function(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10710, in _stat_function\nE       return self._agg_by_level(name, axis=axis, level=level, skipna=skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10559, in _agg_by_level\nE       return getattr(grouped, name)(**kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1496, in mean\nE       return self._cython_agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1015, in _cython_agg_general\nE       agg_mgr = self._cython_agg_blocks(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1027, in _cython_agg_blocks\nE       data = data.get_numeric_data(copy=False)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 750, in get_numeric_data\nE       return self._combine([b for b in self.blocks if b.is_numeric], copy)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 772, in _combine\nE       axes[0] = self.items.take(indexer)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2058, in take\nE       indices = ensure_platform_int(indices)\nE     File \"pandas\\_libs\\algos_common_helper.pxi\", line 23, in pandas._libs.algos.ensure_platform_int\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006048000000191678,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-int_data-1-0]",
                "duration": 3.965779800000064,
                "run_index": 120,
                "setup": {
                    "name": "setup",
                    "duration": 0.0017384000000220112,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.961700300000018,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   pandas.core.base._get_exception_class.<locals>.Derived: No numeric types to aggregate\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1649, in mean\nE       return self._stat_operation(\"mean\", axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 1613, in _stat_operation\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 421, in _default_to_pandas\nE       result = getattr(self._pandas_class, op)(pandas_obj, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 11118, in mean\nE       return NDFrame.mean(self, axis, skipna, level, numeric_only, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10726, in mean\nE       return self._stat_function(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10710, in _stat_function\nE       return self._agg_by_level(name, axis=axis, level=level, skipna=skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 10559, in _agg_by_level\nE       return getattr(grouped, name)(**kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1496, in mean\nE       return self._cython_agg_general(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1015, in _cython_agg_general\nE       agg_mgr = self._cython_agg_blocks(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\generic.py\", line 1121, in _cython_agg_blocks\nE       raise DataError(\"No numeric types to aggregate\")\nE   pandas.core.base.DataError: No numeric types to aggregate"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006027000000017324,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-int_data-1-1]",
                "duration": 3.6661862999999926,
                "run_index": 121,
                "setup": {
                    "name": "setup",
                    "duration": 0.001095399999996971,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6632682000000045,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007272999999941021,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-float_nan_data-None-0]",
                "duration": 1.2580010999999445,
                "run_index": 122,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009325999999987289,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.25537879999996,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007570999999870764,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-float_nan_data-None-1]",
                "duration": 0.510371100000043,
                "run_index": 123,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010565000000042346,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5074602999999911,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007978000000434804,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-float_nan_data--1-0]",
                "duration": 0.5231019000000288,
                "run_index": 124,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008333000000106949,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5208713999999759,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005639000000314809,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-float_nan_data--1-1]",
                "duration": 0.5512622999999621,
                "run_index": 125,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008285999999770866,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.549016800000004,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005883000000039829,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-float_nan_data-0-0]",
                "duration": 0.5436783000000105,
                "run_index": 126,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008879000000092674,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5410714999999868,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008310000000051332,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-float_nan_data-0-1]",
                "duration": 0.5585269000000608,
                "run_index": 127,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008831000000100175,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5562385000000063,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005222000000344451,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-float_nan_data-1-0]",
                "duration": 0.5264455999999882,
                "run_index": 128,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008543999999801599,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5241417999999953,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005950000000325417,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[mean-float_nan_data-1-1]",
                "duration": 0.5212639000000081,
                "run_index": 129,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009276000000113527,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5188104000000067,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005982999999787353,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-int_data-None-0]",
                "duration": 4.150751500000069,
                "run_index": 130,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008582000000387779,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.1481862999999635,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008488000000284046,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-int_data-None-1]",
                "duration": 4.092620000000011,
                "run_index": 131,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008841000000074928,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.090130799999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1228: in needs_i8_conversion\n    is_datetime_or_timedelta_dtype(arr_or_dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1067: in is_datetime_or_timedelta_dtype\n    return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1640: in _is_dtype_type\n    elif is_list_like(arr_or_dtype):\npandas\\_libs\\lib.pyx:1033: in pandas._libs.lib.is_list_like\n    ???\npandas\\_libs\\lib.pyx:1038: in pandas._libs.lib.c_is_list_like\n    ???\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007209999999986394,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-int_data--1-0]",
                "duration": 3.5300953999999933,
                "run_index": 132,
                "setup": {
                    "name": "setup",
                    "duration": 0.000896399999987807,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5277457000000254,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 691, in all\nE       return self.groupby(level=level, axis=axis, sort=False).all(**kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 503, in all\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1429, in all\nE       return self._bool_agg(\"all\", skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1378, in _bool_agg\nE       return self._get_cythonized_result(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 2614, in _get_cythonized_result\nE       labels, _, ngroups = grouper.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005568999999923108,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-int_data--1-1]",
                "duration": 13.569129599999997,
                "run_index": 133,
                "setup": {
                    "name": "setup",
                    "duration": 0.000836499999991247,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 13.5667732,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:527: in df_equals\n    assert_frame_equal(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:756: in _get_ilevel_values\n    filled = take_1d(unique._values, level_codes, fill_value=unique._na_value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py:1708: in take_nd\n    indexer = ensure_int64(indexer, copy=False)\npandas\\_libs\\algos_common_helper.pxi:93: in pandas._libs.algos.ensure_int64\n    ???\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006834000000139895,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-int_data-0-0]",
                "duration": 3.896931499999937,
                "run_index": 134,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008686999999554246,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.8946955999999773,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 691, in all\nE       return self.groupby(level=level, axis=axis, sort=False).all(**kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 503, in all\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1429, in all\nE       return self._bool_agg(\"all\", skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1378, in _bool_agg\nE       return self._get_cythonized_result(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 2614, in _get_cythonized_result\nE       labels, _, ngroups = grouper.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004985000000488071,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-int_data-0-1]",
                "duration": 13.969500399999959,
                "run_index": 135,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008645999999998821,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 13.967142899999999,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:527: in df_equals\n    assert_frame_equal(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:756: in _get_ilevel_values\n    filled = take_1d(unique._values, level_codes, fill_value=unique._na_value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py:1708: in take_nd\n    indexer = ensure_int64(indexer, copy=False)\npandas\\_libs\\algos_common_helper.pxi:93: in pandas._libs.algos.ensure_int64\n    ???\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000628299999959836,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-int_data-1-0]",
                "duration": 4.136828299999991,
                "run_index": 136,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009289999999850806,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.134472300000027,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 691, in all\nE       return self.groupby(level=level, axis=axis, sort=False).all(**kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 503, in all\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1429, in all\nE       return self._bool_agg(\"all\", skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1378, in _bool_agg\nE       return self._get_cythonized_result(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 2614, in _get_cythonized_result\nE       labels, _, ngroups = grouper.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004979999999932261,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-int_data-1-1]",
                "duration": 3.362444500000038,
                "run_index": 137,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008690999999885207,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3599495000000275,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007568000000333086,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-float_nan_data-None-0]",
                "duration": 1.2512795999999753,
                "run_index": 138,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008788000000095053,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.248938599999974,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005833999999822481,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-float_nan_data-None-1]",
                "duration": 0.5286686000000032,
                "run_index": 139,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008589999999912834,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5263251000000082,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00062550000001238,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-float_nan_data--1-0]",
                "duration": 0.5085869000000116,
                "run_index": 140,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008578000000056818,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5062323999999876,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006389000000126543,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-float_nan_data--1-1]",
                "duration": 0.525783499999875,
                "run_index": 141,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008289999999533393,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5235595999999987,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000565899999969588,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-float_nan_data-0-0]",
                "duration": 0.5396817999999826,
                "run_index": 142,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008250000000202817,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5374713999999585,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005603999999834741,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-float_nan_data-0-1]",
                "duration": 0.5430661000000327,
                "run_index": 143,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008914000000004307,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.540027699999996,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0012556000000358836,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-float_nan_data-1-0]",
                "duration": 0.6101296000000502,
                "run_index": 144,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008372000000349544,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.607883500000014,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000571699999966313,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[all-float_nan_data-1-1]",
                "duration": 0.48575390000013385,
                "run_index": 145,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008615000000418149,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.48345800000004147,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005729000000087581,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-int_data-None-0]",
                "duration": 4.118233099999998,
                "run_index": 146,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008771999999908076,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.115798900000016,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006798000000003412,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-int_data-None-1]",
                "duration": 4.270304799999963,
                "run_index": 147,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008612999999968451,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.267928900000015,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1228: in needs_i8_conversion\n    is_datetime_or_timedelta_dtype(arr_or_dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1067: in is_datetime_or_timedelta_dtype\n    return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1640: in _is_dtype_type\n    elif is_list_like(arr_or_dtype):\npandas\\_libs\\lib.pyx:1033: in pandas._libs.lib.is_list_like\n    ???\npandas\\_libs\\lib.pyx:1038: in pandas._libs.lib.c_is_list_like\n    ???\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006532999999535605,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-int_data--1-0]",
                "duration": 3.521974299999954,
                "run_index": 148,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008650999999986198,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5196981999999934,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 746, in any\nE       return self.groupby(level=level, axis=axis, sort=False).any(**kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 132, in any\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1409, in any\nE       return self._bool_agg(\"any\", skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1378, in _bool_agg\nE       return self._get_cythonized_result(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 2614, in _get_cythonized_result\nE       labels, _, ngroups = grouper.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005458999999632397,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-int_data--1-1]",
                "duration": 13.406597899999952,
                "run_index": 149,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008579999999938082,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 13.404206899999963,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:527: in df_equals\n    assert_frame_equal(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:756: in _get_ilevel_values\n    filled = take_1d(unique._values, level_codes, fill_value=unique._na_value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py:1708: in take_nd\n    indexer = ensure_int64(indexer, copy=False)\npandas\\_libs\\algos_common_helper.pxi:93: in pandas._libs.algos.ensure_int64\n    ???\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006750000000010914,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-int_data-0-0]",
                "duration": 3.9769001999999887,
                "run_index": 150,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008669000000054439,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.9745302999999694,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 746, in any\nE       return self.groupby(level=level, axis=axis, sort=False).any(**kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 132, in any\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1409, in any\nE       return self._bool_agg(\"any\", skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1378, in _bool_agg\nE       return self._get_cythonized_result(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 2614, in _get_cythonized_result\nE       labels, _, ngroups = grouper.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000636100000008355,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-int_data-0-1]",
                "duration": 14.238735700000007,
                "run_index": 151,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008907000000135668,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 14.236341899999957,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:527: in df_equals\n    assert_frame_equal(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:756: in _get_ilevel_values\n    filled = take_1d(unique._values, level_codes, fill_value=unique._na_value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py:1708: in take_nd\n    indexer = ensure_int64(indexer, copy=False)\npandas\\_libs\\algos_common_helper.pxi:93: in pandas._libs.algos.ensure_int64\n    ???\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000612400000022717,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-int_data-1-0]",
                "duration": 4.8667206999999735,
                "run_index": 152,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008568000000082066,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.864297199999953,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:124: in test_apply_text_func_with_level\n    eval_general(\nmodin\\pandas\\test\\utils.py:705: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:684: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_udf.py:127: in <lambda>\n    lambda df, *args, **kwargs: df.apply(func, *args, **kwargs),\nmodin\\experimental\\cloud\\rpyc_proxy.py:568: in wrapper\n    return remote(self.__remote_end__, *args, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 359, in apply\nE       query_compiler = super(DataFrame, self).apply(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 793, in apply\nE       result = self._string_function(func, *args, **kwds)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 611, in _string_function\nE       return f(*args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 746, in any\nE       return self.groupby(level=level, axis=axis, sort=False).any(**kwargs)\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 132, in any\nE       return self._wrap_aggregation(\nE     File \"C:\\prog\\modin\\modin\\pandas\\groupby.py\", line 876, in _wrap_aggregation\nE       query_compiler=qc_method(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 65, in <lambda>\nE       return lambda *args, **kwargs: cls.caller(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 312, in caller\nE       new_modin_frame = qc._modin_frame.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2124, in groupby_reduce\nE       new_partitions = self._partition_mgr_cls.groupby_reduce(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 227, in groupby_reduce\nE       mapped_partitions = cls.map_partitions(partitions, map_func)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 474, in map_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 475, in <listcomp>\nE       [part.apply(preprocessed_map_func) for part in row_of_parts]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 116, in apply\nE       return PandasOnPythonFramePartition(func(self.data.copy(), *args, **kwargs))\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 410, in _map\nE       result = wrapper(df, other)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 397, in wrapper\nE       return cls.map(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 138, in map\nE       result = apply_func(\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\groupby_function.py\", line 54, in <lambda>\nE       return lambda df, *args, **kwargs: getattr(df, name)(*args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1409, in any\nE       return self._bool_agg(\"any\", skipna)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 1378, in _bool_agg\nE       return self._get_cythonized_result(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\groupby.py\", line 2614, in _get_cythonized_result\nE       labels, _, ngroups = grouper.group_info\nE     File \"pandas\\_libs\\properties.pyx\", line 33, in pandas._libs.properties.CachedProperty.__get__\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 300, in group_info\nE       comp_ids, obs_group_ids = self._get_compressed_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 318, in _get_compressed_codes\nE       all_codes = self.codes\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in codes\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\ops.py\", line 259, in <listcomp>\nE       return [ping.codes for ping in self.groupings]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 591, in codes\nE       self._make_codes()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\groupby\\grouper.py\", line 623, in _make_codes\nE       codes, uniques = algorithms.factorize(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 715, in factorize\nE       values, dtype = _ensure_data(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py\", line 142, in _ensure_data\nE       if needs_i8_conversion(values.dtype) or needs_i8_conversion(dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007099000000039268,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-int_data-1-1]",
                "duration": 4.168977000000041,
                "run_index": 153,
                "setup": {
                    "name": "setup",
                    "duration": 0.001065900000014608,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.166219500000011,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006257000000005064,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-float_nan_data-None-0]",
                "duration": 1.6498997999999574,
                "run_index": 154,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008971999999971558,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.647203999999988,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009013999999751832,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-float_nan_data-None-1]",
                "duration": 0.64650069999999,
                "run_index": 155,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014459999999871798,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.642910000000029,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006986999999867294,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-float_nan_data--1-0]",
                "duration": 0.543778800000041,
                "run_index": 156,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008756999999945947,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5414673000000221,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005601000000297063,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-float_nan_data--1-1]",
                "duration": 0.5472620999999549,
                "run_index": 157,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008609999999862339,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5450124999999844,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000527599999998074,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-float_nan_data-0-0]",
                "duration": 0.5304677000000311,
                "run_index": 158,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012735000000247965,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5272461999999791,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006745000000023538,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-float_nan_data-0-1]",
                "duration": 0.5369161000000418,
                "run_index": 159,
                "setup": {
                    "name": "setup",
                    "duration": 0.001268100000004324,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5337757000000352,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006041999999979453,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-float_nan_data-1-0]",
                "duration": 0.5585562999999638,
                "run_index": 160,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008616999999730979,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5562305999999921,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006023000000254797,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_text_func_with_level[any-float_nan_data-1-1]",
                "duration": 0.5760969000000387,
                "run_index": 161,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013824999999769716,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5727649000000383,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:125: in test_apply_text_func_with_level\n    pd.DataFrame(data, index=index),\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005670000000463915,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_args[args0-rows]",
                "duration": 3.847865699999943,
                "run_index": 162,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006612999999902058,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.845819199999994,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007238999999685802,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_args[args0-columns]",
                "duration": 4.235852600000044,
                "run_index": 163,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009029999999938809,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.233485900000005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005607000000509288,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_args[args1-rows]",
                "duration": 3.849890400000106,
                "run_index": 164,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006972000000473599,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.847800399999983,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006956000000286622,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_args[args1-columns]",
                "duration": 3.937316600000031,
                "run_index": 165,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010680999999976848,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.934508600000015,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006718000000205393,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_metadata",
                "duration": 0.18706599999995888,
                "run_index": 166,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004923999999846274,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18558849999999438,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004926999999952386,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[int_data-return self]",
                "duration": 3.3065800000000536,
                "run_index": 167,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007074000000102387,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.304606500000034,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005586999999991349,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[int_data-change index]",
                "duration": 3.3927916000000664,
                "run_index": 168,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006675000000200271,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3908591,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005975000000262298,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[int_data-return none]",
                "duration": 3.1064261999999303,
                "run_index": 169,
                "setup": {
                    "name": "setup",
                    "duration": 0.000854299999957675,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1040126000000328,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:168: in test_apply_udf\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007049999999821921,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[int_data-return empty]",
                "duration": 3.1820208999999977,
                "run_index": 170,
                "setup": {
                    "name": "setup",
                    "duration": 0.001062600000011571,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1793724999999995,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:168: in test_apply_udf\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:499: in df_equals\n    and df1.columns.equals(df2.columns)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 4459, in equals\nE       if is_object_dtype(self.dtype) and not is_object_dtype(other.dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 228, in is_object_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.object_))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005231999999750769,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[int_data-access self]",
                "duration": 3.3520220000000336,
                "run_index": 171,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010115000000041618,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3494069000000195,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005921000000057575,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[float_nan_data-return self]",
                "duration": 0.6171876000000793,
                "run_index": 172,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008734000000458764,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6145958999999834,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:169: in test_apply_udf\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008449000000041451,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[float_nan_data-change index]",
                "duration": 0.6258480999999279,
                "run_index": 173,
                "setup": {
                    "name": "setup",
                    "duration": 0.000886499999978696,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6235492999999792,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:169: in test_apply_udf\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005257999999912499,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[float_nan_data-return none]",
                "duration": 0.6181393000000526,
                "run_index": 174,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010014000000069245,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6156569000000331,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:169: in test_apply_udf\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00047960000000557557,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[float_nan_data-return empty]",
                "duration": 0.6126753000000349,
                "run_index": 175,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008642999999892709,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6104832000000329,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:169: in test_apply_udf\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004635000000234868,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_apply_udf[float_nan_data-access self]",
                "duration": 0.6220631999999569,
                "run_index": 176,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008052000000020598,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6198883999999794,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:169: in test_apply_udf\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005643999999733751,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_eval_df_use_case",
                "duration": 0.08134309999991274,
                "run_index": 177,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007603999999901134,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07937549999996918,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:179: in test_eval_df_use_case\n    modin_df = pd.DataFrame(frame_data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 546, in sanitize_array\nE       if is_object_dtype(subarr.dtype) and not is_object_or_str_dtype:\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 228, in is_object_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.object_))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004467999999633321,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_eval_df_arithmetic_subexpression",
                "duration": 0.06479279999996379,
                "run_index": 178,
                "setup": {
                    "name": "setup",
                    "duration": 0.00045779999999240317,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06282229999999345,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:207: in test_eval_df_arithmetic_subexpression\n    modin_df = pd.DataFrame(frame_data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 546, in sanitize_array\nE       if is_object_dtype(subarr.dtype) and not is_object_or_str_dtype:\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 228, in is_object_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.object_))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010548999999855369,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_filter[int_data]",
                "duration": 4.0048155000000065,
                "run_index": 179,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008083999999826119,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.00265950000005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005391999999915242,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_filter[float_nan_data]",
                "duration": 1.4647025999999528,
                "run_index": 180,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007628999999838015,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4625790999999708,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:216: in test_filter\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005977000000143562,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_pipe[int_data]",
                "duration": 4.19789140000006,
                "run_index": 181,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009026000000176282,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.195479700000021,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000606500000003507,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_pipe[float_nan_data]",
                "duration": 1.4408787000000416,
                "run_index": 182,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006852000000208136,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4389874000000304,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:242: in test_pipe\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005208999999695152,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_query[col1 < col2-int_data]",
                "duration": 3.4555856000000063,
                "run_index": 183,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010876000000052954,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.452842799999985,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005676000000107706,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_query[col1 < col2-float_nan_data]",
                "duration": 1.4491087999999195,
                "run_index": 184,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008244999999647007,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4469589999999926,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:273: in test_query\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005007999999975254,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_query[col3 > col4-int_data]",
                "duration": 4.090892899999915,
                "run_index": 185,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009154999999623215,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.088502900000037,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005589999999529027,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_query[col3 > col4-float_nan_data]",
                "duration": 0.6224981999999954,
                "run_index": 186,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008975000000077671,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6202064999999948,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:273: in test_query\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004966999999851396,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_query[col1 == col2-int_data]",
                "duration": 3.453112900000008,
                "run_index": 187,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008442000000172811,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.450849099999971,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005754000000024462,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_query[col1 == col2-float_nan_data]",
                "duration": 0.602011799999957,
                "run_index": 188,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009281999999757318,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.599421800000016,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:273: in test_query\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007335999999895648,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_query[(col2 > col1) and (col1 < col3)-int_data]",
                "duration": 3.3918247000000292,
                "run_index": 189,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007099000000039268,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3898087000000032,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005962000000181433,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_query[(col2 > col1) and (col1 < col3)-float_nan_data]",
                "duration": 0.7825055000000134,
                "run_index": 190,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007077999999864915,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7804503000000409,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:273: in test_query\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006395999999995183,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_query_after_insert",
                "duration": 0.3980398999999579,
                "run_index": 191,
                "setup": {
                    "name": "setup",
                    "duration": 0.000827399999991485,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.3958460000000059,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005390999999690393,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[sum-int_data]",
                "duration": 3.5123036999999613,
                "run_index": 192,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008159999999861611,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.510041199999989,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006304999999997563,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[sum-float_nan_data]",
                "duration": 0.6822089000000346,
                "run_index": 193,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008300000000076579,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6800438000000213,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:317: in test_transform\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005050999999980377,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[df sum-int_data]",
                "duration": 3.481337100000019,
                "run_index": 194,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006844000000114647,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4793581999999788,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006101000000171553,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[df sum-float_nan_data]",
                "duration": 0.5987797000000228,
                "run_index": 195,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006632000000195148,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5968913000000384,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:317: in test_transform\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005619999999453285,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[str-int_data]",
                "duration": 3.4818038000001934,
                "run_index": 196,
                "setup": {
                    "name": "setup",
                    "duration": 0.000976900000068781,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4791543000000047,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006957000000511471,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[str-float_nan_data]",
                "duration": 0.6445441999999275,
                "run_index": 197,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010538999999880616,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6419010999999273,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:317: in test_transform\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005353000000241082,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[sum mean-int_data]",
                "duration": 3.43093470000008,
                "run_index": 198,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010446000000001732,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4282706999999846,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005748000000949105,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[sum mean-float_nan_data]",
                "duration": 0.6921458000000484,
                "run_index": 199,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006938000000218381,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6902120999999397,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:317: in test_transform\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005461000000650529,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[sum df sum-int_data]",
                "duration": 3.2066573999998127,
                "run_index": 200,
                "setup": {
                    "name": "setup",
                    "duration": 0.001009399999929883,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.204031299999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006072999999560125,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[sum df sum-float_nan_data]",
                "duration": 0.6468122999998513,
                "run_index": 201,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006682999999156891,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6449402000000646,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:317: in test_transform\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005354999999553911,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[should raise TypeError-int_data]",
                "duration": 3.339782000000014,
                "run_index": 202,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010840999999572887,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.337057800000025,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005560000000741638,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[should raise TypeError-float_nan_data]",
                "duration": 0.659829899999977,
                "run_index": 203,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008775000000014188,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6573624000000109,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:317: in test_transform\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007124999999632564,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[sum sum-int_data]",
                "duration": 3.250861400000076,
                "run_index": 204,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009997000000794287,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2481491999999434,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007127999999738677,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_udf.py::test_transform[sum sum-float_nan_data]",
                "duration": 0.7060040999998591,
                "run_index": 205,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008639000000130181,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6804821999999149,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_udf.py:317: in test_transform\n    *create_test_dfs(data),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.023794099999918217,
                    "outcome": "passed"
                },
                "outcome": "failed"
            }
        ],
        "summary": {
            "passed": 57,
            "failed": 149,
            "num_tests": 206,
            "duration": 533.3307545185089
        },
        "created_at": "2021-07-28 21:37:50.868678"
    }
}