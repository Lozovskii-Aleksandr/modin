{
    "report": {
        "environment": {
            "Python": "3.8.11",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-rows-scalar]",
                "duration": 11.1987789,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 5.513137100000001,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17155460000000033,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009500999999989546,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-rows-series_or_list]",
                "duration": 0.8679757000000023,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014929000000005743,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8643011000000005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006888000000007111,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-columns-scalar]",
                "duration": 0.14441229999999905,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008184999999993892,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14212110000000067,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006541999999996051,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-columns-series_or_list]",
                "duration": 0.15234849999999867,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.000857899999999745,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14984679999999884,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007859000000003391,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-rows-scalar]",
                "duration": 0.14810170000000156,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.0018962000000009027,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1436080999999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007011999999999574,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-rows-series_or_list]",
                "duration": 0.7671668999999994,
                "run_index": 5,
                "setup": {
                    "name": "setup",
                    "duration": 0.000764000000000209,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7649556000000004,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00068329999999861,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-columns-scalar]",
                "duration": 0.16176100000000204,
                "run_index": 6,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008230000000004623,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15949900000000028,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006160000000008381,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-columns-series_or_list]",
                "duration": 0.15442130000000098,
                "run_index": 7,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008324999999995697,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15201120000000046,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007451000000013863,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-rows-scalar]",
                "duration": 0.14988450000000064,
                "run_index": 8,
                "setup": {
                    "name": "setup",
                    "duration": 0.002954700000000088,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1433094999999991,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006656000000013762,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-rows-series_or_list]",
                "duration": 0.8017524999999992,
                "run_index": 9,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007681999999995526,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7995543999999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006617000000002093,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-columns-scalar]",
                "duration": 0.1662662000000008,
                "run_index": 10,
                "setup": {
                    "name": "setup",
                    "duration": 0.000909899999999908,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1638263000000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006201000000007895,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-columns-series_or_list]",
                "duration": 0.17718709999999938,
                "run_index": 11,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010756999999994576,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17428630000000034,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007494000000001222,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-rows-scalar]",
                "duration": 0.16482059999999876,
                "run_index": 12,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008281999999990575,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16219859999999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000965600000000677,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-rows-series_or_list]",
                "duration": 0.7514793999999991,
                "run_index": 13,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008929999999995886,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7490407000000001,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006526999999998395,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-columns-scalar]",
                "duration": 0.15089279999999938,
                "run_index": 14,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012036999999995857,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14775440000000017,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007310000000000372,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-columns-series_or_list]",
                "duration": 0.15855709999999945,
                "run_index": 15,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007980999999990246,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15634570000000103,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000615200000000371,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-rows-scalar]",
                "duration": 0.16033090000000172,
                "run_index": 16,
                "setup": {
                    "name": "setup",
                    "duration": 0.001087200000000621,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15749490000000144,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006615999999990407,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-rows-series_or_list]",
                "duration": 0.7376820999999989,
                "run_index": 17,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008996000000003335,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7352408999999991,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006419999999991433,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-columns-scalar]",
                "duration": 0.15027499999999705,
                "run_index": 18,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007948999999989326,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14801010000000048,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006750999999987073,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-columns-series_or_list]",
                "duration": 0.16120579999999762,
                "run_index": 19,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008951999999986526,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1587405000000004,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006748999999999228,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-rows-scalar]",
                "duration": 0.0036359000000025787,
                "run_index": 20,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008286000000019556,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0014851999999976329,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:59: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004935000000010348,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-rows-series_or_list]",
                "duration": 0.0029194999999937465,
                "run_index": 21,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007229999999971426,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0007418000000001257,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:59: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007316999999993357,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-columns-scalar]",
                "duration": 0.1519724999999994,
                "run_index": 22,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008100999999989256,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14961950000000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007328000000015322,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-columns-series_or_list]",
                "duration": 0.1477158999999979,
                "run_index": 23,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007954000000012229,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14548599999999823,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000639099999997228,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-rows-scalar]",
                "duration": 0.15009870000000092,
                "run_index": 24,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009926000000000101,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1473475999999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007659000000010963,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-rows-series_or_list]",
                "duration": 0.7538463999999934,
                "run_index": 25,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007968999999974358,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7513040999999987,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009484999999997967,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-columns-scalar]",
                "duration": 0.14844109999999944,
                "run_index": 26,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010548999999997477,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14571229999999957,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006190000000003693,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-columns-series_or_list]",
                "duration": 0.15004590000000206,
                "run_index": 27,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007604000000007716,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14790220000000076,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006228999999997598,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-rows-scalar]",
                "duration": 0.14978100000000083,
                "run_index": 28,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007835000000007142,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1476033000000001,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006106999999992979,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-rows-series_or_list]",
                "duration": 0.7251709999999996,
                "run_index": 29,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012474000000004537,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7219456000000015,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007305999999971391,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-columns-scalar]",
                "duration": 0.14851840000000394,
                "run_index": 30,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007997000000017351,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14624919999999975,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006698000000007198,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-columns-series_or_list]",
                "duration": 0.14283629999999903,
                "run_index": 31,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007581999999999312,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14045469999999938,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008651999999997884,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-rows-scalar]",
                "duration": 0.14873509999999968,
                "run_index": 32,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008677000000005819,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14632329999999882,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006763999999996884,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-rows-series_or_list]",
                "duration": 0.7185421999999946,
                "run_index": 33,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007671999999985246,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7163766999999979,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006310999999996625,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-columns-scalar]",
                "duration": 0.14474850000000217,
                "run_index": 34,
                "setup": {
                    "name": "setup",
                    "duration": 0.000767700000000815,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14248230000000106,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007307999999994763,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-columns-series_or_list]",
                "duration": 0.1465605999999937,
                "run_index": 35,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007248999999980299,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14439139999999995,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007193999999977052,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-rows-scalar]",
                "duration": 0.14602699999999658,
                "run_index": 36,
                "setup": {
                    "name": "setup",
                    "duration": 0.001296299999999917,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14272079999999931,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007135999999974274,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-rows-series_or_list]",
                "duration": 0.7212084999999995,
                "run_index": 37,
                "setup": {
                    "name": "setup",
                    "duration": 0.000762999999999181,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7190812000000015,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006012999999995827,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-columns-scalar]",
                "duration": 0.14611019999999897,
                "run_index": 38,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008037999999999101,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14377269999999953,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000729899999999617,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-columns-series_or_list]",
                "duration": 0.15547380000000288,
                "run_index": 39,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008051000000008912,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1532385000000005,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006251000000006002,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-rows-scalar]",
                "duration": 0.15368450000000067,
                "run_index": 40,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009459999999990032,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1512178000000013,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005747000000013713,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-rows-series_or_list]",
                "duration": 0.7542556000000005,
                "run_index": 41,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008192999999998563,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7519226000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000694400000000428,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-columns-scalar]",
                "duration": 0.14828069999999727,
                "run_index": 42,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008051999999985071,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14595800000000025,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000712299999999999,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-columns-series_or_list]",
                "duration": 0.16672360000000097,
                "run_index": 43,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007890999999986548,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16457360000000065,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005718000000030088,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-rows-scalar]",
                "duration": 0.1496742000000033,
                "run_index": 44,
                "setup": {
                    "name": "setup",
                    "duration": 0.001032800000000833,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1469959000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006127000000013538,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-rows-series_or_list]",
                "duration": 0.7525958999999958,
                "run_index": 45,
                "setup": {
                    "name": "setup",
                    "duration": 0.000963299999998668,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7500558999999996,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000613399999998876,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-columns-scalar]",
                "duration": 0.142842899999998,
                "run_index": 46,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007668999999985715,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1406932999999988,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006158000000020536,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-columns-series_or_list]",
                "duration": 0.14641559999999743,
                "run_index": 47,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007659999999987122,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1437133000000017,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011702999999982922,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-rows-scalar]",
                "duration": 0.004227900000003615,
                "run_index": 48,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011484000000017147,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0008040999999998633,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:55: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011270000000003222,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-rows-series_or_list]",
                "duration": 0.003837299999997157,
                "run_index": 49,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011916999999996847,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004574999999995555,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:55: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000996399999998232,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-columns-scalar]",
                "duration": 0.14864510000000664,
                "run_index": 50,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012440000000033535,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1455055999999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006515000000000271,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-columns-series_or_list]",
                "duration": 0.152418100000002,
                "run_index": 51,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007546000000004938,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15024629999999917,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000662600000001845,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-rows-scalar]",
                "duration": 0.004134499999999264,
                "run_index": 52,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012217999999997176,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0012059999999998183,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:55: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004849000000000103,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-rows-series_or_list]",
                "duration": 0.002441800000003269,
                "run_index": 53,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007797000000024923,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00037839999999889073,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:55: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005039999999993938,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-columns-scalar]",
                "duration": 0.15995559999999998,
                "run_index": 54,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007429999999999382,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15786370000000005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006059000000000481,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-columns-series_or_list]",
                "duration": 0.15839920000000163,
                "run_index": 55,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008914000000004307,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15604779999999963,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:61: in test_math_functions\n    eval_general(\nmodin\\pandas\\test\\utils.py:721: in eval_general\n    values = execute_callable(\nmodin\\pandas\\test\\utils.py:700: in execute_callable\n    md_result = fn(modin_df, **md_kwargs)\nmodin\\pandas\\test\\dataframe\\test_binary.py:62: in <lambda>\n    *create_test_dfs(data), lambda df: getattr(df, op)(other(df, axis), axis=axis)\nmodin\\pandas\\test\\dataframe\\test_binary.py:39: in <lambda>\n    lambda df, axis: df.iloc[0] if axis == \"columns\" else list(df[df.columns[0]]),\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:602: in iloc\n    return DeliveringILocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005686000000011404,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-None-check_missing_value]",
                "duration": 0.0995996999999953,
                "run_index": 56,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008157999999980348,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09733059999999938,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006374999999998465,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-None-check_different_index]",
                "duration": 0.08423170000000013,
                "run_index": 57,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007713999999978682,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08201040000000148,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006785000000029129,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-3.0-check_missing_value]",
                "duration": 0.08238349999999528,
                "run_index": 58,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007671999999985246,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0802107999999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006382999999985373,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-3.0-check_different_index]",
                "duration": 0.04847559999999973,
                "run_index": 59,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007610999999982937,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04635370000000094,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005997000000022013,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-None-check_missing_value]",
                "duration": 0.09088729999999856,
                "run_index": 60,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008499999999997954,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08854699999999838,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006403000000005932,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-None-check_different_index]",
                "duration": 0.08241679999999718,
                "run_index": 61,
                "setup": {
                    "name": "setup",
                    "duration": 0.00090889999999888,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07995950000000107,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006394999999983497,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-3.0-check_missing_value]",
                "duration": 0.08230499999999807,
                "run_index": 62,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009760999999990361,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07970449999999829,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006483000000017114,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-3.0-check_different_index]",
                "duration": 0.045570199999996674,
                "run_index": 63,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007665999999986184,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.043266200000001476,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000770799999997962,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-None-check_missing_value]",
                "duration": 0.09047550000000015,
                "run_index": 64,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010256999999995742,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08776380000000117,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000660299999999836,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-None-check_different_index]",
                "duration": 0.0898785999999987,
                "run_index": 65,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009394000000000347,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08734640000000127,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006533999999973616,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-3.0-check_missing_value]",
                "duration": 0.08510749999999945,
                "run_index": 66,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010096999999973377,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0824567000000016,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006314000000031683,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-3.0-check_different_index]",
                "duration": 0.041335700000001196,
                "run_index": 67,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007964000000022509,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03775890000000004,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001983999999996655,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-None-check_missing_value]",
                "duration": 0.07970740000000731,
                "run_index": 68,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008141000000030374,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07745040000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006288000000012062,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-None-check_different_index]",
                "duration": 0.08298680000000402,
                "run_index": 69,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007872000000013202,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08079190000000125,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006205000000001348,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-3.0-check_missing_value]",
                "duration": 0.07994930000000267,
                "run_index": 70,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007888000000022544,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07757149999999768,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008002000000004728,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-3.0-check_different_index]",
                "duration": 0.04195959999999843,
                "run_index": 71,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008990000000004272,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.039483999999998076,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006775999999995008,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-None-check_missing_value]",
                "duration": 0.08580920000000347,
                "run_index": 72,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007834000000030983,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08353739999999732,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007049999999999557,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-None-check_different_index]",
                "duration": 0.08916109999999833,
                "run_index": 73,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007638999999990403,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08698520000000087,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006480999999993742,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-3.0-check_missing_value]",
                "duration": 0.0830036000000014,
                "run_index": 74,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007681000000019367,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0807893999999969,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006780000000006225,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-3.0-check_different_index]",
                "duration": 0.04089910000000074,
                "run_index": 75,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007665000000010025,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.038672399999999385,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006936999999993532,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-None-check_missing_value]",
                "duration": 0.08616939999999573,
                "run_index": 76,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007659999999987122,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08389569999999935,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007416999999989571,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-None-check_different_index]",
                "duration": 0.08287549999999655,
                "run_index": 77,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008039999999986946,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08054200000000122,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007254999999979361,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-3.0-check_missing_value]",
                "duration": 0.08275210000000044,
                "run_index": 78,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007431000000011068,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08061790000000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006479999999982056,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-3.0-check_different_index]",
                "duration": 0.041702400000001916,
                "run_index": 79,
                "setup": {
                    "name": "setup",
                    "duration": 0.000979799999999642,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0390782999999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006645000000027323,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-None-check_missing_value]",
                "duration": 0.08512830000000093,
                "run_index": 80,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007654999999999745,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08292270000000102,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006745999999999697,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-None-check_different_index]",
                "duration": 0.09106809999999754,
                "run_index": 81,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010133000000003278,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0884471999999974,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005942999999994925,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-3.0-check_missing_value]",
                "duration": 0.08521119999999982,
                "run_index": 82,
                "setup": {
                    "name": "setup",
                    "duration": 0.000859200000000726,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08284719999999979,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006455999999985806,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-3.0-check_different_index]",
                "duration": 0.05231389999999436,
                "run_index": 83,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014244999999988295,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04884119999999825,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006236999999984505,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-None-check_missing_value]",
                "duration": 0.08702580000000637,
                "run_index": 84,
                "setup": {
                    "name": "setup",
                    "duration": 0.000809500000002572,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08475370000000026,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006531000000009612,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-None-check_different_index]",
                "duration": 0.09086209999999184,
                "run_index": 85,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014468999999976973,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08731959999999717,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006486999999992804,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-3.0-check_missing_value]",
                "duration": 0.08534110000000084,
                "run_index": 86,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008152000000016812,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08306919999999707,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006415000000004056,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-3.0-check_different_index]",
                "duration": 0.05395129999999426,
                "run_index": 87,
                "setup": {
                    "name": "setup",
                    "duration": 0.000765699999998759,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.051801399999998665,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006184999999980789,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-None-check_missing_value]",
                "duration": 0.08273589999999587,
                "run_index": 88,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007671999999985246,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08032619999999824,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008753000000005784,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-None-check_different_index]",
                "duration": 0.08793179999999978,
                "run_index": 89,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007993000000006134,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08551319999999762,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008200000000009311,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-3.0-check_missing_value]",
                "duration": 0.08279560000000075,
                "run_index": 90,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008797999999998751,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08035660000000178,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006793999999992195,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-3.0-check_different_index]",
                "duration": 0.04291719999999444,
                "run_index": 91,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007813999999974897,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.040668499999998886,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006859000000005722,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-None-check_missing_value]",
                "duration": 0.08387289999999581,
                "run_index": 92,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007593999999997436,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08156899999999823,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007850999999980957,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-None-check_different_index]",
                "duration": 0.08341599999999616,
                "run_index": 93,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007698999999981027,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08124469999999917,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006315000000007842,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-3.0-check_missing_value]",
                "duration": 0.08690200000000203,
                "run_index": 94,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007654999999999745,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08466549999999984,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000705500000002246,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-3.0-check_different_index]",
                "duration": 0.042602200000001034,
                "run_index": 95,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007577000000011935,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04042789999999741,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000658900000001239,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-None-check_missing_value]",
                "duration": 0.0876993999999982,
                "run_index": 96,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007765000000006239,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08535639999999844,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007899999999985141,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-None-check_different_index]",
                "duration": 0.08083839999999753,
                "run_index": 97,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007914999999982797,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07861760000000118,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006377999999997996,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-3.0-check_missing_value]",
                "duration": 0.10172549999999703,
                "run_index": 98,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007628999999980124,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09948520000000016,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007145000000008395,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-3.0-check_different_index]",
                "duration": 0.04553650000000076,
                "run_index": 99,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011316000000007875,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.042647599999998675,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006257000000005064,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-None-check_missing_value]",
                "duration": 0.09404540000000239,
                "run_index": 100,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008243000000014433,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09170719999999832,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006896000000011782,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-None-check_different_index]",
                "duration": 0.08178459999999532,
                "run_index": 101,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007583999999987157,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07959629999999862,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006714999999992699,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-3.0-check_missing_value]",
                "duration": 0.08181019999999606,
                "run_index": 102,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007711999999990837,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07965809999999962,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00060969999999827,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-3.0-check_different_index]",
                "duration": 0.043280099999996935,
                "run_index": 103,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007674999999984777,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.039949699999997534,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001795400000002445,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-None-check_missing_value]",
                "duration": 0.086443500000005,
                "run_index": 104,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008163000000003251,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08412670000000233,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006842000000020221,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-None-check_different_index]",
                "duration": 0.08434789999999737,
                "run_index": 105,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010104999999995812,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08162089999999722,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007060000000009836,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-3.0-check_missing_value]",
                "duration": 0.08234389999999792,
                "run_index": 106,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010373999999977457,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07949930000000194,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007698000000004868,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-3.0-check_different_index]",
                "duration": 0.04053629999999586,
                "run_index": 107,
                "setup": {
                    "name": "setup",
                    "duration": 0.001043299999999192,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03758549999999872,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008641999999987604,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-None-check_missing_value]",
                "duration": 0.08815380000000062,
                "run_index": 108,
                "setup": {
                    "name": "setup",
                    "duration": 0.0024580000000007374,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08257189999999781,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006659000000013293,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-None-check_different_index]",
                "duration": 0.08749660000000503,
                "run_index": 109,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008098000000025252,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08531139999999837,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005656000000016093,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-3.0-check_missing_value]",
                "duration": 0.08329349999999636,
                "run_index": 110,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008290999999971405,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08096860000000206,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006667000000000201,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-3.0-check_different_index]",
                "duration": 0.04127109999999945,
                "run_index": 111,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007646000000001152,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.038196800000001474,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0015450999999977455,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[add]",
                "duration": 0.14313140000000146,
                "run_index": 112,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009166000000000452,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14079900000000123,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000499200000000144,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[radd]",
                "duration": 0.1414268000000014,
                "run_index": 113,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006070999999998605,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13960400000000206,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006085999999996261,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[sub]",
                "duration": 0.1436714000000059,
                "run_index": 114,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009307000000013943,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1412729000000006,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005371000000025106,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rsub]",
                "duration": 0.1425313000000017,
                "run_index": 115,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006564000000004455,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14024200000000064,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009765000000001578,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[mod]",
                "duration": 0.1596339999999934,
                "run_index": 116,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007297999999984484,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1576615999999973,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005127999999992028,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rmod]",
                "duration": 0.1620598999999956,
                "run_index": 117,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006391999999983966,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16025159999999872,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005299000000000831,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[pow]",
                "duration": 0.15416380000000274,
                "run_index": 118,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006287000000000376,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15230670000000046,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005997000000022013,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rpow]",
                "duration": 0.1622678000000093,
                "run_index": 119,
                "setup": {
                    "name": "setup",
                    "duration": 0.004218900000001469,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15256740000000235,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0012626000000039994,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[truediv]",
                "duration": 0.17356639999999146,
                "run_index": 120,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008705999999989444,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17124729999999744,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005778999999961343,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rtruediv]",
                "duration": 0.176635399999995,
                "run_index": 121,
                "setup": {
                    "name": "setup",
                    "duration": 0.0016598999999999364,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1728020999999984,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005134999999967249,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[mul]",
                "duration": 0.16031620000000402,
                "run_index": 122,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013353000000009274,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15714220000000267,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005033999999994876,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rmul]",
                "duration": 0.37162929999999506,
                "run_index": 123,
                "setup": {
                    "name": "setup",
                    "duration": 0.000620800000000088,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.36846669999999904,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0019209999999958427,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[floordiv]",
                "duration": 0.33028670000000915,
                "run_index": 124,
                "setup": {
                    "name": "setup",
                    "duration": 0.000923300000003735,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.3246046000000007,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.003835500000000991,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rfloordiv]",
                "duration": 0.14597939999998744,
                "run_index": 125,
                "setup": {
                    "name": "setup",
                    "duration": 0.001160299999995118,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14295419999999837,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007045999999988339,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[truediv-divide]",
                "duration": 0.004095800000001759,
                "run_index": 126,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007726999999988493,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0018315000000015402,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007189000000025203,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[truediv-div]",
                "duration": 0.003162299999999618,
                "run_index": 127,
                "setup": {
                    "name": "setup",
                    "duration": 0.001051799999999048,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004963000000017814,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005623999999997409,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rtruediv-rdiv]",
                "duration": 0.01105690000000692,
                "run_index": 128,
                "setup": {
                    "name": "setup",
                    "duration": 0.0025335000000055174,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.005320999999995024,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006689000000008605,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[mul-multiply]",
                "duration": 0.0040943999999996095,
                "run_index": 129,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010301999999953182,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00047590000000496957,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0015581000000040035,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[sub-subtract]",
                "duration": 0.014148399999996286,
                "run_index": 130,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012079999999983215,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.010898099999998578,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008343000000010647,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[add-__add__]",
                "duration": 0.019928399999997737,
                "run_index": 131,
                "setup": {
                    "name": "setup",
                    "duration": 0.00837810000000161,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0019267999999996732,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001245399999994845,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[radd-__radd__]",
                "duration": 0.007614000000003784,
                "run_index": 132,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013677999999970325,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.003798200000005636,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010802000000040834,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[truediv-__truediv__]",
                "duration": 0.006203099999993356,
                "run_index": 133,
                "setup": {
                    "name": "setup",
                    "duration": 0.002198100000001091,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000454399999995303,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001352499999995871,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rtruediv-__rtruediv__]",
                "duration": 0.008495999999986736,
                "run_index": 134,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008840999999932819,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0039002999999979693,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0028275000000022033,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[floordiv-__floordiv__]",
                "duration": 0.03007239999999456,
                "run_index": 135,
                "setup": {
                    "name": "setup",
                    "duration": 0.014483499999997207,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005086000000034119,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005967999999967333,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rfloordiv-__rfloordiv__]",
                "duration": 0.0112439999999836,
                "run_index": 136,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014921999999941704,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0008948999999986995,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00736469999999656,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[mod-__mod__]",
                "duration": 0.0037607000000008384,
                "run_index": 137,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011092000000019198,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005313999999998487,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010108999999971502,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rmod-__rmod__]",
                "duration": 0.02075399999999661,
                "run_index": 138,
                "setup": {
                    "name": "setup",
                    "duration": 0.0059309999999968,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.005869300000000521,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0030227000000024873,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[mul-__mul__]",
                "duration": 0.016963599999989754,
                "run_index": 139,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015779999999949723,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0022593999999998005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.011548200000000008,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rmul-__rmul__]",
                "duration": 0.00394749999999533,
                "run_index": 140,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013387999999991962,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000598199999998883,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006716999999980544,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[pow-__pow__]",
                "duration": 0.014209999999998502,
                "run_index": 141,
                "setup": {
                    "name": "setup",
                    "duration": 0.002464199999998584,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0007061000000021522,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.008575499999999181,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rpow-__rpow__]",
                "duration": 0.006605300000003922,
                "run_index": 142,
                "setup": {
                    "name": "setup",
                    "duration": 0.0019081000000014114,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0013843999999991752,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0014047000000019239,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[sub-__sub__]",
                "duration": 0.005992300000002615,
                "run_index": 143,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014956999999995446,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0010690000000010969,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001931900000002429,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rsub-__rsub__]",
                "duration": 0.003276699999993582,
                "run_index": 144,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010937999999995895,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005193999999946186,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005696999999997843,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-as_left]",
                "duration": 0.10343490000001054,
                "run_index": 145,
                "setup": {
                    "name": "setup",
                    "duration": 0.006444900000005305,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08960609999999747,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009390000000024656,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-4]",
                "duration": 0.07790359999999197,
                "run_index": 146,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010459999999952174,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07519270000000233,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006188999999992006,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-4.0]",
                "duration": 0.08513649999999018,
                "run_index": 147,
                "setup": {
                    "name": "setup",
                    "duration": 0.000858299999997314,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08255839999999637,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008614999999991824,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-a]",
                "duration": 0.07809609999998912,
                "run_index": 148,
                "setup": {
                    "name": "setup",
                    "duration": 0.0017197999999964964,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07394579999999706,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007106999999990649,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-as_left]",
                "duration": 0.09086590000000427,
                "run_index": 149,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010018999999985567,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08817530000000318,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006868000000039842,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-4]",
                "duration": 0.07998540000000531,
                "run_index": 150,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008927000000014118,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07748370000000193,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007163000000005582,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-4.0]",
                "duration": 0.08363799999999344,
                "run_index": 151,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011591999999964742,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08065990000000056,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006596999999999298,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-a]",
                "duration": 0.056811999999993645,
                "run_index": 152,
                "setup": {
                    "name": "setup",
                    "duration": 0.0018413999999964403,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.052531199999997114,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005980000000036512,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-as_left]",
                "duration": 0.09451059999999956,
                "run_index": 153,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009427000000030716,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0918464999999955,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007786999999979116,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-4]",
                "duration": 0.08569700000000324,
                "run_index": 154,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015423000000041043,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08193859999999376,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006738000000012789,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-4.0]",
                "duration": 0.08210629999999952,
                "run_index": 155,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010854000000009023,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07932170000000127,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000613799999996445,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-a]",
                "duration": 0.03890159999998133,
                "run_index": 156,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011777999999935673,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.035686599999998236,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008593999999959578,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-as_left]",
                "duration": 0.10052550000000338,
                "run_index": 157,
                "setup": {
                    "name": "setup",
                    "duration": 0.0032840000000007308,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09324339999999864,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007141000000032705,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-4]",
                "duration": 0.08332869999999559,
                "run_index": 158,
                "setup": {
                    "name": "setup",
                    "duration": 0.00133170000000149,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07995069999999771,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007145999999949026,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-4.0]",
                "duration": 0.07773989999999742,
                "run_index": 159,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010465000000010605,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07496829999999477,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006786000000005288,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-a]",
                "duration": 0.03756460000001027,
                "run_index": 160,
                "setup": {
                    "name": "setup",
                    "duration": 0.000904400000003136,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03498350000000272,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007723000000012803,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-as_left]",
                "duration": 0.0740131999999889,
                "run_index": 161,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012424999999964825,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0708263999999943,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00070180000000164,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-4]",
                "duration": 0.07968919999999002,
                "run_index": 162,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013566999999952145,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07630650000000117,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006692999999984295,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-4.0]",
                "duration": 0.08042869999999169,
                "run_index": 163,
                "setup": {
                    "name": "setup",
                    "duration": 0.001025099999999668,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07770399999999711,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006744999999952483,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-a]",
                "duration": 0.03738440000000054,
                "run_index": 164,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010902000000001522,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03448840000000075,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007155999999994833,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-as_left]",
                "duration": 0.07556540000000922,
                "run_index": 165,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009241000000059785,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07293500000000108,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007821999999961804,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-4]",
                "duration": 0.08029700000000162,
                "run_index": 166,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011755000000022164,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07678359999999884,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011623999999983425,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-4.0]",
                "duration": 0.06797980000001047,
                "run_index": 167,
                "setup": {
                    "name": "setup",
                    "duration": 0.00132520000000369,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06453410000000304,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007953000000000543,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-a]",
                "duration": 0.0860167999999959,
                "run_index": 168,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011910999999997784,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08299509999999799,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006394999999983497,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-as_left]",
                "duration": 0.30251660000001124,
                "run_index": 169,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011021000000042136,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.29950039999999944,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008120000000033656,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-4]",
                "duration": 0.26282079999999297,
                "run_index": 170,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008681999999993195,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2604017999999968,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006825999999975352,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-4.0]",
                "duration": 0.4269975000000059,
                "run_index": 171,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008606000000028757,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4209782000000004,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.004298099999999749,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-a]",
                "duration": 0.32991249999999894,
                "run_index": 172,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012514000000010128,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.32674459999999783,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006650999999990859,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-as_left]",
                "duration": 0.552917800000003,
                "run_index": 173,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011361999999977002,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5498595000000037,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007859000000038918,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-4]",
                "duration": 0.32534069999999815,
                "run_index": 174,
                "setup": {
                    "name": "setup",
                    "duration": 0.001054799999998579,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.32260639999999796,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006247000000030312,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-4.0]",
                "duration": 0.24975379999999348,
                "run_index": 175,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011299999999963006,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2468507000000031,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006430999999977871,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-a]",
                "duration": 0.2113752000000062,
                "run_index": 176,
                "setup": {
                    "name": "setup",
                    "duration": 0.002669500000003211,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2053750999999977,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006611000000020795,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-as_left]",
                "duration": 0.23919630000001035,
                "run_index": 177,
                "setup": {
                    "name": "setup",
                    "duration": 0.000855100000002551,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.23661910000000574,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000866999999999507,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-4]",
                "duration": 0.3839181000000025,
                "run_index": 178,
                "setup": {
                    "name": "setup",
                    "duration": 0.001050300000002835,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.3811363000000014,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006811999999953855,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-4.0]",
                "duration": 0.22424769999999938,
                "run_index": 179,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009557999999998401,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.22173990000000288,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000596199999996827,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-a]",
                "duration": 0.1998993999999925,
                "run_index": 180,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012821999999985678,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19662149999999912,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007134999999962588,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-as_left]",
                "duration": 0.3071464000000077,
                "run_index": 181,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009567000000032522,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.3045024999999981,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007305000000030759,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-4]",
                "duration": 0.3525799999999961,
                "run_index": 182,
                "setup": {
                    "name": "setup",
                    "duration": 0.001167299999998761,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.349362499999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008829000000005749,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-4.0]",
                "duration": 0.22246550000000553,
                "run_index": 183,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013835000000028685,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21910139999999956,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005971000000002391,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-a]",
                "duration": 0.16482100000001054,
                "run_index": 184,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009064000000051919,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16232300000000066,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006851999999994973,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-as_left]",
                "duration": 0.2266460999999893,
                "run_index": 185,
                "setup": {
                    "name": "setup",
                    "duration": 0.000877199999997913,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2241057999999967,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007858999999967864,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-4]",
                "duration": 0.209644300000015,
                "run_index": 186,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013162000000050966,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20646630000000243,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005456000000023664,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-4.0]",
                "duration": 0.22209469999999953,
                "run_index": 187,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008355000000008772,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21977799999999803,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006456999999997493,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-a]",
                "duration": 0.21541719999999742,
                "run_index": 188,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011858999999958542,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21185700000000196,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011884000000037531,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-as_left]",
                "duration": 0.2282337000000041,
                "run_index": 189,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010519000000002166,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.22495650000000467,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001173399999998992,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-4]",
                "duration": 0.2109982000000059,
                "run_index": 190,
                "setup": {
                    "name": "setup",
                    "duration": 0.001236400000003357,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2079070999999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006182999999992944,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-4.0]",
                "duration": 0.20126870000000707,
                "run_index": 191,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011140000000011696,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19836380000000275,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006769000000019787,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-a]",
                "duration": 0.19852480000000128,
                "run_index": 192,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007672999999996932,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19626820000000578,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007219999999961146,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-eq]",
                "duration": 0.14356210000000402,
                "run_index": 193,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006938000000005218,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14164819999999878,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005263000000041984,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-ge]",
                "duration": 0.15601160000000647,
                "run_index": 194,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006681999999997856,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15411780000000164,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005574000000052592,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-gt]",
                "duration": 0.16970239999999848,
                "run_index": 195,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010831999999965092,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.166739800000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007962000000034664,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-le]",
                "duration": 0.13486460000000022,
                "run_index": 196,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007726999999988493,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13279010000000113,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005291000000013923,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-lt]",
                "duration": 0.1489508000000015,
                "run_index": 197,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007761000000030549,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1468384999999941,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005601000000012846,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-ne]",
                "duration": 0.17060490000000073,
                "run_index": 198,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007439000000033502,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1685276999999985,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005893999999955213,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-eq]",
                "duration": 0.3748077000000052,
                "run_index": 199,
                "setup": {
                    "name": "setup",
                    "duration": 0.0017296999999985019,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.37078800000000456,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005603000000036218,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-ge]",
                "duration": 0.3565144000000089,
                "run_index": 200,
                "setup": {
                    "name": "setup",
                    "duration": 0.000938500000003728,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.3540617000000026,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005756999999988466,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-gt]",
                "duration": 0.2950433999999902,
                "run_index": 201,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008277999999961594,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2928625999999994,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005251999999984491,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-le]",
                "duration": 0.3284152999999961,
                "run_index": 202,
                "setup": {
                    "name": "setup",
                    "duration": 0.001012899999999206,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.32575549999999964,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000633999999998025,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-lt]",
                "duration": 0.3427104999999955,
                "run_index": 203,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007313999999993825,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.34068690000000146,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000560799999995254,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-ne]",
                "duration": 0.3056591999999938,
                "run_index": 204,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007404999999991446,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.3036438999999973,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:503: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005342999999982112,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_equals",
                "duration": 0.14210990000000123,
                "run_index": 205,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008857999999989374,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13969620000000305,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006421000000003119,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_ser-True]",
                "duration": 0.012584699999997895,
                "run_index": 206,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015677999999965664,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.008775200000002314,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006739000000024475,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_ser-False]",
                "duration": 0.009992999999994367,
                "run_index": 207,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007909999999995421,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.007805300000001125,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006056999999941581,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_df-True]",
                "duration": 0.010964799999996444,
                "run_index": 208,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007531999999983441,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.008821799999999769,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006365999999999872,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_df-False]",
                "duration": 0.012788100000015845,
                "run_index": 209,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012365000000045256,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.009567900000000407,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007472000000063872,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_same_name-True]",
                "duration": 0.008549200000004475,
                "run_index": 210,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008015000000014538,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.005936300000001893,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001009899999999675,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_same_name-False]",
                "duration": 0.009675600000008444,
                "run_index": 211,
                "setup": {
                    "name": "setup",
                    "duration": 0.001008400000003462,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.007084000000006085,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005747999999954345,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_different_name-True]",
                "duration": 0.008781200000001377,
                "run_index": 212,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007713999999978682,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00660609999999906,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006323000000065804,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_different_name-False]",
                "duration": 0.00757390000000413,
                "run_index": 213,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007561000000038121,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.005470799999997666,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005908999999988396,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_ser-True]",
                "duration": 0.010318200000007494,
                "run_index": 214,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009357000000065341,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.007801999999998088,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006447999999963372,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_ser-False]",
                "duration": 0.009586599999998668,
                "run_index": 215,
                "setup": {
                    "name": "setup",
                    "duration": 0.001294299999997861,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.006379199999997809,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006188000000051375,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_df-True]",
                "duration": 0.010233699999993462,
                "run_index": 216,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012425999999976511,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00710899999999981,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006394999999983497,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_df-False]",
                "duration": 0.008670899999991377,
                "run_index": 217,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008468999999990956,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.006420999999996013,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005560999999971727,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_same_name-True]",
                "duration": 0.008646999999996297,
                "run_index": 218,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007907999999972048,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00644760000000133,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006178000000005568,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_same_name-False]",
                "duration": 0.011868200000016316,
                "run_index": 219,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014774000000059573,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.007745900000003303,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011675000000010982,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_different_name-True]",
                "duration": 0.012115999999998905,
                "run_index": 220,
                "setup": {
                    "name": "setup",
                    "duration": 0.002554799999998636,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.006237200000001053,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007692000000005805,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_different_name-False]",
                "duration": 0.01065600000000444,
                "run_index": 221,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008890000000008058,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0077187999999992485,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:197: in test_mismatched_row_partitions\n    modin_df, pandas_df = modin_df1.loc[:2], pandas_df1.loc[:2]\nmodin\\experimental\\cloud\\rpyc_proxy.py:483: in __getattribute__\n    return oget(self, type(self))\nmodin\\experimental\\cloud\\rpyc_proxy.py:598: in loc\n    return DeliveringLocIndexer(self.__remote_end__)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011592000000035796,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_duplicate_indexes",
                "duration": 0.09296069999999901,
                "run_index": 222,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007029000000002839,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07015609999999839,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.02139880000000005,
                    "outcome": "passed"
                },
                "outcome": "passed"
            }
        ],
        "summary": {
            "passed": 161,
            "failed": 56,
            "xfailed": 6,
            "num_tests": 223,
            "duration": 49.04726243019104
        },
        "created_at": "2021-11-27 20:15:29.376968"
    }
}