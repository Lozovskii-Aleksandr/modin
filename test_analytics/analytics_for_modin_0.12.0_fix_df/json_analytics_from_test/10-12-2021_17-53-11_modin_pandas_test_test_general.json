{
    "report": {
        "environment": {
            "Python": "3.8.11",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/test_general.py::test_isna[int_data]",
                "duration": 10.457928199999998,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 5.1307607,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1948206999999993,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0015860999999990355,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_isna[float_nan_data]",
                "duration": 0.23680650000000192,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006038999999997685,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.23506520000000108,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005335000000012968,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_isnull[int_data]",
                "duration": 0.09172500000000028,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006675999999998794,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0898134000000006,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005763999999999214,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_isnull[float_nan_data]",
                "duration": 0.23474479999999964,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005918000000004753,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.232979499999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005816999999996852,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_notna[int_data]",
                "duration": 0.0965100000000021,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005944000000006611,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0947136000000004,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006076000000003745,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_notna[float_nan_data]",
                "duration": 0.21607589999999988,
                "run_index": 5,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006054999999989263,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21437280000000136,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004921000000006615,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_notnull[int_data]",
                "duration": 0.09787480000000137,
                "run_index": 6,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006213000000006019,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09592010000000073,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007120999999994382,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_notnull[float_nan_data]",
                "duration": 0.23124379999999967,
                "run_index": 7,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006342999999997545,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.22935700000000026,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006181999999999022,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge",
                "duration": 0.3253402999999988,
                "run_index": 8,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004761999999995936,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.32381679999999946,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005711000000001576,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_ordered",
                "duration": 0.26889830000000003,
                "run_index": 9,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004852999999993557,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2674917000000008,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:180: in test_merge_ordered\n    df = pd.merge_ordered(\nmodin\\pandas\\general.py:118: in merge_ordered\n    pandas.merge_ordered(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:310: in merge_ordered\n    result, _ = _groupby_and_merge(left_by, left, right, lambda x, y: _merger(x, y))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:167: in _groupby_and_merge\n    merged = merge_pieces(lhs, rhs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:310: in <lambda>\n    result, _ = _groupby_and_merge(left_by, left, right, lambda x, y: _merger(x, y))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:290: in _merger\n    op = _OrderedMerge(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1623: in __init__\n    _MergeOperation.__init__(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:703: in __init__\n    self._maybe_coerce_merge_keys()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1284: in _maybe_coerce_merge_keys\n    self.left = self.left.assign(**{name: self.left[name].astype(typ)})\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Cannot interpret '<class 'object'>' as a data type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 5815, in astype\nE       new_data = self._mgr.astype(dtype=dtype, copy=copy, errors=errors)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 418, in astype\nE       return self.apply(\"astype\", dtype=dtype, copy=copy, errors=errors)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 327, in apply\nE       applied = getattr(b, f)(**kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\blocks.py\", line 591, in astype\nE       new_values = astype_array_safe(values, dtype, copy=copy, errors=errors)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1306, in astype_array_safe\nE       dtype = pandas_dtype(dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1776, in pandas_dtype\nE       npdtype = np.dtype(dtype)\nE   TypeError: Cannot interpret '<class 'object'>' as a data type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00043600000000054706,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof",
                "duration": 0.04895849999999946,
                "run_index": 10,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005357999999997531,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.047374200000000144,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:194: in test_merge_asof\n    df = pd.merge_asof(left, right, on=\"a\")\nmodin\\pandas\\general.py:247: in merge_asof\n    left_pandas_limited = pandas.DataFrame(left_pandas_limited, index=left.index)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py:614: in __init__\n    mgr = dict_to_mgr(data, index, columns, dtype=dtype, copy=copy, typ=manager)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:464: in dict_to_mgr\n    return arrays_to_mgr(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:135: in arrays_to_mgr\n    return create_block_manager_from_arrays(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1773: in create_block_manager_from_arrays\n    blocks = _form_blocks(arrays, names, axes, consolidate)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1838: in _form_blocks\n    numeric_blocks = _multi_blockify(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1928: in _multi_blockify\n    values, placement = _stack_arrays(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1957: in _stack_arrays\n    stacked = np.empty(shape, dtype=dtype)\nE   TypeError: Cannot interpret 'dtype('int64')' as a data type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005126999999998105,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof_on_variations",
                "duration": 0.07660260000000108,
                "run_index": 11,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005240999999998053,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07505730000000099,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:247: in test_merge_asof_on_variations\n    modin_merged = pd.merge_asof(modin_left, modin_right, **on_arguments)\nmodin\\pandas\\general.py:247: in merge_asof\n    left_pandas_limited = pandas.DataFrame(left_pandas_limited, index=left.index)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py:614: in __init__\n    mgr = dict_to_mgr(data, index, columns, dtype=dtype, copy=copy, typ=manager)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:464: in dict_to_mgr\n    return arrays_to_mgr(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:135: in arrays_to_mgr\n    return create_block_manager_from_arrays(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1773: in create_block_manager_from_arrays\n    blocks = _form_blocks(arrays, names, axes, consolidate)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1838: in _form_blocks\n    numeric_blocks = _multi_blockify(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1928: in _multi_blockify\n    values, placement = _stack_arrays(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1957: in _stack_arrays\n    stacked = np.empty(shape, dtype=dtype)\nE   TypeError: Cannot interpret 'dtype('int64')' as a data type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004971000000004722,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof_suffixes",
                "duration": 0.055362800000001045,
                "run_index": 12,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005356000000009686,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05363399999999885,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:265: in test_merge_asof_suffixes\n    modin_merged = pd.merge_asof(\nmodin\\pandas\\general.py:247: in merge_asof\n    left_pandas_limited = pandas.DataFrame(left_pandas_limited, index=left.index)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py:614: in __init__\n    mgr = dict_to_mgr(data, index, columns, dtype=dtype, copy=copy, typ=manager)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:464: in dict_to_mgr\n    return arrays_to_mgr(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:135: in arrays_to_mgr\n    return create_block_manager_from_arrays(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1773: in create_block_manager_from_arrays\n    blocks = _form_blocks(arrays, names, axes, consolidate)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1838: in _form_blocks\n    numeric_blocks = _multi_blockify(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1928: in _multi_blockify\n    values, placement = _stack_arrays(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1957: in _stack_arrays\n    stacked = np.empty(shape, dtype=dtype)\nE   TypeError: Cannot interpret 'dtype('int64')' as a data type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000657600000000258,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof_bad_arguments",
                "duration": 0.04054310000000072,
                "run_index": 13,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005231000000005537,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03885920000000098,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000637699999998631,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof_merge_options",
                "duration": 0.08673060000000277,
                "run_index": 14,
                "setup": {
                    "name": "setup",
                    "duration": 0.00045640000000091163,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08527810000000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:393: in test_merge_asof_merge_options\n    pandas.merge_asof(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:580: in merge_asof\n    op = _AsOfMerge(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1740: in __init__\n    _OrderedMerge.__init__(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1623: in __init__\n    _MergeOperation.__init__(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:699: in __init__\n    ) = self._get_merge_keys()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1852: in _get_merge_keys\n    raise MergeError(msg)\nE   pandas.errors.MergeError: incompatible merge keys [0] dtype('O') and dtype('O'), must be the same type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00053970000000092,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_pivot",
                "duration": 0.021856500000000167,
                "run_index": 15,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004802000000001527,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.020506700000000322,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003893999999995401,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_pivot_table",
                "duration": 0.04183560000000064,
                "run_index": 16,
                "setup": {
                    "name": "setup",
                    "duration": 0.00047370000000057644,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04045379999999987,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:522: in test_pivot_table\n    df = pd.pivot_table(\nmodin\\pandas\\general.py:315: in pivot_table\n    return data.pivot_table(\nmodin\\experimental\\cloud\\rpyc_proxy.py:414: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: unhashable type: 'list'\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1557, in pivot_table\nE       query_compiler=self._query_compiler.pivot_table(\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 2950, in pivot_table\nE       keys_columns = self.getitem_column_array(unique_keys)\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 2149, in getitem_column_array\nE       new_modin_frame = self._modin_frame.mask(col_indices=key)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 511, in mask\nE       col_numeric_idx = self.columns.get_indexer_for(col_indices)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 5275, in get_indexer_for\nE       return self.get_indexer(target, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 3486, in get_indexer\nE       return self._get_indexer(target, method, limit, tolerance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 3512, in _get_indexer\nE       indexer = self._engine.get_indexer(target._get_engine_target())\nE     File \"pandas\\_libs\\index.pyx\", line 269, in pandas._libs.index.IndexEngine.get_indexer\nE     File \"pandas\\_libs\\hashtable_class_helper.pxi\", line 5247, in pandas._libs.hashtable.PyObjectHashTable.lookup\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 186, in __hash__\nE       return syncreq(self, consts.HANDLE_HASH)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: unhashable type: 'list'\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 627, in _handle_hash\nE       return hash(obj)\nE   TypeError: unhashable type: 'list'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004343999999996129,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_unique",
                "duration": 0.1338235999999995,
                "run_index": 17,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004492000000002605,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13228919999999889,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:550: in test_unique\n    assert_array_equal(modin_result, pandas_result)\nE   AssertionError: \nE   Arrays are not equal\nE   \nE   Mismatched elements: 1 / 1 (100%)\nE    x: array([Timestamp('2016-01-01 00:00:00')], dtype=object)\nE    y: array(['2016-01-01T00:00:00.000000000'], dtype='datetime64[ns]')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006360000000000809,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_value_counts[True-3-False]",
                "duration": 0.05768659999999848,
                "run_index": 18,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007263999999995718,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05546799999999941,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:602: in test_value_counts\n    pd.value_counts(values, normalize=normalize, ascending=False), False\nmodin\\pandas\\general.py:351: in value_counts\n    return Series(values).value_counts(\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:439: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Cannot interpret 'dtype('float64')' as a data type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 443, in __init__\nE       data = SingleBlockManager.from_array(data, index)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1574, in from_array\nE       block = new_block(array, placement=slice(0, len(index)), ndim=1)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\blocks.py\", line 1940, in new_block\nE       klass = get_block_type(values, values.dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\blocks.py\", line 1905, in get_block_type\nE       dtype = cast(np.dtype, pandas_dtype(dtype) if dtype else values.dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1776, in pandas_dtype\nE       npdtype = np.dtype(dtype)\nE   TypeError: Cannot interpret 'dtype('float64')' as a data type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007657999999999276,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_datetime",
                "duration": 1.9523053999999984,
                "run_index": 19,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004844999999988886,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.950799,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005374000000006873,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_datetime_inplace_side_effect",
                "duration": 0.5843227000000031,
                "run_index": 20,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005377000000006404,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5825889000000011,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006584000000007251,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data0-raise-None]",
                "duration": 0.05236349999999845,
                "run_index": 21,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007751000000002506,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05008569999999857,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007275999999993843,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data1-raise-float]",
                "duration": 0.04311060000000033,
                "run_index": 22,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007683000000007212,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04085420000000006,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007197999999988269,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data2-raise-signed]",
                "duration": 0.04597119999999677,
                "run_index": 23,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008130999999984567,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.043693100000000484,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006518999999993724,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data3-ignore-None]",
                "duration": 0.052899700000001104,
                "run_index": 24,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015789000000001607,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04913450000000097,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006073999999998136,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data4-coerce-None]",
                "duration": 0.04994669999999779,
                "run_index": 25,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009214999999986873,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0473271000000004,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007766000000000162,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_pandas_indices[test_data_values[0]]",
                "duration": 0.049011699999999436,
                "run_index": 26,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007720999999989431,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04692180000000157,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:690: in test_to_pandas_indices\n    md_df.index = index\nmodin\\experimental\\cloud\\rpyc_proxy.py:508: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 564, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 255, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 383, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 387, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005456999999999823,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_pandas_indices[[]]",
                "duration": 0.06010889999999769,
                "run_index": 27,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008161999999991565,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05779459999999936,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000681900000000013,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-DataFrame\\\\.mean]",
                "duration": 0.001966899999995775,
                "run_index": 28,
                "setup": {
                    "name": "setup",
                    "duration": 0.000771299999998476,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 704, 'Skipped: This test make sense only on BaseOnPython execution.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00042429999999882284,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-DataFrame\\\\.add]",
                "duration": 0.0009468999999988625,
                "run_index": 29,
                "setup": {
                    "name": "setup",
                    "duration": 0.00030429999999981305,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 704, 'Skipped: This test make sense only on BaseOnPython execution.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00033829999999923643,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-DataFrame\\\\.get_axis\\\\(0\\\\)]",
                "duration": 0.0009047999999989287,
                "run_index": 30,
                "setup": {
                    "name": "setup",
                    "duration": 0.00028439999999996246,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 704, 'Skipped: This test make sense only on BaseOnPython execution.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00033599999999900376,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-Series\\\\.repeat]",
                "duration": 0.0009254000000016305,
                "run_index": 31,
                "setup": {
                    "name": "setup",
                    "duration": 0.000286400000000242,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 704, 'Skipped: This test make sense only on BaseOnPython execution.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00035260000000114644,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-GroupBy\\\\.prod]",
                "duration": 0.0010159000000005136,
                "run_index": 32,
                "setup": {
                    "name": "setup",
                    "duration": 0.00030869999999971753,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 704, 'Skipped: This test make sense only on BaseOnPython execution.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00039850000000107855,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-Rolling\\\\.count]",
                "duration": 0.00104909999999947,
                "run_index": 33,
                "setup": {
                    "name": "setup",
                    "duration": 0.00032000000000032003,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 704, 'Skipped: This test make sense only on BaseOnPython execution.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040909999999882984,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_empty_dataframe",
                "duration": 0.05228709999999914,
                "run_index": 34,
                "setup": {
                    "name": "setup",
                    "duration": 0.000590400000000102,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05056199999999933,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000544299999999609,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_empty_series",
                "duration": 0.03333450000000049,
                "run_index": 35,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005900000000007566,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.029333599999999294,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.002820899999999682,
                    "outcome": "passed"
                },
                "outcome": "passed"
            }
        ],
        "summary": {
            "passed": 21,
            "failed": 9,
            "skipped": 6,
            "num_tests": 36,
            "duration": 16.26120400428772
        },
        "created_at": "2021-12-10 17:53:30.292224"
    }
}