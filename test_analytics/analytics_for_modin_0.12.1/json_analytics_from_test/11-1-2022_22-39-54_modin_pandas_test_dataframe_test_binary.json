{
    "report": {
        "environment": {
            "Python": "3.8.11",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-rows-scalar]",
                "duration": 11.183282700000001,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 5.4854273000000005,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21143580000000028,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000992300000000057,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-rows-series_or_list]",
                "duration": 0.9152489999999993,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008973000000001008,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9127948999999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006594999999993689,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-columns-scalar]",
                "duration": 0.1427771,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.000788800000000478,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14052629999999944,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006731999999995963,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-columns-series_or_list]",
                "duration": 0.3012232000000008,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009522000000004027,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.29840100000000014,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009177999999998576,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-rows-scalar]",
                "duration": 0.21977580000000074,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.00126990000000049,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21380229999999933,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.003433700000000428,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-rows-series_or_list]",
                "duration": 0.8556727000000013,
                "run_index": 5,
                "setup": {
                    "name": "setup",
                    "duration": 0.003405700000000067,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8482666999999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005946000000012219,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-columns-scalar]",
                "duration": 0.1388094000000013,
                "run_index": 6,
                "setup": {
                    "name": "setup",
                    "duration": 0.000807200000000563,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1364970000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006979999999998654,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-columns-series_or_list]",
                "duration": 0.18157780000000123,
                "run_index": 7,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007827000000002471,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17927530000000047,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007371000000002681,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-rows-scalar]",
                "duration": 0.13798060000000234,
                "run_index": 8,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010363000000008782,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13523430000000047,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006737000000001103,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-rows-series_or_list]",
                "duration": 0.7067001000000008,
                "run_index": 9,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008525000000005889,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7043482000000001,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006468999999995617,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-columns-scalar]",
                "duration": 0.13987649999999974,
                "run_index": 10,
                "setup": {
                    "name": "setup",
                    "duration": 0.000785099999999872,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13760259999999924,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000703700000000751,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-columns-series_or_list]",
                "duration": 0.1846414999999979,
                "run_index": 11,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011698999999989468,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18165630000000021,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006453999999997961,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-rows-scalar]",
                "duration": 0.1376361000000017,
                "run_index": 12,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012199000000006066,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13452209999999987,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006742000000006243,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-rows-series_or_list]",
                "duration": 0.7255360999999994,
                "run_index": 13,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008435999999996113,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7231959000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006529999999997926,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-columns-scalar]",
                "duration": 0.141756400000002,
                "run_index": 14,
                "setup": {
                    "name": "setup",
                    "duration": 0.000788299999999964,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13949310000000104,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006867000000010393,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-columns-series_or_list]",
                "duration": 0.18966120000000153,
                "run_index": 15,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010631000000014268,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18684889999999932,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006860999999993567,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-rows-scalar]",
                "duration": 0.14412729999999918,
                "run_index": 16,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011264999999998082,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14120100000000058,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006732999999989886,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-rows-series_or_list]",
                "duration": 0.7168651000000033,
                "run_index": 17,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011103000000005636,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7139292000000026,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007152999999995302,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-columns-scalar]",
                "duration": 0.21480910000000009,
                "run_index": 18,
                "setup": {
                    "name": "setup",
                    "duration": 0.0017604999999996096,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2106490000000001,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006391000000007807,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-columns-series_or_list]",
                "duration": 0.19353159999999292,
                "run_index": 19,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009826999999980046,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1908785999999978,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006875999999991222,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-rows-scalar]",
                "duration": 0.003910499999999928,
                "run_index": 20,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010031999999995378,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.001202400000000381,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:59: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007017000000004714,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-rows-series_or_list]",
                "duration": 0.0034288999999922964,
                "run_index": 21,
                "setup": {
                    "name": "setup",
                    "duration": 0.001066999999999041,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0007968999999974358,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:59: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004979999999967788,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-columns-scalar]",
                "duration": 0.13538289999999975,
                "run_index": 22,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010553999999984853,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1326123999999993,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006597000000034825,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-columns-series_or_list]",
                "duration": 0.18769090000000332,
                "run_index": 23,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010349000000005049,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18485860000000187,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007625000000004434,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-rows-scalar]",
                "duration": 0.16512559999999965,
                "run_index": 24,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009738000000005798,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1623550999999992,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008228999999992936,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-rows-series_or_list]",
                "duration": 0.7042801999999959,
                "run_index": 25,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008434999999984427,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7019389000000018,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000654299999997221,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-columns-scalar]",
                "duration": 0.13969380000000342,
                "run_index": 26,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007867000000025826,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13745369999999824,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006667000000000201,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-columns-series_or_list]",
                "duration": 0.20889660000000276,
                "run_index": 27,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007953000000000543,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20662770000000208,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006783000000005757,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-rows-scalar]",
                "duration": 0.16460799999999765,
                "run_index": 28,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009273999999983573,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1622306000000009,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005226000000000397,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-rows-series_or_list]",
                "duration": 0.8079114999999994,
                "run_index": 29,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008270000000010214,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.805600499999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006570000000003517,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-columns-scalar]",
                "duration": 0.1543070000000064,
                "run_index": 30,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007870000000025357,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15216339999999917,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005696000000021684,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-columns-series_or_list]",
                "duration": 0.19142320000000268,
                "run_index": 31,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007997000000017351,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18912639999999925,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006973999999999592,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-rows-scalar]",
                "duration": 0.1460403000000028,
                "run_index": 32,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011055000000013138,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14316030000000168,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006689999999984764,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-rows-series_or_list]",
                "duration": 0.7772373999999935,
                "run_index": 33,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011860999999981914,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7741753999999972,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006897999999999627,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-columns-scalar]",
                "duration": 0.14391120000000512,
                "run_index": 34,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007973000000021102,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14166799999999924,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006486000000016645,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-columns-series_or_list]",
                "duration": 0.1885415999999971,
                "run_index": 35,
                "setup": {
                    "name": "setup",
                    "duration": 0.000849099999999936,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18615339999999847,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006899999999987472,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-rows-scalar]",
                "duration": 0.14365470000000258,
                "run_index": 36,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010553000000008694,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14088980000000006,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006543000000007737,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-rows-series_or_list]",
                "duration": 0.692540999999995,
                "run_index": 37,
                "setup": {
                    "name": "setup",
                    "duration": 0.00107579999999885,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6897158999999995,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006734999999977731,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-columns-scalar]",
                "duration": 0.14132299999999987,
                "run_index": 38,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008674000000006288,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13891549999999953,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006726999999990824,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-columns-series_or_list]",
                "duration": 0.18664049999999577,
                "run_index": 39,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010389999999986799,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18388129999999947,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006811999999989382,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-rows-scalar]",
                "duration": 0.14092789999999766,
                "run_index": 40,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009695000000000675,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13827059999999847,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007182999999990614,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-rows-series_or_list]",
                "duration": 0.7083635000000008,
                "run_index": 41,
                "setup": {
                    "name": "setup",
                    "duration": 0.000969300000001283,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7057476999999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006771999999983791,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-columns-scalar]",
                "duration": 0.1396443000000005,
                "run_index": 42,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007956000000000074,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13738329999999976,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006698000000007198,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-columns-series_or_list]",
                "duration": 0.1810881999999978,
                "run_index": 43,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007650999999988528,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17878999999999934,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007680000000007681,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-rows-scalar]",
                "duration": 0.14585150000000624,
                "run_index": 44,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010879000000016958,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14295570000000168,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007200000000011642,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-rows-series_or_list]",
                "duration": 0.7085912000000008,
                "run_index": 45,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009741000000005329,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7059514,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006915999999996814,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-columns-scalar]",
                "duration": 0.13831019999999938,
                "run_index": 46,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008569999999998856,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1359092000000004,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000686999999999216,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-columns-series_or_list]",
                "duration": 0.18108490000000188,
                "run_index": 47,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009218000000004167,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1785519000000022,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006893999999988409,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-rows-scalar]",
                "duration": 0.003325700000004872,
                "run_index": 48,
                "setup": {
                    "name": "setup",
                    "duration": 0.001089200000002677,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0006684999999997387,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:55: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004787999999997794,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-rows-series_or_list]",
                "duration": 0.0028770999999991886,
                "run_index": 49,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007705999999991775,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005523000000025036,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:55: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007835999999983301,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-columns-scalar]",
                "duration": 0.13690979999999797,
                "run_index": 50,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008183999999999969,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13455189999999817,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000721099999999808,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-columns-series_or_list]",
                "duration": 0.19333089999999942,
                "run_index": 51,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009736999999994111,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1907034000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006801000000002944,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-rows-scalar]",
                "duration": 0.0033762000000052694,
                "run_index": 52,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010897000000014145,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000570100000000906,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:55: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006267000000015344,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-rows-series_or_list]",
                "duration": 0.004853399999998231,
                "run_index": 53,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014447999999980254,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0011102000000029477,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:55: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008535999999992328,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-columns-scalar]",
                "duration": 0.14506570000000352,
                "run_index": 54,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015290000000014459,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14132760000000033,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006801000000002944,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-columns-series_or_list]",
                "duration": 0.19299119999999803,
                "run_index": 55,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008367999999983056,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19059569999999937,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007219000000020515,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-None-check_missing_value]",
                "duration": 0.08600449999999782,
                "run_index": 56,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010651999999993222,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08315640000000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007176999999991551,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-None-check_different_index]",
                "duration": 0.07595940000000212,
                "run_index": 57,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010387000000022795,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07319199999999881,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006899999999987472,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-3.0-check_missing_value]",
                "duration": 0.07713159999999775,
                "run_index": 58,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008006999999992104,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07483389999999801,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006963000000013153,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-3.0-check_different_index]",
                "duration": 0.04441669999999931,
                "run_index": 59,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007979999999996323,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.042209599999999625,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006111000000004196,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-None-check_missing_value]",
                "duration": 0.07743759999999611,
                "run_index": 60,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008271999999998059,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07505829999999847,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007248999999980299,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-None-check_different_index]",
                "duration": 0.07450090000000742,
                "run_index": 61,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008591000000031102,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07207980000000092,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007029000000002839,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-3.0-check_missing_value]",
                "duration": 0.07575959999999782,
                "run_index": 62,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008046999999997695,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07330149999999946,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008486999999988143,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-3.0-check_different_index]",
                "duration": 0.031072699999995734,
                "run_index": 63,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007817999999986114,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.028678899999999174,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000830199999999337,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-None-check_missing_value]",
                "duration": 0.07871399999999795,
                "run_index": 64,
                "setup": {
                    "name": "setup",
                    "duration": 0.002817499999999029,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07207209999999975,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010069000000001438,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-None-check_different_index]",
                "duration": 0.07809100000000413,
                "run_index": 65,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009535000000013838,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07554040000000128,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006436000000000774,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-3.0-check_missing_value]",
                "duration": 0.0799463999999972,
                "run_index": 66,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007802999999988458,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07774309999999929,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006427000000002181,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-3.0-check_different_index]",
                "duration": 0.037849000000001354,
                "run_index": 67,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008024999999989291,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.035656100000000635,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005879000000028611,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-None-check_missing_value]",
                "duration": 0.08332140000000621,
                "run_index": 68,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008022000000025287,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08094200000000029,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007750000000008583,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-None-check_different_index]",
                "duration": 0.07905159999999967,
                "run_index": 69,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008231999999992468,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07685370000000091,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005515000000002601,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-3.0-check_missing_value]",
                "duration": 0.07885950000000364,
                "run_index": 70,
                "setup": {
                    "name": "setup",
                    "duration": 0.000814600000001775,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07657949999999758,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006508000000025049,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-3.0-check_different_index]",
                "duration": 0.035881199999998614,
                "run_index": 71,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007775999999992678,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.033740500000000395,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005854999999996835,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-None-check_missing_value]",
                "duration": 0.081503399999999,
                "run_index": 72,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008207999999996218,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07902590000000131,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008358999999984462,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-None-check_different_index]",
                "duration": 0.08240430000000387,
                "run_index": 73,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013067000000006601,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07910539999999955,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006855000000030032,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-3.0-check_missing_value]",
                "duration": 0.07985160000000491,
                "run_index": 74,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007884000000011326,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07759520000000109,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006796000000015567,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-3.0-check_different_index]",
                "duration": 0.034533599999996056,
                "run_index": 75,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008018999999990228,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03217210000000037,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007576999999976408,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-None-check_missing_value]",
                "duration": 0.07697749999999814,
                "run_index": 76,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008163000000003251,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07444029999999913,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009045999999983678,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-None-check_different_index]",
                "duration": 0.07857319999999746,
                "run_index": 77,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008328999999989151,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07620220000000089,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007051999999987402,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-3.0-check_missing_value]",
                "duration": 0.07445249999999604,
                "run_index": 78,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007834999999971615,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07222189999999884,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000663600000002873,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-3.0-check_different_index]",
                "duration": 0.03345759999999487,
                "run_index": 79,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007741999999986149,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03139089999999811,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005182999999995275,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-None-check_missing_value]",
                "duration": 0.11636719999999912,
                "run_index": 80,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010514999999990948,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1135351,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007291000000009262,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-None-check_different_index]",
                "duration": 0.11638749999999476,
                "run_index": 81,
                "setup": {
                    "name": "setup",
                    "duration": 0.000916699999997661,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.11383779999999888,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007163000000005582,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-3.0-check_missing_value]",
                "duration": 0.09363590000000599,
                "run_index": 82,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009568000000008681,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09102590000000177,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006964000000024839,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-3.0-check_different_index]",
                "duration": 0.04053730000000044,
                "run_index": 83,
                "setup": {
                    "name": "setup",
                    "duration": 0.000814999999999344,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03826970000000074,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006376000000010151,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-None-check_missing_value]",
                "duration": 0.07019629999999921,
                "run_index": 84,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008021000000013601,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06791559999999919,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006764999999973043,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-None-check_different_index]",
                "duration": 0.07462339999999656,
                "run_index": 85,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008072999999981789,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07231690000000057,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006918999999996345,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-3.0-check_missing_value]",
                "duration": 0.06798070000000322,
                "run_index": 86,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007908000000007576,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06571810000000156,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006810000000001537,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-3.0-check_different_index]",
                "duration": 0.03924230000000151,
                "run_index": 87,
                "setup": {
                    "name": "setup",
                    "duration": 0.000784599999999358,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03692180000000178,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007513000000010095,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-None-check_missing_value]",
                "duration": 0.06942110000000312,
                "run_index": 88,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008963000000008492,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0670256000000009,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006029000000005169,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-None-check_different_index]",
                "duration": 0.07320379999999815,
                "run_index": 89,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007973999999997261,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07104889999999742,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005601000000012846,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-3.0-check_missing_value]",
                "duration": 0.07156150000000139,
                "run_index": 90,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009253999999998541,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0690993000000013,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006114000000003728,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-3.0-check_different_index]",
                "duration": 0.02963410000000266,
                "run_index": 91,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008902000000006183,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.02714070000000035,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007130000000010739,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-None-check_missing_value]",
                "duration": 0.06927760000000305,
                "run_index": 92,
                "setup": {
                    "name": "setup",
                    "duration": 0.000751499999999794,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06708640000000088,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006882000000025812,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-None-check_different_index]",
                "duration": 0.07179330000000306,
                "run_index": 93,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008310000000015805,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0694227000000005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000708599999999393,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-3.0-check_missing_value]",
                "duration": 0.07050230000000113,
                "run_index": 94,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007833000000019297,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06820469999999901,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007309999999982608,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-3.0-check_different_index]",
                "duration": 0.036428400000001915,
                "run_index": 95,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010545000000021787,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.033649000000000484,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006703999999970733,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-None-check_missing_value]",
                "duration": 0.08150629999999737,
                "run_index": 96,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010565999999982978,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07871689999999987,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006762000000009039,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-None-check_different_index]",
                "duration": 0.07832779999999673,
                "run_index": 97,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009732999999982894,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07577459999999903,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006066000000011229,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-3.0-check_missing_value]",
                "duration": 0.07724689999999512,
                "run_index": 98,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008436999999972272,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07486450000000033,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006950000000003342,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-3.0-check_different_index]",
                "duration": 0.03148179999999812,
                "run_index": 99,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008084000000003755,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.029386199999997586,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004787999999997794,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-None-check_missing_value]",
                "duration": 0.06828559999999584,
                "run_index": 100,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007422999999988633,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06612799999999908,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006729999999990355,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-None-check_different_index]",
                "duration": 0.12432080000000312,
                "run_index": 101,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007783000000003426,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.12215570000000042,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006085000000020102,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-3.0-check_missing_value]",
                "duration": 0.08700889999999717,
                "run_index": 102,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011305999999997596,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08374179999999853,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010058999999991158,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-3.0-check_different_index]",
                "duration": 0.03941000000000017,
                "run_index": 103,
                "setup": {
                    "name": "setup",
                    "duration": 0.0016943000000004815,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03524420000000106,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000777199999998146,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-None-check_missing_value]",
                "duration": 0.08141840000000045,
                "run_index": 104,
                "setup": {
                    "name": "setup",
                    "duration": 0.000833899999999943,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07898820000000129,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007623999999992748,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-None-check_different_index]",
                "duration": 0.07968130000000073,
                "run_index": 105,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008011000000003321,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0775160000000028,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000563099999997263,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-3.0-check_missing_value]",
                "duration": 0.07872400000000468,
                "run_index": 106,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010510000000003572,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07587700000000197,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007450000000019941,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-3.0-check_different_index]",
                "duration": 0.0325518000000109,
                "run_index": 107,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012750000000032458,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.029544700000002422,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00045710000000198647,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-None-check_missing_value]",
                "duration": 0.0785878000000011,
                "run_index": 108,
                "setup": {
                    "name": "setup",
                    "duration": 0.001508000000001175,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07502549999999886,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005462999999998885,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-None-check_different_index]",
                "duration": 0.07523150000000456,
                "run_index": 109,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013596000000006825,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07182120000000225,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006911000000009437,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-3.0-check_missing_value]",
                "duration": 0.06868070000000515,
                "run_index": 110,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007917000000006169,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0664510000000007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006463000000032082,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-3.0-check_different_index]",
                "duration": 0.03141719999999637,
                "run_index": 111,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008598999999982482,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.029212799999999817,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004846000000000572,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[add]",
                "duration": 0.16062099999999901,
                "run_index": 112,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007374999999996135,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15859999999999985,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005459999999999354,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[radd]",
                "duration": 0.12381949999999975,
                "run_index": 113,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006272999999978879,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.12207930000000289,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00048560000000108516,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[sub]",
                "duration": 0.15692220000000034,
                "run_index": 114,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013258000000000436,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1536775999999982,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005930000000020641,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rsub]",
                "duration": 0.1598496999999952,
                "run_index": 115,
                "setup": {
                    "name": "setup",
                    "duration": 0.001182799999998707,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15678330000000074,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007007999999970593,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[mod]",
                "duration": 0.1585017999999998,
                "run_index": 116,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006388000000008276,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1567155999999983,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005085999999998592,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rmod]",
                "duration": 0.15115570000000034,
                "run_index": 117,
                "setup": {
                    "name": "setup",
                    "duration": 0.000620800000000088,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14939999999999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005141000000001839,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[pow]",
                "duration": 0.15550620000000492,
                "run_index": 118,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006529000000021767,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15325670000000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009437000000005469,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rpow]",
                "duration": 0.14878369999999919,
                "run_index": 119,
                "setup": {
                    "name": "setup",
                    "duration": 0.00065659999999923,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1468279999999993,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006425000000014336,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[truediv]",
                "duration": 0.156070500000002,
                "run_index": 120,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006495000000015239,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15409190000000095,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000679599999998004,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rtruediv]",
                "duration": 0.1639555000000037,
                "run_index": 121,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011158000000008883,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16121990000000253,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005039999999993938,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[mul]",
                "duration": 0.14145440000000065,
                "run_index": 122,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005816999999979089,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13973030000000364,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005607000000011908,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rmul]",
                "duration": 0.13564939999999837,
                "run_index": 123,
                "setup": {
                    "name": "setup",
                    "duration": 0.000592499999996221,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1338164000000006,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000648000000005311,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[floordiv]",
                "duration": 0.1649236000000016,
                "run_index": 124,
                "setup": {
                    "name": "setup",
                    "duration": 0.001654999999999518,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.160931699999999,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006819000000035658,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rfloordiv]",
                "duration": 0.15645759999998887,
                "run_index": 125,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007616999999981999,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15382419999999541,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:99: in test_math_functions_level\n    modin_df.index = pandas.MultiIndex.from_tuples(\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011099999999970578,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[truediv-divide]",
                "duration": 0.002256800000012049,
                "run_index": 126,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007295000000056007,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00039160000000038053,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004062000000004673,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[truediv-div]",
                "duration": 0.0020417999999935432,
                "run_index": 127,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006440999999952624,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00036500000000216914,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003886000000008494,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rtruediv-rdiv]",
                "duration": 0.0047789999999992006,
                "run_index": 128,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015837999999988028,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0008531000000004951,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007583000000010998,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[mul-multiply]",
                "duration": 0.0022440000000187865,
                "run_index": 129,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007143000000056077,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00039130000000398013,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00042410000000359105,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[sub-subtract]",
                "duration": 0.0021198999999967327,
                "run_index": 130,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006634000000005358,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003832000000016933,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040989999999396787,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[add-__add__]",
                "duration": 0.002092600000004552,
                "run_index": 131,
                "setup": {
                    "name": "setup",
                    "duration": 0.000660299999999836,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00037329999999968777,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003987000000051921,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[radd-__radd__]",
                "duration": 0.0037503999999941584,
                "run_index": 132,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006953999999979033,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000668099999998617,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0016914999999997349,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[truediv-__truediv__]",
                "duration": 0.003143399999999019,
                "run_index": 133,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011508999999989555,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004181999999985919,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004234000000025162,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rtruediv-__rtruediv__]",
                "duration": 0.0021225999999998635,
                "run_index": 134,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006634000000005358,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00038839999999851216,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040740000000027976,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[floordiv-__floordiv__]",
                "duration": 0.0026503000000062116,
                "run_index": 135,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008996000000038862,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004324000000011097,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00041869999999732954,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rfloordiv-__rfloordiv__]",
                "duration": 0.002121100000010756,
                "run_index": 136,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006717000000051598,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00037650000000155615,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040119999999888023,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[mod-__mod__]",
                "duration": 0.0025083000000023503,
                "run_index": 137,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006320000000030745,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005206999999955997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007236000000006015,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rmod-__rmod__]",
                "duration": 0.0037544000000053757,
                "run_index": 138,
                "setup": {
                    "name": "setup",
                    "duration": 0.001128700000002425,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.001064999999996985,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00043200000000354066,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[mul-__mul__]",
                "duration": 0.0020841000000118015,
                "run_index": 139,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006602000000057728,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003736999999972568,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00039000000000299906,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rmul-__rmul__]",
                "duration": 0.002047700000012753,
                "run_index": 140,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006436000000036302,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00037230000000221253,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00038820000000328037,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[pow-__pow__]",
                "duration": 0.002073000000002878,
                "run_index": 141,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006474999999994679,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003934000000000992,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000384600000003843,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rpow-__rpow__]",
                "duration": 0.004522800000003713,
                "run_index": 142,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012565000000037685,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0011604999999974552,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008492999999987205,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[sub-__sub__]",
                "duration": 0.0022389000000089254,
                "run_index": 143,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007220000000032201,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003876999999974373,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040720000000504797,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rsub-__rsub__]",
                "duration": 0.0020258999999924754,
                "run_index": 144,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006430999999977871,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003639999999975885,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003756999999993127,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-as_left]",
                "duration": 0.07349849999999947,
                "run_index": 145,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009233999999977982,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07099500000000347,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006567000000003986,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-4]",
                "duration": 0.06523429999999308,
                "run_index": 146,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012501000000000317,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06205959999999777,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006744999999952483,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-4.0]",
                "duration": 0.06488560000001087,
                "run_index": 147,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010590000000050281,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.061936500000001615,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008310999999991964,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-a]",
                "duration": 0.06360059999999379,
                "run_index": 148,
                "setup": {
                    "name": "setup",
                    "duration": 0.000793799999996736,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06127970000000005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007333000000002698,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-as_left]",
                "duration": 0.08198200000000355,
                "run_index": 149,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011662000000001171,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07894459999999981,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007050000000035084,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-4]",
                "duration": 0.06500820000001539,
                "run_index": 150,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008067000000053781,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06263990000000064,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007549000000039996,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-4.0]",
                "duration": 0.06553399999999954,
                "run_index": 151,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008055999999996288,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06278770000000122,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011350999999990563,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-a]",
                "duration": 0.036259900000004563,
                "run_index": 152,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007956000000035601,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.034071599999997204,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005971000000002391,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-as_left]",
                "duration": 0.07583240000001013,
                "run_index": 153,
                "setup": {
                    "name": "setup",
                    "duration": 0.001249200000003725,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07257020000000125,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007638000000014245,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-4]",
                "duration": 0.06690839999999554,
                "run_index": 154,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007984000000007541,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06463619999999537,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006753999999986604,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-4.0]",
                "duration": 0.06200269999998653,
                "run_index": 155,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008576999999974078,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05956709999999532,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007201999999963959,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-a]",
                "duration": 0.022569799999992313,
                "run_index": 156,
                "setup": {
                    "name": "setup",
                    "duration": 0.001012500000001637,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.020109299999994334,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000435499999994704,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-as_left]",
                "duration": 0.06771880000000152,
                "run_index": 157,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015456000000000358,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0640555999999961,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000572000000005346,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-4]",
                "duration": 0.06105550000000193,
                "run_index": 158,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009222999999991544,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.058589400000002456,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006215000000011628,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-4.0]",
                "duration": 0.06166829999999379,
                "run_index": 159,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007947000000001481,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.059266999999998404,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008118999999950915,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-a]",
                "duration": 0.02748440000000585,
                "run_index": 160,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009055000000017799,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0248240000000024,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008493999999998891,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-as_left]",
                "duration": 0.07125739999999325,
                "run_index": 161,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008563999999964267,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06869629999999916,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008483000000012453,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-4]",
                "duration": 0.06211160000000149,
                "run_index": 162,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009516000000004965,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.059500100000001055,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007082999999994399,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-4.0]",
                "duration": 0.06353509999999574,
                "run_index": 163,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008116999999998598,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06108179999999663,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008298999999993839,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-a]",
                "duration": 0.024846999999986963,
                "run_index": 164,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008739999999960446,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.022619399999996403,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00047959999999847014,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-as_left]",
                "duration": 0.07200440000001151,
                "run_index": 165,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007788000000061857,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06956359999999506,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008832000000040807,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-4]",
                "duration": 0.06256959999998202,
                "run_index": 166,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010063999999943007,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05991229999999348,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006444999999999368,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-4.0]",
                "duration": 0.06210180000000065,
                "run_index": 167,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007716000000002055,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05988490000000013,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006737000000001103,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-a]",
                "duration": 0.06084589999999679,
                "run_index": 168,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008280999999996652,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05865509999999574,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000534600000001717,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-as_left]",
                "duration": 0.21202690000001212,
                "run_index": 169,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009494000000032088,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20932250000000607,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008055999999996288,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-4]",
                "duration": 0.19983710000000343,
                "run_index": 170,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008999000000002866,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1972931000000031,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007441999999997506,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-4.0]",
                "duration": 0.20520300000000447,
                "run_index": 171,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008077000000028534,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2028306999999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007568999999989501,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-a]",
                "duration": 0.19675000000000153,
                "run_index": 172,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008975000000006617,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19425379999999848,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007012000000017338,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-as_left]",
                "duration": 0.21144640000000692,
                "run_index": 173,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007894000000021606,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20900639999999981,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000861200000002782,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-4]",
                "duration": 0.20077249999999935,
                "run_index": 174,
                "setup": {
                    "name": "setup",
                    "duration": 0.00083529999999854,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19834709999999944,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000754800000002831,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-4.0]",
                "duration": 0.1973330999999945,
                "run_index": 175,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008027999999953295,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19505300000000148,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006745000000023538,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-a]",
                "duration": 0.16010089999999622,
                "run_index": 176,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008781999999953882,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15763700000000114,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007075000000043019,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-as_left]",
                "duration": 0.20532510000000315,
                "run_index": 177,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008022000000025287,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20302579999999892,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006948999999991656,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-4]",
                "duration": 0.19816369999999495,
                "run_index": 178,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008116999999998598,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1960038999999938,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005364000000014357,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-4.0]",
                "duration": 0.20403839999998752,
                "run_index": 179,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008198999999962098,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20172449999999742,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006740999999976793,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-a]",
                "duration": 0.16669350000000094,
                "run_index": 180,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008610000000004447,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1642561000000029,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007153999999971461,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-as_left]",
                "duration": 0.20727810000000346,
                "run_index": 181,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008032000000000039,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20451249999999987,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011592000000035796,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-4]",
                "duration": 0.19987600000000327,
                "run_index": 182,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015068000000013626,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19590269999999776,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009597000000027833,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-4.0]",
                "duration": 0.19958929999999953,
                "run_index": 183,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011052999999989765,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19662439999999748,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007543000000040934,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-a]",
                "duration": 0.15763689999998576,
                "run_index": 184,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007917999999946801,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15529790000000077,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007553999999956318,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-as_left]",
                "duration": 0.20145360000000068,
                "run_index": 185,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012724999999988995,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19817630000000008,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007323000000027946,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-4]",
                "duration": 0.17609289999999334,
                "run_index": 186,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008045999999950482,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17374820000000568,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007354999999975576,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-4.0]",
                "duration": 0.17720609999999937,
                "run_index": 187,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008114999999975225,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17484340000000032,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007397000000040066,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-a]",
                "duration": 0.14390190000001013,
                "run_index": 188,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007361000000045692,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.141698599999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007311000000029821,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-as_left]",
                "duration": 0.183488600000004,
                "run_index": 189,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007347000000024195,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.181328299999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006909000000021592,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-4]",
                "duration": 0.17957849999999098,
                "run_index": 190,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008017999999978542,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17723289999999992,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007419999999953575,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-4.0]",
                "duration": 0.1818576999999948,
                "run_index": 191,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007714999999990368,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17951799999999452,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000796700000002204,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-a]",
                "duration": 0.18560709999999858,
                "run_index": 192,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008452000000005455,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18325360000000046,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00066309999999703,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-eq]",
                "duration": 0.14044449999999387,
                "run_index": 193,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007222999999996205,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13844639999999941,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005534999999952106,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-ge]",
                "duration": 0.1474937000000125,
                "run_index": 194,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006930000000053838,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1454650000000015,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006427000000002181,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-gt]",
                "duration": 0.15308039999999323,
                "run_index": 195,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006787999999957606,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1510389000000032,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006838999999985163,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-le]",
                "duration": 0.13628579999999602,
                "run_index": 196,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007445999999973196,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1340770000000049,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007195999999964897,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-lt]",
                "duration": 0.14825139999999948,
                "run_index": 197,
                "setup": {
                    "name": "setup",
                    "duration": 0.000668499999996186,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14601970000000364,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008947000000034677,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-ne]",
                "duration": 0.22201100000000906,
                "run_index": 198,
                "setup": {
                    "name": "setup",
                    "duration": 0.0018456000000028894,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21765429999999952,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006655000000037603,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-eq]",
                "duration": 0.29256949999999904,
                "run_index": 199,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008359999999996148,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.29035749999999894,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005400000000008731,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-ge]",
                "duration": 0.2839872999999997,
                "run_index": 200,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006781000000017912,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2815792999999971,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001051799999999048,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-gt]",
                "duration": 0.28561940000000163,
                "run_index": 201,
                "setup": {
                    "name": "setup",
                    "duration": 0.001455700000001059,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.28211929999999796,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005887000000015519,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-le]",
                "duration": 0.36338619999999366,
                "run_index": 202,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010874999999970214,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.36064919999999745,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005620000000021719,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-lt]",
                "duration": 0.35358879999999004,
                "run_index": 203,
                "setup": {
                    "name": "setup",
                    "duration": 0.001695299999994404,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.3486096000000032,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0015885999999980527,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-ne]",
                "duration": 0.30175979999999925,
                "run_index": 204,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011888000000013221,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2987636000000009,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:155: in test_multi_level_comparison\n    modin_df_multi_level.index = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006185999999956948,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_equals",
                "duration": 0.13280179999998865,
                "run_index": 205,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004990999999989754,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13122819999999535,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005753999999953407,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_ser-True]",
                "duration": 0.03622020000001669,
                "run_index": 206,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007877000000036105,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03410980000000308,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:207: in test_mismatched_row_partitions\n    modin_df1.index = pandas_df1.index = pandas_df2.index\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005350000000063915,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_ser-False]",
                "duration": 0.029670099999997035,
                "run_index": 207,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007735000000010928,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.027551499999994178,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:209: in test_mismatched_row_partitions\n    modin_df2.index = pandas_df2.index = pandas_df1.index\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005716000000006716,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_df-True]",
                "duration": 0.029812600000013845,
                "run_index": 208,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013769000000039,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.026445000000002494,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:207: in test_mismatched_row_partitions\n    modin_df1.index = pandas_df1.index = pandas_df2.index\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006138000000035504,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_df-False]",
                "duration": 0.028831400000001395,
                "run_index": 209,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007619000000005371,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.026743199999998524,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:209: in test_mismatched_row_partitions\n    modin_df2.index = pandas_df2.index = pandas_df1.index\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005644000000017968,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_same_name-True]",
                "duration": 0.025460900000005893,
                "run_index": 210,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007516000000009626,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.023417800000004263,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:207: in test_mismatched_row_partitions\n    modin_df1.index = pandas_df1.index = pandas_df2.index\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005398999999997045,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_same_name-False]",
                "duration": 0.040965899999996225,
                "run_index": 211,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008077999999969165,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.038614900000006,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:209: in test_mismatched_row_partitions\n    modin_df2.index = pandas_df2.index = pandas_df1.index\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007353999999963889,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_different_name-True]",
                "duration": 0.03974900000000048,
                "run_index": 212,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010215000000002306,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03699129999999684,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:207: in test_mismatched_row_partitions\n    modin_df1.index = pandas_df1.index = pandas_df2.index\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007147000000031767,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_different_name-False]",
                "duration": 0.04143450000000115,
                "run_index": 213,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012220999999996707,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03799380000000241,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:209: in test_mismatched_row_partitions\n    modin_df2.index = pandas_df2.index = pandas_df1.index\nmodin\\experimental\\cloud\\rpyc_proxy.py:507: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:179: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:500: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 652, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 568, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2478, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 565, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 92, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 256, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 384, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 385, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 388, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 500, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 338, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 656, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009964999999994006,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_ser-True]",
                "duration": 0.04748689999999556,
                "run_index": 214,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009414999999961537,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04494569999999953,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006582000000037169,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_ser-False]",
                "duration": 0.06828540000001482,
                "run_index": 215,
                "setup": {
                    "name": "setup",
                    "duration": 0.000853400000004001,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06593560000000309,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006430000000037239,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_df-True]",
                "duration": 0.053918200000005356,
                "run_index": 216,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009508000000053585,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.051374699999996665,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006418999999979746,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_df-False]",
                "duration": 0.05326130000000262,
                "run_index": 217,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008969000000007554,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05078909999999581,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000678400000005297,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_same_name-True]",
                "duration": 0.0736696999999964,
                "run_index": 218,
                "setup": {
                    "name": "setup",
                    "duration": 0.002077299999996285,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06867770000000206,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008374000000017645,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_same_name-False]",
                "duration": 0.06164670000000427,
                "run_index": 219,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010291000000037798,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.058864299999996206,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007242000000005078,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_different_name-True]",
                "duration": 0.04853310000000022,
                "run_index": 220,
                "setup": {
                    "name": "setup",
                    "duration": 0.001062900000000866,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.045721000000000345,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006862999999981412,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_different_name-False]",
                "duration": 0.03824449999999047,
                "run_index": 221,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008871999999939817,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03592700000000093,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005431000000015729,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_duplicate_indexes",
                "duration": 0.07457689999998962,
                "run_index": 222,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005141999999977998,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05586079999999782,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.017687699999996198,
                    "outcome": "passed"
                },
                "outcome": "passed"
            }
        ],
        "summary": {
            "passed": 183,
            "xfailed": 6,
            "failed": 34,
            "num_tests": 223,
            "duration": 42.95402455329895
        },
        "created_at": "2022-01-11 22:40:42.159071"
    }
}