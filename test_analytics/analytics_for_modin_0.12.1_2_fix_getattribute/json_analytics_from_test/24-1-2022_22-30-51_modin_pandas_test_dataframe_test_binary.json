{
    "report": {
        "environment": {
            "Python": "3.8.11",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-rows-scalar]",
                "duration": 11.154178,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 5.480897,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19141750000000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009665000000005364,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-rows-series_or_list]",
                "duration": 0.9930523000000004,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013044999999998197,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9897517000000011,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006915999999996814,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-columns-scalar]",
                "duration": 0.14697609999999806,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007707999999997384,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14477600000000024,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000658499999998341,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[add-columns-series_or_list]",
                "duration": 0.2147781999999978,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.00102409999999864,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21200980000000058,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007201999999999487,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-rows-scalar]",
                "duration": 0.14553800000000017,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007757999999995491,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1432772,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007092000000010756,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-rows-series_or_list]",
                "duration": 0.7569756000000005,
                "run_index": 5,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007707000000003461,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7547004000000008,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007337999999990075,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-columns-scalar]",
                "duration": 0.14415669999999814,
                "run_index": 6,
                "setup": {
                    "name": "setup",
                    "duration": 0.000765699999998759,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1419990000000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006263000000004126,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[radd-columns-series_or_list]",
                "duration": 0.18874150000000078,
                "run_index": 7,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007683000000007212,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18650309999999948,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007017999999998636,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-rows-scalar]",
                "duration": 0.14361750000000129,
                "run_index": 8,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007675000000002541,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14131360000000015,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007689000000006274,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-rows-series_or_list]",
                "duration": 1.0230324999999976,
                "run_index": 9,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007307000000000841,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.0206530999999988,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009179999999986421,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-columns-scalar]",
                "duration": 0.22360930000000145,
                "run_index": 10,
                "setup": {
                    "name": "setup",
                    "duration": 0.002474499999999935,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21779150000000058,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008688000000010021,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[sub-columns-series_or_list]",
                "duration": 0.2387523999999992,
                "run_index": 11,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014302999999991073,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2352798000000007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000612000000000279,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-rows-scalar]",
                "duration": 0.15695220000000276,
                "run_index": 12,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011386000000008778,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15413039999999967,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005446000000013385,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-rows-series_or_list]",
                "duration": 0.9374531999999984,
                "run_index": 13,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008164999999991096,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9349244999999993,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000895700000000943,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-columns-scalar]",
                "duration": 0.15455070000000148,
                "run_index": 14,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011293999999999471,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1514230000000012,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008689000000003944,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rsub-columns-series_or_list]",
                "duration": 0.21998849999999948,
                "run_index": 15,
                "setup": {
                    "name": "setup",
                    "duration": 0.001006499999999022,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21706920000000096,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009063000000004706,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-rows-scalar]",
                "duration": 0.17671220000000076,
                "run_index": 16,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014542999999989092,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17282880000000134,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009748000000016077,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-rows-series_or_list]",
                "duration": 1.0306897,
                "run_index": 17,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008820000000007155,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.0279098999999974,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010158000000011214,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-columns-scalar]",
                "duration": 0.2393125999999981,
                "run_index": 18,
                "setup": {
                    "name": "setup",
                    "duration": 0.001337199999998262,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.23590190000000177,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000736299999999801,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mod-columns-series_or_list]",
                "duration": 0.35534170000000387,
                "run_index": 19,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013579000000021324,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.3519469999999991,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006789000000004819,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-rows-scalar]",
                "duration": 0.006569300000002443,
                "run_index": 20,
                "setup": {
                    "name": "setup",
                    "duration": 0.00218890000000016,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0011441000000012025,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:66: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010474000000009198,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-rows-series_or_list]",
                "duration": 0.008595799999998377,
                "run_index": 21,
                "setup": {
                    "name": "setup",
                    "duration": 0.003324899999999076,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0011028999999993516,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:66: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008431000000008737,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-columns-scalar]",
                "duration": 0.27343619999999547,
                "run_index": 22,
                "setup": {
                    "name": "setup",
                    "duration": 0.0181129999999996,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2366445999999982,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005655999999980565,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmod-columns-series_or_list]",
                "duration": 0.19917220000000668,
                "run_index": 23,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008930000000013649,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19680600000000226,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000580200000001696,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-rows-scalar]",
                "duration": 0.14494049999999703,
                "run_index": 24,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008139000000007002,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1427379999999978,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005746999999978186,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-rows-series_or_list]",
                "duration": 0.9017446999999947,
                "run_index": 25,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008117999999974757,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8994570999999993,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000664000000000442,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-columns-scalar]",
                "duration": 0.16355040000000187,
                "run_index": 26,
                "setup": {
                    "name": "setup",
                    "duration": 0.001158100000001383,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16070459999999898,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00052960000000013,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[pow-columns-series_or_list]",
                "duration": 0.23601509999999593,
                "run_index": 27,
                "setup": {
                    "name": "setup",
                    "duration": 0.000821499999997144,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.23372129999999913,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006508000000025049,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-rows-scalar]",
                "duration": 0.1632598000000023,
                "run_index": 28,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008605000000017071,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1609966000000007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005421999999981608,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-rows-series_or_list]",
                "duration": 1.0534052000000038,
                "run_index": 29,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010647000000005846,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.0487026999999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0025731000000028814,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-columns-scalar]",
                "duration": 0.18589689999999592,
                "run_index": 30,
                "setup": {
                    "name": "setup",
                    "duration": 0.002598700000000065,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.180079199999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006202999999977976,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rpow-columns-series_or_list]",
                "duration": 0.20450720000000544,
                "run_index": 31,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011417000000015776,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20162120000000172,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006026000000005638,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-rows-scalar]",
                "duration": 0.16081469999999243,
                "run_index": 32,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009971999999969228,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1580945999999983,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007257000000002733,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-rows-series_or_list]",
                "duration": 1.1952983999999987,
                "run_index": 33,
                "setup": {
                    "name": "setup",
                    "duration": 0.004420400000000768,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.1858572999999986,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006002999999985548,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-columns-scalar]",
                "duration": 0.15404860000000298,
                "run_index": 34,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010803000000016993,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15132559999999984,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005623999999997409,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[truediv-columns-series_or_list]",
                "duration": 0.1975767000000026,
                "run_index": 35,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008136000000007471,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19518030000000053,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007692000000005805,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-rows-scalar]",
                "duration": 0.14097759999999582,
                "run_index": 36,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008920999999979529,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1384666999999986,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007267000000013013,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-rows-series_or_list]",
                "duration": 0.8781066000000024,
                "run_index": 37,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008030000000012194,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8758066000000007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006939999999993063,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-columns-scalar]",
                "duration": 0.18409730000000124,
                "run_index": 38,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014471000000000345,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1805419999999991,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006611000000020795,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rtruediv-columns-series_or_list]",
                "duration": 0.25686030000000315,
                "run_index": 39,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009144000000027575,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.25380329999999773,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0012281999999999016,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-rows-scalar]",
                "duration": 0.1624098000000025,
                "run_index": 40,
                "setup": {
                    "name": "setup",
                    "duration": 0.0017552000000016221,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15832860000000082,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005707999999984281,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-rows-series_or_list]",
                "duration": 0.7667172999999963,
                "run_index": 41,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008161999999991565,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7644582,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006266999999979816,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-columns-scalar]",
                "duration": 0.16398629999999415,
                "run_index": 42,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007612999999970782,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16172909999999874,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007346000000012509,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[mul-columns-series_or_list]",
                "duration": 0.20756229999999576,
                "run_index": 43,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007667999999974029,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2053407000000007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000688000000000244,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-rows-scalar]",
                "duration": 0.15714940000000155,
                "run_index": 44,
                "setup": {
                    "name": "setup",
                    "duration": 0.001205099999999959,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1540582999999991,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006809000000025378,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-rows-series_or_list]",
                "duration": 0.7904843999999933,
                "run_index": 45,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010947999999970648,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7875985000000014,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006962999999977626,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-columns-scalar]",
                "duration": 0.16298519999999783,
                "run_index": 46,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008261999999987779,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16071960000000018,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006132000000000914,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rmul-columns-series_or_list]",
                "duration": 0.2422907999999957,
                "run_index": 47,
                "setup": {
                    "name": "setup",
                    "duration": 0.000813699999998363,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.23997740000000078,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006859999999981881,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-rows-scalar]",
                "duration": 0.0033887000000056844,
                "run_index": 48,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010390000000022326,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0006060000000012167,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:62: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007047000000000025,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-rows-series_or_list]",
                "duration": 0.0035789999999984445,
                "run_index": 49,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010556999999984384,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0006950000000003342,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:62: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007726000000012334,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-columns-scalar]",
                "duration": 0.2817090000000064,
                "run_index": 50,
                "setup": {
                    "name": "setup",
                    "duration": 0.001725800000002664,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2774667000000015,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000790699999999589,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[floordiv-columns-series_or_list]",
                "duration": 0.4114348000000021,
                "run_index": 51,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010803000000016993,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.40857609999999767,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000698100000001034,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-rows-scalar]",
                "duration": 0.005736799999997544,
                "run_index": 52,
                "setup": {
                    "name": "setup",
                    "duration": 0.001232099999999292,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000994999999999635,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:62: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0022775999999993246,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-rows-series_or_list]",
                "duration": 0.010236100000000192,
                "run_index": 53,
                "setup": {
                    "name": "setup",
                    "duration": 0.0029311000000014076,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0014724999999984334,
                    "outcome": "xfailed",
                    "xfail_reason": "reason: different behaviour",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:62: in test_math_functions\n    pytest.xfail(reason=\"different behaviour\")\nE   _pytest.outcomes.XFailed: different behaviour"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0029013999999989437,
                    "outcome": "passed"
                },
                "outcome": "xfailed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-columns-scalar]",
                "duration": 0.24457450000000236,
                "run_index": 54,
                "setup": {
                    "name": "setup",
                    "duration": 0.007186900000000662,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.229539299999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006614000000020326,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions[rfloordiv-columns-series_or_list]",
                "duration": 0.36990740000000244,
                "run_index": 55,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008887000000008527,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.3673423000000007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007877000000000578,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-None-check_missing_value]",
                "duration": 0.14961410000000086,
                "run_index": 56,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014517000000004998,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1459596999999988,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007510000000010564,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-None-check_different_index]",
                "duration": 0.17208339999999822,
                "run_index": 57,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011814000000001101,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16832469999999944,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0013958999999985622,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-3.0-check_missing_value]",
                "duration": 0.14847529999999765,
                "run_index": 58,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013059999999995853,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1451241000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007391999999981635,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[add-3.0-check_different_index]",
                "duration": 0.07216099999999415,
                "run_index": 59,
                "setup": {
                    "name": "setup",
                    "duration": 0.002784799999997034,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06583900000000042,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007523999999996533,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-None-check_missing_value]",
                "duration": 0.1719752000000021,
                "run_index": 60,
                "setup": {
                    "name": "setup",
                    "duration": 0.001695500000000294,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1676850000000023,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008991999999992117,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-None-check_different_index]",
                "duration": 0.15089880000000022,
                "run_index": 61,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012924000000005265,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.147321299999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009927000000011788,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-3.0-check_missing_value]",
                "duration": 0.11676909999999552,
                "run_index": 62,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009373999999979787,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.11403930000000173,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008549999999978297,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[radd-3.0-check_different_index]",
                "duration": 0.04454750000000374,
                "run_index": 63,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011055000000013138,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.041710599999998266,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006259000000028436,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-None-check_missing_value]",
                "duration": 0.08486689999999797,
                "run_index": 64,
                "setup": {
                    "name": "setup",
                    "duration": 0.001753999999998257,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08071550000000016,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006434000000012929,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-None-check_different_index]",
                "duration": 0.09935259999999957,
                "run_index": 65,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008608999999992761,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0965518000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010790000000007183,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-3.0-check_missing_value]",
                "duration": 0.0916057999999964,
                "run_index": 66,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011675999999987141,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08859389999999934,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006766999999996415,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[sub-3.0-check_different_index]",
                "duration": 0.03885090000000346,
                "run_index": 67,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008911000000004776,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03642010000000084,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006486000000016645,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-None-check_missing_value]",
                "duration": 0.08964709999999343,
                "run_index": 68,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009732999999982894,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08705069999999893,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006497999999979243,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-None-check_different_index]",
                "duration": 0.09021849999999532,
                "run_index": 69,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015150999999988812,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08651559999999847,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006726999999990824,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-3.0-check_missing_value]",
                "duration": 0.09172959999999719,
                "run_index": 70,
                "setup": {
                    "name": "setup",
                    "duration": 0.001106499999998789,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08891159999999942,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006050000000001887,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rsub-3.0-check_different_index]",
                "duration": 0.03953690000000165,
                "run_index": 71,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009222000000050912,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.036783899999996095,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009085999999953742,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-None-check_missing_value]",
                "duration": 0.09602139999998371,
                "run_index": 72,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010598999999942293,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09320929999999805,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006922999999972035,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-None-check_different_index]",
                "duration": 0.11450510000001657,
                "run_index": 73,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012099000000063143,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.10842730000000245,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0036580000000014934,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-3.0-check_missing_value]",
                "duration": 0.14124559999999775,
                "run_index": 74,
                "setup": {
                    "name": "setup",
                    "duration": 0.0021611000000021363,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13546019999999714,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001463199999996334,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mod-3.0-check_different_index]",
                "duration": 0.06269350000000884,
                "run_index": 75,
                "setup": {
                    "name": "setup",
                    "duration": 0.0018425000000021896,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.055354000000001236,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0036545000000032246,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-None-check_missing_value]",
                "duration": 0.12094169999999593,
                "run_index": 76,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010783999999972593,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.11802150000000466,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00076339999999675,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-None-check_different_index]",
                "duration": 0.11484000000000094,
                "run_index": 77,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009938000000033753,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.11224819999999625,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006041999999979453,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-3.0-check_missing_value]",
                "duration": 0.1253871999999987,
                "run_index": 78,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008373000000005959,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.12309429999999821,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006182999999992944,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmod-3.0-check_different_index]",
                "duration": 0.03744619999999799,
                "run_index": 79,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008152999999992971,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03503419999999835,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007814000000010424,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-None-check_missing_value]",
                "duration": 0.09040009999999654,
                "run_index": 80,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012924999999981424,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08706420000000037,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007508999999998878,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-None-check_different_index]",
                "duration": 0.0904373999999919,
                "run_index": 81,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008521999999970831,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08805029999999903,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006826999999987038,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-3.0-check_missing_value]",
                "duration": 0.08333979999999741,
                "run_index": 82,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011094999999983202,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08042410000000189,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006966999999988843,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[pow-3.0-check_different_index]",
                "duration": 0.04878759999999005,
                "run_index": 83,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010108999999971502,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04612919999999576,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006365999999999872,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-None-check_missing_value]",
                "duration": 0.0907898999999972,
                "run_index": 84,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007765000000006239,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08828739999999868,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000949499999997272,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-None-check_different_index]",
                "duration": 0.10006869999998713,
                "run_index": 85,
                "setup": {
                    "name": "setup",
                    "duration": 0.001423699999996586,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09628069999999411,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009405999999998471,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-3.0-check_missing_value]",
                "duration": 0.21841820000000212,
                "run_index": 86,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008790999999988003,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21387940000000327,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.002780600000001243,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rpow-3.0-check_different_index]",
                "duration": 0.1886711999999946,
                "run_index": 87,
                "setup": {
                    "name": "setup",
                    "duration": 0.001286899999996649,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18464230000000015,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0014551000000011527,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-None-check_missing_value]",
                "duration": 0.19938249999999158,
                "run_index": 88,
                "setup": {
                    "name": "setup",
                    "duration": 0.004698499999996386,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18615280000000212,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0038326999999966915,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-None-check_different_index]",
                "duration": 0.141530699999997,
                "run_index": 89,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010675999999989472,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.13793030000000073,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00146519999999839,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-3.0-check_missing_value]",
                "duration": 0.19808499999999896,
                "run_index": 90,
                "setup": {
                    "name": "setup",
                    "duration": 0.004452899999996873,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1874353000000042,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0017439000000010196,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[truediv-3.0-check_different_index]",
                "duration": 0.09495859999999112,
                "run_index": 91,
                "setup": {
                    "name": "setup",
                    "duration": 0.003804799999997499,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08661039999999787,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007385999999982573,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-None-check_missing_value]",
                "duration": 0.21219339999999676,
                "run_index": 92,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014277000000006979,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20844489999999638,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008930999999989808,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-None-check_different_index]",
                "duration": 0.13478839999999082,
                "run_index": 93,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014924999999976762,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1289097999999953,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0028936000000001627,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-3.0-check_missing_value]",
                "duration": 0.24373310000000714,
                "run_index": 94,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012925000000052478,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.23874920000000088,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0023988999999957628,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rtruediv-3.0-check_different_index]",
                "duration": 0.09477859999999794,
                "run_index": 95,
                "setup": {
                    "name": "setup",
                    "duration": 0.0033955999999975006,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0858923000000047,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00209509999999824,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-None-check_missing_value]",
                "duration": 0.19396309999999062,
                "run_index": 96,
                "setup": {
                    "name": "setup",
                    "duration": 0.0032426999999941586,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18502709999999922,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.002450600000003078,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-None-check_different_index]",
                "duration": 0.2586286999999956,
                "run_index": 97,
                "setup": {
                    "name": "setup",
                    "duration": 0.0016638999999969428,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.25435360000000173,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009472999999999843,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-3.0-check_missing_value]",
                "duration": 0.16137019999999325,
                "run_index": 98,
                "setup": {
                    "name": "setup",
                    "duration": 0.004541499999994869,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1513970000000029,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008902000000006183,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[mul-3.0-check_different_index]",
                "duration": 0.04995360000000204,
                "run_index": 99,
                "setup": {
                    "name": "setup",
                    "duration": 0.00140190000000473,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04602249999999941,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011272999999931699,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-None-check_missing_value]",
                "duration": 0.10935190000000006,
                "run_index": 100,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009492000000008716,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.10670040000000114,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007530999999971755,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-None-check_different_index]",
                "duration": 0.10739540000000147,
                "run_index": 101,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009994999999989318,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.10461920000000191,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007772000000016988,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-3.0-check_missing_value]",
                "duration": 0.149543599999987,
                "run_index": 102,
                "setup": {
                    "name": "setup",
                    "duration": 0.001138999999994894,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1465215999999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007439999999974134,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rmul-3.0-check_different_index]",
                "duration": 0.07081789999998733,
                "run_index": 103,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009443999999945163,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06750019999999779,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0014289000000005103,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-None-check_missing_value]",
                "duration": 0.15615249999999747,
                "run_index": 104,
                "setup": {
                    "name": "setup",
                    "duration": 0.00161549999999977,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15209749999999644,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008240000000014902,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-None-check_different_index]",
                "duration": 0.10451069999999874,
                "run_index": 105,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011545999999995615,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.10150840000000017,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006930999999994469,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-3.0-check_missing_value]",
                "duration": 0.08917740000000407,
                "run_index": 106,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014964000000006195,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08556480000000022,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006198000000026127,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[floordiv-3.0-check_different_index]",
                "duration": 0.039052300000001594,
                "run_index": 107,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008067999999994413,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03660820000000342,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008304999999992901,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-None-check_missing_value]",
                "duration": 0.08846189999999154,
                "run_index": 108,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009867999999997323,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08572779999999369,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007604999999983875,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-None-check_different_index]",
                "duration": 0.08595279999997985,
                "run_index": 109,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009302999999931671,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0834630999999959,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006290999999976066,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-3.0-check_missing_value]",
                "duration": 0.09278060000000465,
                "run_index": 110,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009219000000015853,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0901704000000052,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007663999999962812,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_fill_value[rfloordiv-3.0-check_different_index]",
                "duration": 0.03891089999999764,
                "run_index": 111,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008486999999988143,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.036579500000001985,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000633999999998025,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[add]",
                "duration": 0.15195650000000427,
                "run_index": 112,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007099000000039268,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14996779999999887,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 529, in add\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005688999999975408,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[radd]",
                "duration": 0.2323586999999847,
                "run_index": 113,
                "setup": {
                    "name": "setup",
                    "duration": 0.000980299999994827,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2296814999999981,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 529, in add\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007165999999969586,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[sub]",
                "duration": 0.2728450000000109,
                "run_index": 114,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008836000000016497,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.27053860000000185,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1998, in sub\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005392000000057351,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rsub]",
                "duration": 0.16901049999999174,
                "run_index": 115,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006352999999990061,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1671046999999959,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1848, in rsub\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006351999999978375,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[mod]",
                "duration": 0.3331220999999971,
                "run_index": 116,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008490999999963833,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.33085720000000407,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1418, in mod\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005667000000002531,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rmod]",
                "duration": 0.5181396000000049,
                "run_index": 117,
                "setup": {
                    "name": "setup",
                    "duration": 0.004522100000002638,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5070815000000053,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1814, in rmod\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0020138999999943508,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[pow]",
                "duration": 0.19151180000000068,
                "run_index": 118,
                "setup": {
                    "name": "setup",
                    "duration": 0.008060600000000306,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17484449999999896,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1605, in pow\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000546100000001104,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rpow]",
                "duration": 0.15016429999999303,
                "run_index": 119,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008248999999977968,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.14798640000000063,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1833, in rpow\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005280999999968117,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[truediv]",
                "duration": 0.14533169999998563,
                "run_index": 120,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009249999999951797,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1429035999999968,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2300, in truediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005780999999984715,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rtruediv]",
                "duration": 0.16822030000000154,
                "run_index": 121,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006686999999985233,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16637380000000235,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1863, in rtruediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005091000000021495,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[mul]",
                "duration": 0.15524969999999882,
                "run_index": 122,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007949000000024853,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15278399999999692,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1433, in mul\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008758999999969319,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rmul]",
                "duration": 0.1561740999999941,
                "run_index": 123,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015106999999972004,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1525759000000022,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1433, in mul\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005767999999974904,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[floordiv]",
                "duration": 0.20322859999999565,
                "run_index": 124,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010997999999986519,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20048719999999776,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 877, in floordiv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005418000000005918,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_functions_level[rfloordiv]",
                "duration": 0.19074249999999893,
                "run_index": 125,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006972999999987906,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18881970000000337,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:113: in test_math_functions_level\n    getattr(modin_df, op)(modin_df, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1799, in rfloordiv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005281999999979803,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[truediv-divide]",
                "duration": 0.004412500000015029,
                "run_index": 126,
                "setup": {
                    "name": "setup",
                    "duration": 0.001001300000005756,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000698100000001034,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0017118000000024836,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[truediv-div]",
                "duration": 0.0033707000000049447,
                "run_index": 127,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008264000000011151,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000415799999998967,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0013021000000037475,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rtruediv-rdiv]",
                "duration": 0.008840599999999199,
                "run_index": 128,
                "setup": {
                    "name": "setup",
                    "duration": 0.003509499999999832,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0011814000000001101,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006401999999994246,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[mul-multiply]",
                "duration": 0.0038087000000075477,
                "run_index": 129,
                "setup": {
                    "name": "setup",
                    "duration": 0.001377300000001469,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005914000000046826,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00046269999999992706,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[sub-subtract]",
                "duration": 0.006604000000002941,
                "run_index": 130,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007027000000050521,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.004606699999996522,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005918999999963148,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[add-__add__]",
                "duration": 0.005936399999995956,
                "run_index": 131,
                "setup": {
                    "name": "setup",
                    "duration": 0.0022627000000028374,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0009366999999969039,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00047429999999337724,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[radd-__radd__]",
                "duration": 0.012277300000000935,
                "run_index": 132,
                "setup": {
                    "name": "setup",
                    "duration": 0.00408000000000186,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0033931999999978757,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007240999999993392,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[truediv-__truediv__]",
                "duration": 0.0032802000000060616,
                "run_index": 133,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012045000000000528,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00042820000000176606,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00044300000000419004,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rtruediv-__rtruediv__]",
                "duration": 0.0030334000000138417,
                "run_index": 134,
                "setup": {
                    "name": "setup",
                    "duration": 0.00089250000000618,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005955000000028576,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000652899999998624,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[floordiv-__floordiv__]",
                "duration": 0.005235800000001234,
                "run_index": 135,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012082000000006587,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004612999999977774,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.002358100000002139,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rfloordiv-__rfloordiv__]",
                "duration": 0.005119500000006383,
                "run_index": 136,
                "setup": {
                    "name": "setup",
                    "duration": 0.0017926000000016984,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0008173000000013531,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000717000000001633,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[mod-__mod__]",
                "duration": 0.008582000000004086,
                "run_index": 137,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009212000000005105,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00609839999999906,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006412000000040052,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rmod-__rmod__]",
                "duration": 0.006588599999993505,
                "run_index": 138,
                "setup": {
                    "name": "setup",
                    "duration": 0.002286399999995581,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005822000000037519,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0014335999999985916,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[mul-__mul__]",
                "duration": 0.009166200000002789,
                "run_index": 139,
                "setup": {
                    "name": "setup",
                    "duration": 0.0017105000000015025,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0031413999999969633,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0026038000000028205,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rmul-__rmul__]",
                "duration": 0.003907600000005118,
                "run_index": 140,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011893000000000598,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0010270000000005552,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005020000000044433,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[pow-__pow__]",
                "duration": 0.005784900000001869,
                "run_index": 141,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007516000000009626,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004084999999989236,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0038732000000010203,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rpow-__rpow__]",
                "duration": 0.004567199999996774,
                "run_index": 142,
                "setup": {
                    "name": "setup",
                    "duration": 0.001413100000000611,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.001154100000000824,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005868999999947278,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[sub-__sub__]",
                "duration": 0.002285999999983801,
                "run_index": 143,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007243999999957396,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004086999999941554,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00042849999999816646,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_math_alias[rsub-__rsub__]",
                "duration": 0.01146590000000458,
                "run_index": 144,
                "setup": {
                    "name": "setup",
                    "duration": 0.004087200000000735,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0026460000000056993,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000645499999997412,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-as_left]",
                "duration": 0.08989079999999916,
                "run_index": 145,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014772999999976832,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08636450000000195,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005717000000018402,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-4]",
                "duration": 0.09521519999999839,
                "run_index": 146,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008094000000014034,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09302679999999697,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005695999999986157,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-4.0]",
                "duration": 0.08814909999999543,
                "run_index": 147,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010225999999988744,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08540659999999889,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006972999999987906,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-eq-a]",
                "duration": 0.08528480000000371,
                "run_index": 148,
                "setup": {
                    "name": "setup",
                    "duration": 0.000996000000000663,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08252759999999881,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007652000000035741,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-as_left]",
                "duration": 0.0948890000000091,
                "run_index": 149,
                "setup": {
                    "name": "setup",
                    "duration": 0.0024579000000031215,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08936729999999926,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006059000000036008,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-4]",
                "duration": 0.08554829999999924,
                "run_index": 150,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009614000000013334,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08301889999999901,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006065999999975702,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-4.0]",
                "duration": 0.08585320000000962,
                "run_index": 151,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011829000000034284,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08154489999999726,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0019425000000055093,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ge-a]",
                "duration": 0.06078230000000673,
                "run_index": 152,
                "setup": {
                    "name": "setup",
                    "duration": 0.001148900000004005,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05758910000000128,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008953999999974371,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-as_left]",
                "duration": 0.12709809999999067,
                "run_index": 153,
                "setup": {
                    "name": "setup",
                    "duration": 0.0027663999999987254,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.12094339999999448,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006218999999987318,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-4]",
                "duration": 0.07786180000000087,
                "run_index": 154,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008213999999995281,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07565149999999932,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005675000000024966,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-4.0]",
                "duration": 0.06974749999999119,
                "run_index": 155,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008223999999970033,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06735809999999987,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007445999999973196,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-gt-a]",
                "duration": 0.025640600000002678,
                "run_index": 156,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008809000000056244,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.022836199999993312,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010425999999981173,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-as_left]",
                "duration": 0.076658000000009,
                "run_index": 157,
                "setup": {
                    "name": "setup",
                    "duration": 0.0016936000000029594,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0725902000000005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006806000000025847,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-4]",
                "duration": 0.06583289999999664,
                "run_index": 158,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008385000000004084,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06349139999999664,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006644999999991796,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-4.0]",
                "duration": 0.06564909999999458,
                "run_index": 159,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007598999999984812,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06329129999999594,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008380000000016707,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-le-a]",
                "duration": 0.04125670000000525,
                "run_index": 160,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009586000000041395,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.038539700000001176,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007997999999957983,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-as_left]",
                "duration": 0.088530200000001,
                "run_index": 161,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009575999999995588,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08598100000000386,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000633999999998025,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-4]",
                "duration": 0.09736530000000698,
                "run_index": 162,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009516000000004965,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09478580000000392,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006763000000020725,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-4.0]",
                "duration": 0.07212790000001235,
                "run_index": 163,
                "setup": {
                    "name": "setup",
                    "duration": 0.000912200000001917,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0696874000000065,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006161000000020067,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-lt-a]",
                "duration": 0.027527099999993254,
                "run_index": 164,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008565999999987639,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0253133999999946,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000500500000001125,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-as_left]",
                "duration": 0.07672350000000705,
                "run_index": 165,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008036000000046783,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07448320000000308,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000633099999994613,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-4]",
                "duration": 0.07461219999999713,
                "run_index": 166,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008764999999968381,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07227550000000349,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005836999999999648,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-4.0]",
                "duration": 0.09678739999999664,
                "run_index": 167,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009480000000010591,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09400479999999334,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008866000000011809,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[int_data-ne-a]",
                "duration": 0.10258759999999967,
                "run_index": 168,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011469000000019491,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09965150000000023,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006422999999955437,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-as_left]",
                "duration": 0.3325205000000011,
                "run_index": 169,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014028000000010366,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.32913709999999696,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005778000000020711,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-4]",
                "duration": 0.29401080000000235,
                "run_index": 170,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010384999999999422,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2912318000000056,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007019999999968718,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-4.0]",
                "duration": 0.20097290000000356,
                "run_index": 171,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008734000000032438,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19858339999999686,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006427000000002181,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-eq-a]",
                "duration": 0.2640875999999963,
                "run_index": 172,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009717999999949711,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.26139040000000335,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007536000000030185,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-as_left]",
                "duration": 0.2645134999999925,
                "run_index": 173,
                "setup": {
                    "name": "setup",
                    "duration": 0.000812699999997335,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2621532000000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007348999999976513,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-4]",
                "duration": 0.247534899999998,
                "run_index": 174,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012818000000009988,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.24425619999999526,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007151000000007457,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-4.0]",
                "duration": 0.2352501000000089,
                "run_index": 175,
                "setup": {
                    "name": "setup",
                    "duration": 0.000910500000003367,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.23279840000000007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006307000000020935,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ge-a]",
                "duration": 0.19712080000000043,
                "run_index": 176,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014400000000023283,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19358859999999822,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006521999999975492,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-as_left]",
                "duration": 0.22950469999999257,
                "run_index": 177,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008198999999962098,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.22714369999999917,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007212000000009766,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-4]",
                "duration": 0.22039189999998854,
                "run_index": 178,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008137999999959789,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21812219999999627,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006421000000003119,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-4.0]",
                "duration": 0.20439919999999034,
                "run_index": 179,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007926999999980922,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20203439999999517,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007793999999989865,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-gt-a]",
                "duration": 0.186266499999995,
                "run_index": 180,
                "setup": {
                    "name": "setup",
                    "duration": 0.001153799999997318,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18263040000000075,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0013284999999996217,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-as_left]",
                "duration": 0.22048779999999368,
                "run_index": 181,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010604000000000724,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21749839999999665,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008685999999968885,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-4]",
                "duration": 0.272626499999987,
                "run_index": 182,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011962999999965973,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2696280999999985,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006057999999953267,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-4.0]",
                "duration": 0.2459209999999885,
                "run_index": 183,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008004999999968732,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.24378009999999506,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005398999999997045,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-le-a]",
                "duration": 0.1857855000000015,
                "run_index": 184,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008449999999982083,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18280410000000558,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0012913999999994985,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-as_left]",
                "duration": 0.448321799999988,
                "run_index": 185,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008842999999956191,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.44575929999999886,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007938999999979046,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-4]",
                "duration": 0.4350532000000058,
                "run_index": 186,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010096000000032745,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4324477999999985,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005862000000007583,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-4.0]",
                "duration": 0.2174103000000116,
                "run_index": 187,
                "setup": {
                    "name": "setup",
                    "duration": 0.0025065000000026316,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21160360000000367,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007937000000026728,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-lt-a]",
                "duration": 0.16311129999999707,
                "run_index": 188,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008493999999998891,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1607191999999955,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006933000000017842,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-as_left]",
                "duration": 0.2049659000000048,
                "run_index": 189,
                "setup": {
                    "name": "setup",
                    "duration": 0.001043299999999192,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2020923000000039,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007870000000025357,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-4]",
                "duration": 0.19516060000000124,
                "run_index": 190,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007452999999983945,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19294330000000315,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007267000000013013,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-4.0]",
                "duration": 0.19718579999998553,
                "run_index": 191,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010795999999970718,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19434369999999745,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006828999999939356,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_comparison[float_nan_data-ne-a]",
                "duration": 0.19556920000000133,
                "run_index": 192,
                "setup": {
                    "name": "setup",
                    "duration": 0.001443500000000597,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19186539999999752,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008168000000026154,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-eq]",
                "duration": 0.16192010000001034,
                "run_index": 193,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007256000000026575,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.15980540000000332,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 775, in eq\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006635000000017044,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-ge]",
                "duration": 0.1638280000000094,
                "run_index": 194,
                "setup": {
                    "name": "setup",
                    "duration": 0.000961100000004933,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16138109999999983,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 929, in ge\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005246999999997115,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-gt]",
                "duration": 0.2997264000000044,
                "run_index": 195,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009850000000000136,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.29248520000000156,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 937, in gt\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.005271200000002807,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-le]",
                "duration": 0.296769100000013,
                "run_index": 196,
                "setup": {
                    "name": "setup",
                    "duration": 0.00279180000000423,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.28944990000000104,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1300, in le\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001735600000003501,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-lt]",
                "duration": 0.2472867999999977,
                "run_index": 197,
                "setup": {
                    "name": "setup",
                    "duration": 0.0031722000000016237,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.22997559999999595,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1314, in lt\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0109667999999985,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[int_data-ne]",
                "duration": 0.26928930000001117,
                "run_index": 198,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015816000000015151,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.26553100000000285,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1448, in ne\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005951000000052886,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-eq]",
                "duration": 0.43339429999999624,
                "run_index": 199,
                "setup": {
                    "name": "setup",
                    "duration": 0.001553999999998723,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.42912079999999975,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 775, in eq\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011654999999990423,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-ge]",
                "duration": 0.4048980999999827,
                "run_index": 200,
                "setup": {
                    "name": "setup",
                    "duration": 0.006512199999995971,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.39042469999999696,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 929, in ge\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0014489999999938163,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-gt]",
                "duration": 0.3050886000000119,
                "run_index": 201,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010278000000027987,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.30252150000000455,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 937, in gt\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005115000000017744,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-le]",
                "duration": 0.2896411000000114,
                "run_index": 202,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009556000000046083,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2871906000000024,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1300, in le\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005392999999997983,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-lt]",
                "duration": 0.3618162000000069,
                "run_index": 203,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009441999999992845,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.35942780000000596,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1314, in lt\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005000000000023874,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_multi_level_comparison[float_nan_data-ne]",
                "duration": 0.26885140000001684,
                "run_index": 204,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007629000000051178,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2667916000000048,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:167: in test_multi_level_comparison\n    getattr(modin_df_multi_level, op)(modin_df_multi_level, axis=0, level=1)\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1448, in ne\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 412, in _binary_op\nE       return self._default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 458, in _default_to_pandas\nE       args = try_cast_to_pandas(args)\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in try_cast_to_pandas\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 437, in <listcomp>\nE       return type(obj)([try_cast_to_pandas(o, squeeze=squeeze) for o in obj])\nE     File \"C:\\prog\\modin\\modin\\utils.py\", line 421, in try_cast_to_pandas\nE       result = obj._to_pandas()\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2821, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\storage_formats\\pandas\\query_compiler.py\", line 257, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005340000000018108,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_equals",
                "duration": 0.13928070000000048,
                "run_index": 205,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005051999999992063,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1375118999999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007584000000022684,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_ser-True]",
                "duration": 0.04528300000000485,
                "run_index": 206,
                "setup": {
                    "name": "setup",
                    "duration": 0.001198600000002159,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04218680000000319,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:230: in test_mismatched_row_partitions\n    modin_res = modin_df2 / modin_df1.a\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2300, in truediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 428, in _binary_op\nE       new_query_compiler = getattr(self._query_compiler, op)(other, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\algebra\\binary.py\", line 82, in caller\nE       query_compiler._modin_frame.broadcast_apply(\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 97, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=1)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 521, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 522, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 525, in <listcomp>\nE       cols=self.columns[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006989999999973406,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_ser-False]",
                "duration": 0.04006489999999019,
                "run_index": 207,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007846999999969739,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.037631499999996265,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:230: in test_mismatched_row_partitions\n    modin_res = modin_df2 / modin_df1.a\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2300, in truediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 428, in _binary_op\nE       new_query_compiler = getattr(self._query_compiler, op)(other, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\algebra\\binary.py\", line 82, in caller\nE       query_compiler._modin_frame.broadcast_apply(\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008639999999999759,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_df-True]",
                "duration": 0.03958530000000593,
                "run_index": 208,
                "setup": {
                    "name": "setup",
                    "duration": 0.000950000000003115,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03715569999999957,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:233: in test_mismatched_row_partitions\n    modin_res = modin_df2 / modin_df1\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2300, in truediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 428, in _binary_op\nE       new_query_compiler = getattr(self._query_compiler, op)(other, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\algebra\\binary.py\", line 92, in caller\nE       query_compiler._modin_frame.binary_op(\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00052960000000013,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-df_df-False]",
                "duration": 0.05531380000000752,
                "run_index": 209,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007912000000018793,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04449809999999843,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:233: in test_mismatched_row_partitions\n    modin_res = modin_df2 / modin_df1\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2300, in truediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 428, in _binary_op\nE       new_query_compiler = getattr(self._query_compiler, op)(other, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\algebra\\binary.py\", line 92, in caller\nE       query_compiler._modin_frame.binary_op(\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 95, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=0)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 501, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 502, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 505, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.009233300000005329,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_same_name-True]",
                "duration": 0.1170570999999967,
                "run_index": 210,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010745000000014215,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.11430529999999806,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:236: in test_mismatched_row_partitions\n    modin_res = modin_df2.a / modin_df1.a\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 529, in __truediv__\nE       return self.truediv(right)\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 1941, in truediv\nE       return super(Series, new_self).truediv(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 2813, in truediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 428, in _binary_op\nE       new_query_compiler = getattr(self._query_compiler, op)(other, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\algebra\\binary.py\", line 92, in caller\nE       query_compiler._modin_frame.binary_op(\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 93, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=None)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 477, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 478, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 481, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006027999999957956,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_same_name-False]",
                "duration": 0.116201199999999,
                "run_index": 211,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008523999999994203,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.11381659999999982,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:236: in test_mismatched_row_partitions\n    modin_res = modin_df2.a / modin_df1.a\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 529, in __truediv__\nE       return self.truediv(right)\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 1941, in truediv\nE       return super(Series, new_self).truediv(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 2813, in truediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 428, in _binary_op\nE       new_query_compiler = getattr(self._query_compiler, op)(other, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\algebra\\binary.py\", line 92, in caller\nE       query_compiler._modin_frame.binary_op(\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 93, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=None)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 477, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 478, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 481, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006798000000003412,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_different_name-True]",
                "duration": 0.10755710000000107,
                "run_index": 212,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008831000000029121,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.10495939999999848,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:239: in test_mismatched_row_partitions\n    modin_res = modin_df2.a / modin_df1.b\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 529, in __truediv__\nE       return self.truediv(right)\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 1941, in truediv\nE       return super(Series, new_self).truediv(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 2813, in truediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 428, in _binary_op\nE       new_query_compiler = getattr(self._query_compiler, op)(other, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\algebra\\binary.py\", line 92, in caller\nE       query_compiler._modin_frame.binary_op(\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 93, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=None)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 477, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 478, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 481, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008314999999967654,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_aligned-ser_ser_different_name-False]",
                "duration": 0.059200500000002876,
                "run_index": 213,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009833000000014636,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.056676600000002963,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_binary.py:239: in test_mismatched_row_partitions\n    modin_res = modin_df2.a / modin_df1.b\nmodin\\experimental\\cloud\\rpyc_proxy.py:379: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:254: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:501: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 529, in __truediv__\nE       return self.truediv(right)\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 1941, in truediv\nE       return super(Series, new_self).truediv(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 2813, in truediv\nE       return self._binary_op(\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 428, in _binary_op\nE       new_query_compiler = getattr(self._query_compiler, op)(other, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\algebra\\binary.py\", line 92, in caller\nE       query_compiler._modin_frame.binary_op(\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 93, in run_f_on_minimally_updated_metadata\nE       obj._propagate_index_objs(axis=None)\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 477, in _propagate_index_objs\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 478, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\core\\dataframe\\pandas\\dataframe\\dataframe.py\", line 481, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 277, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 501, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: range indices must be integers or slices, not type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 339, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 657, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 631, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\range.py\", line 821, in __getitem__\nE       new_range = self._range[key]\nE   TypeError: range indices must be integers or slices, not type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005572999999969852,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_ser-True]",
                "duration": 0.04587519999999756,
                "run_index": 214,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014909000000002948,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.042248899999997036,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006444999999999368,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_ser-False]",
                "duration": 0.055085599999991075,
                "run_index": 215,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009293999999968605,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05215030000000098,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001076499999996372,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_df-True]",
                "duration": 0.04147389999998552,
                "run_index": 216,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009233999999977982,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.03885719999999537,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007698999999945499,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-df_df-False]",
                "duration": 0.04178670000000295,
                "run_index": 217,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007966000000010354,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.039450000000002206,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007434999999986758,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_same_name-True]",
                "duration": 0.05822839999999019,
                "run_index": 218,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007960999999951923,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0557824999999994,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008537000000004014,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_same_name-False]",
                "duration": 0.040101799999987975,
                "run_index": 219,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008113999999963539,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.037728399999998885,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007505999999963819,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_different_name-True]",
                "duration": 0.03976589999999902,
                "run_index": 220,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008231999999992468,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0374598000000006,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006596999999999298,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_mismatched_row_partitions[idx_not_aligned-ser_ser_different_name-False]",
                "duration": 0.037878800000001434,
                "run_index": 221,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008024999999989291,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.035510700000003226,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007631000000003496,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_binary.py::test_duplicate_indexes",
                "duration": 0.10297480000001258,
                "run_index": 222,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008291000000042459,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08097200000000271,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.020344600000001378,
                    "outcome": "passed"
                },
                "outcome": "passed"
            }
        ],
        "summary": {
            "passed": 183,
            "xfailed": 6,
            "failed": 34,
            "num_tests": 223,
            "duration": 55.82724642753601
        },
        "created_at": "2022-01-24 22:31:52.228018"
    }
}