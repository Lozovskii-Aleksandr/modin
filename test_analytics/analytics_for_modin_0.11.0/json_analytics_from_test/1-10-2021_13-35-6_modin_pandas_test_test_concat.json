{
    "report": {
        "environment": {
            "Python": "3.8.11",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/test_concat.py::test_df_concat",
                "duration": 10.796603500000002,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 5.355773000000001,
                    "outcome": "passed",
                    "stderr": "INFO:SLAVE/18813:server started on [127.0.0.1]:18813\r\nINFO:SLAVE/18813:accepted ('127.0.0.1', 52490) with fd 680\r\nINFO:SLAVE/18813:welcome ('127.0.0.1', 52490)\r\n"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0842698999999989,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:35: in test_df_concat\n    df_equals(pd.concat([df, df2]), pandas.concat([df, df2]))\nmodin\\pandas\\general.py:433: in concat\n    list_of_objs = [\nmodin\\pandas\\general.py:438: in <listcomp>\n    else DataFrame(obj)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type",
                    "stderr": "UserWarning: Distributing <netref class 'rpyc.core.netref.type'> object. This may take some time.\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\r\n    self._query_compiler = from_pandas(pandas_df)._query_compiler\r\n  File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\r\n    return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\r\n    return cls.__factory._from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\r\n    return cls.io_cls.from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\r\n    return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\r\n  File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\r\n    return cls(data_cls.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\r\n    new_index = df.index\r\n  File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\r\nTypeError: Expected list, got type\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007876000000006655,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat",
                "duration": 0.5553764999999995,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005305999999993816,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5538410000000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:42: in test_concat\n    df_equals(pd.concat([modin_df, modin_df2]), pandas.concat([df, df2]))\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00047430000000048267,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_with_series",
                "duration": 0.45919040000000066,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004957000000000988,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4577574000000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:51: in test_concat_with_series\n    pd.concat([modin_df, modin_df2, pandas_series], axis=0),\nmodin\\pandas\\general.py:433: in concat\n    list_of_objs = [\nmodin\\pandas\\general.py:437: in <listcomp>\n    if isinstance(obj, (pandas.Series, Series)) and axis == 0\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: object __array__ method not producing an array\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 172, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 672, in __init__\nE       mgr = ndarray_to_mgr(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 304, in ndarray_to_mgr\nE       values = _prep_ndarray(values, copy=copy)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 550, in _prep_ndarray\nE       values = np.array(values, copy=copy)\nE   ValueError: object __array__ method not producing an array",
                    "stderr": "DEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 172, in __init__\r\n    pandas_df = pandas.DataFrame(\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 672, in __init__\r\n    mgr = ndarray_to_mgr(\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 304, in ndarray_to_mgr\r\n    values = _prep_ndarray(values, copy=copy)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 550, in _prep_ndarray\r\n    values = np.array(values, copy=copy)\r\nValueError: object __array__ method not producing an array\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000441600000000264,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_on_index",
                "duration": 0.5231916999999999,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005109999999994841,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5215931999999999,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:66: in test_concat_on_index\n    pd.concat([modin_df, modin_df2], axis=\"index\"),\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00057650000000109,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_on_column",
                "duration": 0.48813700000000004,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005314999999992409,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.486592700000001,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:84: in test_concat_on_column\n    df_equals(\nmodin\\pandas\\test\\utils.py:535: in df_equals\n    df1 = to_pandas(df1)\nmodin\\utils.py:378: in to_pandas\n    return modin_obj._to_pandas()\nmodin\\experimental\\cloud\\rpyc_proxy.py:414: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: \nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2861, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 255, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2227, in to_pandas\nE       df = self._partition_mgr_cls.to_pandas(self._partitions)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 678, in to_pandas\nE       retrieved_objects = [[obj.to_pandas() for obj in part] for part in partitions]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 678, in <listcomp>\nE       retrieved_objects = [[obj.to_pandas() for obj in part] for part in partitions]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 678, in <listcomp>\nE       retrieved_objects = [[obj.to_pandas() for obj in part] for part in partitions]\nE     File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 167, in to_pandas\nE       assert type(dataframe) is pandas.DataFrame or type(dataframe) is pandas.Series\nE   AssertionError",
                    "stderr": "DEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2861, in _to_pandas\r\n    return self._query_compiler.to_pandas()\r\n  File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 255, in to_pandas\r\n    return self._modin_frame.to_pandas()\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2227, in to_pandas\r\n    df = self._partition_mgr_cls.to_pandas(self._partitions)\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 678, in to_pandas\r\n    retrieved_objects = [[obj.to_pandas() for obj in part] for part in partitions]\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 678, in <listcomp>\r\n    retrieved_objects = [[obj.to_pandas() for obj in part] for part in partitions]\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 678, in <listcomp>\r\n    retrieved_objects = [[obj.to_pandas() for obj in part] for part in partitions]\r\n  File \"C:\\prog\\modin\\modin\\engines\\python\\pandas_on_python\\frame\\partition.py\", line 167, in to_pandas\r\n    assert type(dataframe) is pandas.DataFrame or type(dataframe) is pandas.Series\r\nAssertionError\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00048130000000057294,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_invalid_axis_errors",
                "duration": 0.4085605000000001,
                "run_index": 5,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004945999999996786,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4069529000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000618400000000463,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_mixed_concat",
                "duration": 0.42978340000000337,
                "run_index": 6,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005528000000012412,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4281655000000004,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:119: in test_mixed_concat\n    df_equals(pd.concat(mixed_dfs), pandas.concat([df, df2, df3]))\nmodin\\pandas\\general.py:433: in concat\n    list_of_objs = [\nmodin\\pandas\\general.py:438: in <listcomp>\n    else DataFrame(obj)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type",
                    "stderr": "DEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\r\n    self._query_compiler = from_pandas(pandas_df)._query_compiler\r\n  File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\r\n    return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\r\n    return cls.__factory._from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\r\n    return cls.io_cls.from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\r\n    return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\r\n  File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\r\n    return cls(data_cls.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\r\n    new_index = df.index\r\n  File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\r\nTypeError: Expected list, got type\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005123000000004652,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_mixed_inner_concat",
                "duration": 0.4449137000000025,
                "run_index": 7,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007420000000006866,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.44295669999999987,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:129: in test_mixed_inner_concat\n    pd.concat(mixed_dfs, join=\"inner\"), pandas.concat([df, df2, df3], join=\"inner\")\nmodin\\pandas\\general.py:433: in concat\n    list_of_objs = [\nmodin\\pandas\\general.py:438: in <listcomp>\n    else DataFrame(obj)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type",
                    "stderr": "DEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\r\n    self._query_compiler = from_pandas(pandas_df)._query_compiler\r\n  File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\r\n    return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\r\n    return cls.__factory._from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\r\n    return cls.io_cls.from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\r\n    return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\r\n  File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\r\n    return cls(data_cls.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\r\n    new_index = df.index\r\n  File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\r\nTypeError: Expected list, got type\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00047300000000127795,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_mixed_none_concat",
                "duration": 0.43886819999999815,
                "run_index": 8,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004805999999994981,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.43738860000000024,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:139: in test_mixed_none_concat\n    df_equals(pd.concat(mixed_dfs), pandas.concat([df, df2, df3]))\nmodin\\pandas\\general.py:433: in concat\n    list_of_objs = [\nmodin\\pandas\\general.py:438: in <listcomp>\n    else DataFrame(obj)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type",
                    "stderr": "DEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\r\n    self._query_compiler = from_pandas(pandas_df)._query_compiler\r\n  File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\r\n    return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\r\n    return cls.__factory._from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\r\n    return cls.io_cls.from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\r\n    return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\r\n  File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\r\n    return cls(data_cls.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\r\n    new_index = df.index\r\n  File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\r\nTypeError: Expected list, got type\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005183999999989197,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_ignore_index_concat",
                "duration": 0.05777630000000222,
                "run_index": 9,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005543000000010068,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05602859999999943,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:146: in test_ignore_index_concat\n    pd.concat([df, df2], ignore_index=True),\nmodin\\pandas\\general.py:433: in concat\n    list_of_objs = [\nmodin\\pandas\\general.py:438: in <listcomp>\n    else DataFrame(obj)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type",
                    "stderr": "DEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 175, in __init__\r\n    self._query_compiler = from_pandas(pandas_df)._query_compiler\r\n  File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\r\n    return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 158, in from_pandas\r\n    return cls.__factory._from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\r\n    return cls.io_cls.from_pandas(df)\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 85, in from_pandas\r\n    return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\r\n  File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\r\n    return cls(data_cls.from_pandas(df))\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\r\n    new_index = df.index\r\n  File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\r\nTypeError: Expected list, got type\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006391000000007807,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_non_subscriptable_keys",
                "duration": 6.870764100000002,
                "run_index": 10,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008147000000011673,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 6.8686021,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:153: in test_concat_non_subscriptable_keys\n    df = pd.DataFrame(frame_data).add_prefix(\"col\")\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Cannot interpret 'dtype('int32')' as a data type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 159, in __init__\nE       data = np.array(values, dtype=old_dtype)\nE   TypeError: Cannot interpret 'dtype('int32')' as a data type",
                    "stderr": "DEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 159, in __init__\r\n    data = np.array(values, dtype=old_dtype)\r\nTypeError: Cannot interpret 'dtype('int32')' as a data type\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005325999999996611,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_series_only",
                "duration": 0.8529574999999987,
                "run_index": 11,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006662999999988983,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8510501000000019,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005747999999989872,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_with_empty_frame",
                "duration": 0.1725449000000019,
                "run_index": 12,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005412000000006856,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16970500000000044,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0017575000000000784,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_multiindex[False-0]",
                "duration": 0.6823398999999988,
                "run_index": 13,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009605000000014741,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6798268999999983,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:209: in test_concat_multiindex\n    pd.concat([md_df1, md_df2], keys=keys, axis=axis, names=names),\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005919999999974834,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_multiindex[False-1]",
                "duration": 0.6415906000000042,
                "run_index": 14,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007196000000000424,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6396174000000023,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:209: in test_concat_multiindex\n    pd.concat([md_df1, md_df2], keys=keys, axis=axis, names=names),\nmodin\\pandas\\general.py:494: in concat\n    result_df.columns = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:500: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:178: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 636, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2501, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 263, in _set_columns\nE       self._query_compiler.columns = new_columns\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 96, in set_axis\nE       self._modin_frame.columns = cols\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 270, in _set_columns\nE       self.synchronize_labels(axis=1)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 399, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 400, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 403, in <listcomp>\nE       cols=self.columns[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 276, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 484, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 640, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices",
                    "stderr": "UserWarning: Distributing <netref class 'rpyc.core.netref.type'> object. This may take some time.\r\nUserWarning: Distributing <class 'NoneType'> object. This may take some time.\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '__iter__'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '__iter__'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '__array__'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 636, in _handle_setattr\r\n    return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2501, in __setattr__\r\n    object.__setattr__(self, key, value)\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 263, in _set_columns\r\n    self._query_compiler.columns = new_columns\r\n  File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 96, in set_axis\r\n    self._modin_frame.columns = cols\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 270, in _set_columns\r\n    self.synchronize_labels(axis=1)\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 399, in synchronize_labels\r\n    [\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 400, in <listcomp>\r\n    [\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 403, in <listcomp>\r\n    cols=self.columns[\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 276, in method\r\n    return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 484, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\r\n    raise self._obj\r\n_get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 640, in _handle_callattr\r\n    return self._handle_call(obj, args, kwargs)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\r\n    new_codes = [level_codes[key] for level_codes in self.codes]\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\r\n    new_codes = [level_codes[key] for level_codes in self.codes]\r\nIndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\r\n\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005340000000018108,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_multiindex[True-0]",
                "duration": 0.49790729999999783,
                "run_index": 15,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007577999999988094,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4958543999999989,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:209: in test_concat_multiindex\n    pd.concat([md_df1, md_df2], keys=keys, axis=axis, names=names),\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005373000000012951,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_multiindex[True-1]",
                "duration": 0.47614260000000286,
                "run_index": 16,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007085000000017772,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.47418590000000194,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:209: in test_concat_multiindex\n    pd.concat([md_df1, md_df2], keys=keys, axis=axis, names=names),\nmodin\\pandas\\general.py:494: in concat\n    result_df.columns = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:500: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:178: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 636, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2501, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 263, in _set_columns\nE       self._query_compiler.columns = new_columns\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 96, in set_axis\nE       self._modin_frame.columns = cols\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 270, in _set_columns\nE       self.synchronize_labels(axis=1)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 399, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 400, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 403, in <listcomp>\nE       cols=self.columns[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 276, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 484, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 640, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices",
                    "stderr": "DEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '__iter__'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '__iter__'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '__array__'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 636, in _handle_setattr\r\n    return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2501, in __setattr__\r\n    object.__setattr__(self, key, value)\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 263, in _set_columns\r\n    self._query_compiler.columns = new_columns\r\n  File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 96, in set_axis\r\n    self._modin_frame.columns = cols\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 270, in _set_columns\r\n    self.synchronize_labels(axis=1)\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 399, in synchronize_labels\r\n    [\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 400, in <listcomp>\r\n    [\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 403, in <listcomp>\r\n    cols=self.columns[\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 276, in method\r\n    return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 484, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\r\n    raise self._obj\r\n_get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 640, in _handle_callattr\r\n    return self._handle_call(obj, args, kwargs)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\r\n    new_codes = [level_codes[key] for level_codes in self.codes]\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\r\n    new_codes = [level_codes[key] for level_codes in self.codes]\r\nIndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\r\n\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005396999999973673,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_dictionary[0]",
                "duration": 0.4960550999999995,
                "run_index": 17,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006053000000001418,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.49420920000000024,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:220: in test_concat_dictionary\n    pd.concat({\"A\": modin_df, \"B\": modin_df2}, axis=axis),\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006352999999990061,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_concat_dictionary[1]",
                "duration": 0.5003554000000037,
                "run_index": 18,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005997000000022013,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.49861689999999825,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:220: in test_concat_dictionary\n    pd.concat({\"A\": modin_df, \"B\": modin_df2}, axis=axis),\nmodin\\pandas\\general.py:494: in concat\n    result_df.columns = new_idx\nmodin\\experimental\\cloud\\rpyc_proxy.py:500: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:178: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 636, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2501, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 263, in _set_columns\nE       self._query_compiler.columns = new_columns\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 96, in set_axis\nE       self._modin_frame.columns = cols\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 270, in _set_columns\nE       self.synchronize_labels(axis=1)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 399, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 400, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 403, in <listcomp>\nE       cols=self.columns[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 276, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 484, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 640, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE   IndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices",
                    "stderr": "DEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '_typ'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '__iter__'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '__iter__'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 630, in _handle_getattr\r\n    return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\nAttributeError: 'slice' object has no attribute '__array__'\r\nDEBUG:SLAVE/18813:Exception caught\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 636, in _handle_setattr\r\n    return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 552, in _access_attr\r\n    return accessor(obj, name, *args)\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2501, in __setattr__\r\n    object.__setattr__(self, key, value)\r\n  File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 263, in _set_columns\r\n    self._query_compiler.columns = new_columns\r\n  File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 96, in set_axis\r\n    self._modin_frame.columns = cols\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 270, in _set_columns\r\n    self.synchronize_labels(axis=1)\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 399, in synchronize_labels\r\n    [\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 400, in <listcomp>\r\n    [\r\n  File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 403, in <listcomp>\r\n    cols=self.columns[\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 276, in method\r\n    return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\r\n    return conn.sync_request(handler, proxy, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 484, in sync_request\r\n    return self.async_request(handler, *args, timeout=timeout).value\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\r\n    raise self._obj\r\n_get_exception_class.<locals>.Derived: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\r\n\r\n========= Remote Traceback (1) =========\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 326, in _dispatch_request\r\n    res = self._HANDLERS[handler](self, *args)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 640, in _handle_callattr\r\n    return self._handle_call(obj, args, kwargs)\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 614, in _handle_call\r\n    return obj(*args, **dict(kwargs))\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in __getitem__\r\n    new_codes = [level_codes[key] for level_codes in self.codes]\r\n  File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2060, in <listcomp>\r\n    new_codes = [level_codes[key] for level_codes in self.codes]\r\nIndexError: only integers, slices (`:`), ellipsis (`...`), numpy.newaxis (`None`) and integer or boolean arrays are valid indices\r\n\r\n"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005391000000010138,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_sort_order[0-inner-False]",
                "duration": 0.5203546999999986,
                "run_index": 19,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008225999999993405,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.517977700000003,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:233: in test_sort_order\n    modin_concat = pd.concat([modin_df, modin_df2], join=join, sort=sort)\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007317999999969516,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_sort_order[0-inner-True]",
                "duration": 0.5026707999999971,
                "run_index": 20,
                "setup": {
                    "name": "setup",
                    "duration": 0.0023327999999978033,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.49714099999999917,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:233: in test_sort_order\n    modin_concat = pd.concat([modin_df, modin_df2], join=join, sort=sort)\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008642000000023131,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_sort_order[0-outer-False]",
                "duration": 0.5397339999999957,
                "run_index": 21,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014261999999973796,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5361073000000012,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:233: in test_sort_order\n    modin_concat = pd.concat([modin_df, modin_df2], join=join, sort=sort)\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007742999999997835,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_sort_order[0-outer-True]",
                "duration": 0.4870541999999922,
                "run_index": 22,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007965999999974827,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.48484339999999904,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:233: in test_sort_order\n    modin_concat = pd.concat([modin_df, modin_df2], join=join, sort=sort)\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006175999999982196,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_sort_order[1-inner-False]",
                "duration": 0.5026239000000032,
                "run_index": 23,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009093000000000018,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5002066999999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:233: in test_sort_order\n    modin_concat = pd.concat([modin_df, modin_df2], join=join, sort=sort)\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005986000000035574,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_sort_order[1-inner-True]",
                "duration": 0.49425309999999456,
                "run_index": 24,
                "setup": {
                    "name": "setup",
                    "duration": 0.000785999999997955,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4921409999999966,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:233: in test_sort_order\n    modin_concat = pd.concat([modin_df, modin_df2], join=join, sort=sort)\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005401000000020417,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_sort_order[1-outer-False]",
                "duration": 0.49876510000000707,
                "run_index": 25,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008918999999991684,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.49617520000000326,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:233: in test_sort_order\n    modin_concat = pd.concat([modin_df, modin_df2], join=join, sort=sort)\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008061000000054719,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_concat.py::test_sort_order[1-outer-True]",
                "duration": 0.49675749999999397,
                "run_index": 26,
                "setup": {
                    "name": "setup",
                    "duration": 0.0016505999999978371,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4908590000000004,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_concat.py:233: in test_sort_order\n    modin_concat = pd.concat([modin_df, modin_df2], join=join, sort=sort)\nmodin\\pandas\\general.py:476: in concat\n    new_query_compiler = list_of_objs[0].concat(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:484: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:100: in value\n    self.wait()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:47: in wait\n    self._conn.serve(self._ttl)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:407: in serve\n    self._dispatch(data)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:364: in _dispatch\n    self._dispatch_request(seq, args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:340: in _dispatch_request\n    self._send(consts.MSG_REPLY, seq, self._box(res))\nmodin\\experimental\\cloud\\rpyc_proxy.py:269: in _box\n    return super()._box(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:279: in _box\n    id_pack = get_id_pack(obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\lib\\__init__.py:163: in get_id_pack\n    if hasattr(obj, '____id_pack__'):  # and isinstance(obj.____id_pack__, tuple):\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:5484: in __getattr__\n    and self._info_axis._can_hold_identifiers_and_holds_name(name)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py:633: in _info_axis\n    return getattr(self, self._info_axis_name)\npandas\\_libs\\properties.pyx:66: in pandas._libs.properties.AxisProperty.__get__\n    ???\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.002597299999997915,
                    "outcome": "passed"
                },
                "outcome": "failed"
            }
        ],
        "summary": {
            "failed": 24,
            "passed": 3,
            "num_tests": 27,
            "duration": 35.22722244262695
        },
        "created_at": "2021-10-01 13:35:45.344710"
    }
}