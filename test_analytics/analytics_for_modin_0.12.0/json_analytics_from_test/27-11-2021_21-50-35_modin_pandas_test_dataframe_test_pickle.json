{
    "report": {
        "environment": {
            "Python": "3.8.11",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/dataframe/test_pickle.py::test_dataframe_pickle[True]",
                "duration": 11.0227517,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 5.4456674,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1304312000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009857000000010885,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_pickle.py::test_dataframe_pickle[False]",
                "duration": 0.11226449999999843,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.009417299999999074,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09261669999999889,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008132000000014017,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_pickle.py::test_column_pickle[True]",
                "duration": 0.06263769999999802,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.025940699999999595,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.009629999999999583,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_pickle.py:49: in test_column_pickle\n    other = pickle.loads(dmp)\nmodin\\pandas\\series.py:2471: in _inflate_light\n    return cls(query_compiler=query_compiler, name=name)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011262999999992473,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_pickle.py::test_column_pickle[False]",
                "duration": 0.03073550000000047,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.012337099999999879,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.005029300000000347,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_pickle.py:49: in test_column_pickle\n    other = pickle.loads(dmp)\nmodin\\pandas\\series.py:2471: in _inflate_light\n    return cls(query_compiler=query_compiler, name=name)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    if hasattr(self, \"_preprocess_init_args\"):\nmodin\\experimental\\cloud\\rpyc_proxy.py:497: in __getattribute__\n    return getattr(dct[\"__remote_end__\"], name)\nE   KeyError: '__remote_end__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001032000000000366,
                    "outcome": "passed"
                },
                "outcome": "failed"
            }
        ],
        "summary": {
            "passed": 2,
            "failed": 2,
            "num_tests": 4,
            "duration": 9.415678024291992
        },
        "created_at": "2021-11-27 21:50:47.963047"
    }
}