{
    "report": {
        "environment": {
            "Python": "3.8.10",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/test_reshape.py::test_get_dummies",
                "duration": 9.9991665,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 4.9009979,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1962596999999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_reshape.py:25: in test_get_dummies\n    pd.get_dummies(s)\nmodin\\pandas\\general.py:562: in get_dummies\n    pandas.get_dummies(\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\reshape.py:948: in get_dummies\n    result = _get_dummies_1d(\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\reshape.py:972: in _get_dummies_1d\n    codes, levels = factorize_from_iterable(Series(data))\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py:2754: in factorize_from_iterable\n    cat = Categorical(values, ordered=False)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py:431: in __init__\n    codes, categories = factorize(values, sort=True)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\algorithms.py:747: in factorize\n    codes, uniques = values.factorize(na_sentinel=na_sentinel)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:166: in __getattr__\n    return syncreq(self, consts.HANDLE_GETATTR, name)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: 'numpy.ndarray' object has no attribute 'factorize'\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 609, in _handle_getattr\nE       return self._access_attr(obj, name, (), \"_rpyc_getattr\", \"allow_getattr\", getattr)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 537, in _access_attr\nE       return accessor(obj, name, *args)\nE   AttributeError: 'numpy.ndarray' object has no attribute 'factorize'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009110000000003282,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_reshape.py::test_melt",
                "duration": 3.2945545999999997,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005592999999999293,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2929443999999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_reshape.py:71: in test_melt\n    pd.melt(pd.DataFrame(data))\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Cannot interpret 'dtype('int32')' as a data type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\programming\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 614, in __init__\nE       mgr = dict_to_mgr(data, index, columns, dtype=dtype, copy=copy, typ=manager)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 464, in dict_to_mgr\nE       return arrays_to_mgr(\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 135, in arrays_to_mgr\nE       return create_block_manager_from_arrays(\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1769, in create_block_manager_from_arrays\nE       blocks = _form_blocks(arrays, names, axes, consolidate)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1834, in _form_blocks\nE       numeric_blocks = _multi_blockify(\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1924, in _multi_blockify\nE       values, placement = _stack_arrays(\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1953, in _stack_arrays\nE       stacked = np.empty(shape, dtype=dtype)\nE   TypeError: Cannot interpret 'dtype('int32')' as a data type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004916000000001475,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_reshape.py::test_crosstab",
                "duration": 0.09538369999999752,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005980999999994907,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09365850000000009,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_reshape.py:101: in test_crosstab\n    df = pd.crosstab(a, [b, c], rownames=[\"a\"], colnames=[\"b\", \"c\"])\nmodin\\pandas\\general.py:631: in crosstab\n    return DataFrame(pandas_crosstab)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:431: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\programming\\modin\\modin\\pandas\\dataframe.py\", line 174, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\programming\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\programming\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 152, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\programming\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\programming\\modin\\modin\\engines\\base\\io\\io.py\", line 81, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\programming\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\programming\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 66, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005289999999984474,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_reshape.py::test_lreshape",
                "duration": 0.3571113999999991,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005927999999997269,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.355448599999999,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_reshape.py:128: in test_lreshape\n    df = pd.lreshape(data, {\"year\": [\"year1\", \"year2\"], \"hr\": [\"hr1\", \"hr2\"]})\nmodin\\pandas\\general.py:640: in lreshape\n    pandas.lreshape(to_pandas(data), groups, dropna=dropna, label=label)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\util\\_decorators.py:207: in wrapper\n    return func(*args, **kwargs)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\melt.py:245: in lreshape\n    mdata[target] = concat_compat(to_concat)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\concat.py:151: in concat_compat\n    return np.concatenate(to_concat, axis=axis)\n<__array_function__ internals>:5: in concatenate\n    ???\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:274: in method\n    return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nmodin\\experimental\\cloud\\rpyc_proxy.py:183: in async_request\n    return super().async_request(handler, *args, **kw)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:493: in async_request\n    self._async_request(handler, args, res)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:475: in _async_request\n    self._send(consts.MSG_REQUEST, seq, (handler, self._box(args)))\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:233: in _send\n    data = brine.dump((msg, seq, args))\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:373: in dump\n    _dump(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:184: in _dump_tuple\n    _dump(item, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:184: in _dump_tuple\n    _dump(item, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:184: in _dump_tuple\n    _dump(item, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:184: in _dump_tuple\n    _dump(item, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:184: in _dump_tuple\n    _dump(item, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:184: in _dump_tuple\n    _dump(item, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:184: in _dump_tuple\n    _dump(item, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:184: in _dump_tuple\n    _dump(item, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:184: in _dump_tuple\n    _dump(item, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:192: in _dump\n    _dump_registry.get(type(obj), _undumpable)(obj, stream)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\brine.py:188: in _undumpable\n    raise TypeError(\"cannot dump %r\" % (obj,))\nE   TypeError: cannot dump <member '____id_pack__' of 'BaseNetref' objects>"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00047720000000062157,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_reshape.py::test_wide_to_long",
                "duration": 0.2783661999999971,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005472999999991401,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.27625119999999903,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_reshape.py:147: in test_wide_to_long\n    df = pd.wide_to_long(data, [\"hr\", \"year\"], \"team\", \"index\")\nmodin\\pandas\\general.py:654: in wide_to_long\n    pandas.wide_to_long(to_pandas(df), stubnames, i, j, sep=sep, suffix=suffix)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\melt.py:531: in wide_to_long\n    if df[i].duplicated().any():\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:274: in method\n    return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:165: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: 'list' object is not callable\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 619, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 3420, in __getitem__\nE       key = com.apply_if_callable(key, self)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\common.py\", line 358, in apply_if_callable\nE       return maybe_callable(obj, **kwargs)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: 'list' object is not callable\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\mi\\anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE   TypeError: 'list' object is not callable"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010203999999998103,
                    "outcome": "passed"
                },
                "outcome": "failed"
            }
        ],
        "summary": {
            "failed": 5,
            "num_tests": 5,
            "duration": 13.279268503189087
        },
        "created_at": "2021-08-19 10:04:12.568898"
    }
}