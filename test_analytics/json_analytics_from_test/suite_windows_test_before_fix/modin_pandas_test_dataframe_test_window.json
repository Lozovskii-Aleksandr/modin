{
    "report": {
        "environment": {
            "Python": "3.8.10",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumprod-skipna_True-0]",
                "duration": 12.350066,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 5.1717268,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.0057170000000006,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008953999999992135,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumprod-skipna_True-1]",
                "duration": 0.6879007000000001,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009361999999999426,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6853864999999999,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006418000000003588,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumprod-skipna_False-0]",
                "duration": 0.7188642999999999,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010612000000005395,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.716215,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005268999999987756,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumprod-skipna_False-1]",
                "duration": 0.6155996999999971,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008023999999995368,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6134668999999988,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005279999999991958,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumprod-skipna_None-0]",
                "duration": 0.7443377000000009,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011396000000001294,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7414100000000001,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006485000000004959,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumprod-skipna_None-1]",
                "duration": 0.7782156000000011,
                "run_index": 5,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013993000000009914,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7749083999999993,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005085999999998592,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummin-skipna_True-0]",
                "duration": 0.7036124000000026,
                "run_index": 6,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009653000000007239,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7011318000000006,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005500000000004945,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummin-skipna_True-1]",
                "duration": 0.6918939000000002,
                "run_index": 7,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007458000000006848,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6898838999999981,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005184000000006961,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummin-skipna_False-0]",
                "duration": 0.6586013000000008,
                "run_index": 8,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014487999999985846,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6552083000000017,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004954000000019221,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummin-skipna_False-1]",
                "duration": 0.6405475999999943,
                "run_index": 9,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012399999999992417,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6375078999999992,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005596999999966101,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummin-skipna_None-0]",
                "duration": 0.7106184000000013,
                "run_index": 10,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010641000000006784,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7072654999999983,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0012247000000016328,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummin-skipna_None-1]",
                "duration": 0.7037918000000047,
                "run_index": 11,
                "setup": {
                    "name": "setup",
                    "duration": 0.0016612000000009175,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6999637000000014,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005057000000014966,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummax-skipna_True-0]",
                "duration": 0.6999293000000009,
                "run_index": 12,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007678999999995995,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6977730000000015,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006205000000001348,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummax-skipna_True-1]",
                "duration": 0.6174091999999973,
                "run_index": 13,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011033999999980892,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6146642,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005382000000011544,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummax-skipna_False-0]",
                "duration": 0.6639429999999926,
                "run_index": 14,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011172999999971012,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.660923099999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007853000000004329,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummax-skipna_False-1]",
                "duration": 0.7097260000000034,
                "run_index": 15,
                "setup": {
                    "name": "setup",
                    "duration": 0.0016111000000016418,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7058399000000009,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006638999999992734,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummax-skipna_None-0]",
                "duration": 0.7105741000000059,
                "run_index": 16,
                "setup": {
                    "name": "setup",
                    "duration": 0.0030494000000018673,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7039389000000007,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005364000000014357,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cummax-skipna_None-1]",
                "duration": 0.8385640000000087,
                "run_index": 17,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007870000000025357,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8362393000000026,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007507000000011033,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumsum-skipna_True-0]",
                "duration": 0.6902601000000033,
                "run_index": 18,
                "setup": {
                    "name": "setup",
                    "duration": 0.006204800000002564,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6769236999999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009267999999984511,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumsum-skipna_True-1]",
                "duration": 0.781147899999997,
                "run_index": 19,
                "setup": {
                    "name": "setup",
                    "duration": 0.000760299999999603,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7790649999999992,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005622999999985723,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumsum-skipna_False-0]",
                "duration": 0.7105513000000023,
                "run_index": 20,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007565000000013811,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7083535000000012,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006847999999983756,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumsum-skipna_False-1]",
                "duration": 0.6441033000000047,
                "run_index": 21,
                "setup": {
                    "name": "setup",
                    "duration": 0.001012500000001637,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6415357999999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005425000000016666,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumsum-skipna_None-0]",
                "duration": 0.6825626000000007,
                "run_index": 22,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014934000000010883,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.678608999999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009668000000004895,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum[cumsum-skipna_None-1]",
                "duration": 0.6238189999999975,
                "run_index": 23,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010934999999996364,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6210379999999986,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:58: in test_cumprod_cummin_cummax_cumsum\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005939999999995393,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum_transposed[cumprod-rows]",
                "duration": 4.479927299999996,
                "run_index": 24,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010915999999987491,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.477062,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006820999999987976,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum_transposed[cumprod-columns]",
                "duration": 4.053960799999999,
                "run_index": 25,
                "setup": {
                    "name": "setup",
                    "duration": 0.000949499999997272,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.051389900000004,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006719000000003916,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum_transposed[cummin-rows]",
                "duration": 4.039361299999996,
                "run_index": 26,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009887000000006196,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.036763299999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006205999999977507,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum_transposed[cummin-columns]",
                "duration": 3.992970899999989,
                "run_index": 27,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009524999999968031,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.9904770999999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000588799999995615,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum_transposed[cummax-rows]",
                "duration": 4.087489299999994,
                "run_index": 28,
                "setup": {
                    "name": "setup",
                    "duration": 0.00086199999999792,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.085147499999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006178000000005568,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum_transposed[cummax-columns]",
                "duration": 4.594069700000006,
                "run_index": 29,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007567000000037183,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.5919852999999975,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005710000000007653,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum_transposed[cumsum-rows]",
                "duration": 4.090804000000006,
                "run_index": 30,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009800999999995952,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.088253100000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005907000000036078,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cumprod_cummin_cummax_cumsum_transposed[cumsum-columns]",
                "duration": 3.975337499999995,
                "run_index": 31,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009435999999993783,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.9728847000000016,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005655999999945038,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cummin_cummax_int_and_float[cummin-0]",
                "duration": 1.4279836000000046,
                "run_index": 32,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008807000000032872,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4253175000000056,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000904699999992431,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cummin_cummax_int_and_float[cummin-1]",
                "duration": 1.4739838000000134,
                "run_index": 33,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010553000000044221,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4711864000000077,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006867999999968788,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cummin_cummax_int_and_float[cummax-0]",
                "duration": 1.5472122999999982,
                "run_index": 34,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008727999999962321,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.544910200000004,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005565000000018472,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_cummin_cummax_int_and_float[cummax-1]",
                "duration": 1.366241500000001,
                "run_index": 35,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010314999999962993,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.3630918000000065,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010867000000018834,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_-5-0]",
                "duration": 1.9001613000000077,
                "run_index": 36,
                "setup": {
                    "name": "setup",
                    "duration": 0.0039390999999966425,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.891365900000011,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009172000000035041,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_-5-1]",
                "duration": 0.8158504999999963,
                "run_index": 37,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008868999999975813,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8135194999999982,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000557200000002922,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_-1-0]",
                "duration": 0.63307420000001,
                "run_index": 38,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006585000000001173,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6311756000000059,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005816000000038457,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_-1-1]",
                "duration": 0.609636100000003,
                "run_index": 39,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007302000000066755,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6076391999999942,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005364999999954989,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_0-0]",
                "duration": 0.6663965999999988,
                "run_index": 40,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007269000000036385,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6644225999999946,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005201999999968621,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_0-1]",
                "duration": 0.6409813000000071,
                "run_index": 41,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007026000000109889,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6390551999999872,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005208999999979369,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_1-0]",
                "duration": 0.7364237999999972,
                "run_index": 42,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007604999999983875,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7343817000000001,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005211000000002741,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_1-1]",
                "duration": 0.6688088000000079,
                "run_index": 43,
                "setup": {
                    "name": "setup",
                    "duration": 0.000674700000004691,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6667826999999988,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006766999999996415,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_5-0]",
                "duration": 0.677658400000027,
                "run_index": 44,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007213000000092507,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.670588500000008,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.005627300000000446,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff[periods_5-1]",
                "duration": 0.694486100000006,
                "run_index": 45,
                "setup": {
                    "name": "setup",
                    "duration": 0.0021705000000054042,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6896191000000016,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:85: in test_diff\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005259999999935872,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff_transposed[rows]",
                "duration": 4.311216700000017,
                "run_index": 46,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006242000000042935,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.309432200000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005361000000050353,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_diff_transposed[columns]",
                "duration": 4.185633899999999,
                "run_index": 47,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006599999999963302,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.1837342000000035,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005797000000029584,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[last-no_duplicates]",
                "duration": 2.0858513000000016,
                "run_index": 48,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007106000000050017,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.083742799999996,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006872999999956164,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[last-all_duplicates]",
                "duration": 11.810325699999979,
                "run_index": 49,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007147999999972399,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 11.80816329999999,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007327999999944268,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[last-some_duplicates]",
                "duration": 11.963703399999986,
                "run_index": 50,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007212999999950398,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 11.961630600000007,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000630199999989145,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[last-has_name_column]",
                "duration": 0.195241600000017,
                "run_index": 51,
                "setup": {
                    "name": "setup",
                    "duration": 0.000709300000011126,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19285800000000108,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009649999999936654,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[last-str_columns]",
                "duration": 12.1562761,
                "run_index": 52,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010891999999955715,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 12.153497400000006,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006003000000021075,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[last-float_nan]",
                "duration": 0.7037613000000107,
                "run_index": 53,
                "setup": {
                    "name": "setup",
                    "duration": 0.000732200000001626,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7017778000000021,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:105: in test_duplicated\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005191000000053236,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[first-no_duplicates]",
                "duration": 2.1300473000000153,
                "run_index": 54,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006675000000058162,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.128102499999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000609800000006544,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[first-all_duplicates]",
                "duration": 12.083698599999991,
                "run_index": 55,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007114000000001397,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 12.081626999999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006487999999933436,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[first-some_duplicates]",
                "duration": 11.999807500000003,
                "run_index": 56,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007050000000106138,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 11.9977911,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006063999999810221,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[first-has_name_column]",
                "duration": 0.19679069999997978,
                "run_index": 57,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007243999999957396,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1947471999999948,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005946999999935088,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[first-str_columns]",
                "duration": 12.214997899999986,
                "run_index": 58,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006912999999997282,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 12.213048200000003,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005670999999836113,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[first-float_nan]",
                "duration": 0.686578499999996,
                "run_index": 59,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006953999999836924,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6844888000000253,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:105: in test_duplicated\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006989000000032775,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[False-no_duplicates]",
                "duration": 2.1881640999999945,
                "run_index": 60,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006979999999998654,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.1860163000000057,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000751799999989089,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[False-all_duplicates]",
                "duration": 13.088560599999994,
                "run_index": 61,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007666999999855761,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 13.08632160000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007056000000034146,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[False-some_duplicates]",
                "duration": 11.812852600000014,
                "run_index": 62,
                "setup": {
                    "name": "setup",
                    "duration": 0.000670600000006516,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 11.810830699999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006807000000037533,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[False-has_name_column]",
                "duration": 0.19563600000000747,
                "run_index": 63,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012346000000036383,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19253969999999754,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006271000000026561,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[False-str_columns]",
                "duration": 11.626364499999994,
                "run_index": 64,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007630000000062864,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 11.624200099999996,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:110: in test_duplicated\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000638399999985495,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_duplicated[False-float_nan]",
                "duration": 0.673866199999992,
                "run_index": 65,
                "setup": {
                    "name": "setup",
                    "duration": 0.001000099999998838,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6713474000000019,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:105: in test_duplicated\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005185999999923752,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_ffill[int_data]",
                "duration": 3.651536100000044,
                "run_index": 66,
                "setup": {
                    "name": "setup",
                    "duration": 0.000731600000023036,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6495006000000103,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005722999999875356,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_ffill[float_nan_data]",
                "duration": 0.596386300000006,
                "run_index": 67,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007452000000114367,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5943748999999912,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:125: in test_ffill\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005209999999920001,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-backfill-int_data]",
                "duration": 3.0913436999999533,
                "run_index": 68,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012454999999818028,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0882609999999886,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000591700000001083,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-backfill-float_nan_data]",
                "duration": 0.5946816999999953,
                "run_index": 69,
                "setup": {
                    "name": "setup",
                    "duration": 0.001103599999993321,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5914597999999955,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010147000000131357,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-bfill-int_data]",
                "duration": 3.0548807000000124,
                "run_index": 70,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011700000000018917,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0519196000000193,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006210999999893829,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-bfill-float_nan_data]",
                "duration": 0.5929281999999603,
                "run_index": 71,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011037999999814474,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5898969000000136,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008236999999837735,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-pad-int_data]",
                "duration": 3.052552100000014,
                "run_index": 72,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009473000000070897,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.04999939999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006581000000096537,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-pad-float_nan_data]",
                "duration": 0.5967096000000254,
                "run_index": 73,
                "setup": {
                    "name": "setup",
                    "duration": 0.001247500000005175,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.593607100000014,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006075000000009823,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-ffill-int_data]",
                "duration": 3.0617609000000243,
                "run_index": 74,
                "setup": {
                    "name": "setup",
                    "duration": 0.001236000000005788,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.05866020000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006286999999929321,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-ffill-float_nan_data]",
                "duration": 0.6147961999999723,
                "run_index": 75,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012118999999870539,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6117729000000054,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005994999999927586,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-None-int_data]",
                "duration": 3.0793529000000035,
                "run_index": 76,
                "setup": {
                    "name": "setup",
                    "duration": 0.00122870000001285,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.075435399999975,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0014601000000027398,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_int-None-float_nan_data]",
                "duration": 0.602992200000017,
                "run_index": 77,
                "setup": {
                    "name": "setup",
                    "duration": 0.003014100000001463,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5964242000000013,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005398000000127468,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-backfill-int_data]",
                "duration": 3.0643358000000376,
                "run_index": 78,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013157000000205699,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.061072899999999,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006314999999972315,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-backfill-float_nan_data]",
                "duration": 0.5937836999999888,
                "run_index": 79,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011390999999889573,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5907074000000136,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007980999999972482,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-bfill-int_data]",
                "duration": 3.035635900000017,
                "run_index": 80,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011010000000055697,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0327851000000123,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006487999999933436,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-bfill-float_nan_data]",
                "duration": 0.5946198000000606,
                "run_index": 81,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011075000000175805,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5918464000000085,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005584000000169453,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-pad-int_data]",
                "duration": 2.9883643000000006,
                "run_index": 82,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012250999999992018,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.9853152000000023,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005988999999999578,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-pad-float_nan_data]",
                "duration": 0.5956410000000005,
                "run_index": 83,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011048000000073444,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5928680000000099,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005633999999758998,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-ffill-int_data]",
                "duration": 3.0648458999999946,
                "run_index": 84,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012854999999944994,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0616870000000063,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005878999999993084,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-ffill-float_nan_data]",
                "duration": 0.5933226000000218,
                "run_index": 85,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010933000000079574,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5905740999999978,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005619000000081087,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-None-int_data]",
                "duration": 3.2737748000000124,
                "run_index": 86,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012648999999953503,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2706382000000076,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006068000000141183,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_rows_str-None-float_nan_data]",
                "duration": 0.6383804999999825,
                "run_index": 87,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009446999999909167,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6359348000000011,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00055629999999951,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-backfill-int_data]",
                "duration": 0.0034603999999660573,
                "run_index": 88,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011936999999875297,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003886000000079548,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000684399999983043,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-backfill-float_nan_data]",
                "duration": 0.00549490000000219,
                "run_index": 89,
                "setup": {
                    "name": "setup",
                    "duration": 0.0023518000000137818,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00038129999998659514,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040999999998803105,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-bfill-int_data]",
                "duration": 0.0023222999999745753,
                "run_index": 90,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007972999999878994,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003342999999915719,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00039340000000720465,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-bfill-float_nan_data]",
                "duration": 0.002290599999952292,
                "run_index": 91,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007800999999858504,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00033149999998727253,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003988999999933185,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-pad-int_data]",
                "duration": 0.0022892000000354074,
                "run_index": 92,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007839000000160468,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00032889999999952124,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003925000000037926,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-pad-float_nan_data]",
                "duration": 0.002293700000024046,
                "run_index": 93,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007839000000160468,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003311000000110198,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003947999999809326,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-ffill-int_data]",
                "duration": 0.0024795999999867036,
                "run_index": 94,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007819999999867377,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004092000000071039,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005064000000061242,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-ffill-float_nan_data]",
                "duration": 0.0027013999999780935,
                "run_index": 95,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009762999999907152,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003466000000003078,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040219999999635547,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-None-int_data]",
                "duration": 0.0025409999999794763,
                "run_index": 96,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008154999999874235,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005040000000064992,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004059999999981301,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_int-None-float_nan_data]",
                "duration": 0.0023266999999691507,
                "run_index": 97,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008000999999921987,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003337999999928343,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00039269999999191896,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-backfill-int_data]",
                "duration": 0.0022984999999380307,
                "run_index": 98,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007864999999753763,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003355999999996584,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003898999999876196,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-backfill-float_nan_data]",
                "duration": 0.0022844999999733773,
                "run_index": 99,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007812999999998738,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00033209999998007333,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003897999999935564,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-bfill-int_data]",
                "duration": 0.003400500000026341,
                "run_index": 100,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012631000000169479,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003719999999987067,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005022999999937383,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-bfill-float_nan_data]",
                "duration": 0.0033902000000125554,
                "run_index": 101,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009592000000111511,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005245000000115851,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000947299999978668,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-pad-int_data]",
                "duration": 0.0026119000000051074,
                "run_index": 102,
                "setup": {
                    "name": "setup",
                    "duration": 0.000933500000002141,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00035130000000549444,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000393599999995331,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-pad-float_nan_data]",
                "duration": 0.002276300000005449,
                "run_index": 103,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007808000000011361,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003131999999936852,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004015000000094915,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-ffill-int_data]",
                "duration": 0.0023051999999950112,
                "run_index": 104,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007884999999987485,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00033709999999587126,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003911000000016429,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-ffill-float_nan_data]",
                "duration": 0.003093699999965338,
                "run_index": 105,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010462999999845124,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00035239999999703286,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006486999999992804,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-None-int_data]",
                "duration": 0.0036209999999812226,
                "run_index": 106,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009411000000056902,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000983599999983653,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007551999999861891,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-5-over_columns_str-None-float_nan_data]",
                "duration": 0.0024931999999751042,
                "run_index": 107,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008720999999809464,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003470999999990454,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004019000000141659,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-backfill-int_data]",
                "duration": 3.1331392999999537,
                "run_index": 108,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007876999999893997,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1308382999999935,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007255999999813412,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-backfill-float_nan_data]",
                "duration": 0.6147971000000041,
                "run_index": 109,
                "setup": {
                    "name": "setup",
                    "duration": 0.00117589999999268,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6118599000000131,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005854000000056203,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-bfill-int_data]",
                "duration": 3.1015768000000037,
                "run_index": 110,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013122000000009848,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.098335700000007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006166999999948075,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-bfill-float_nan_data]",
                "duration": 0.5905855999999972,
                "run_index": 111,
                "setup": {
                    "name": "setup",
                    "duration": 0.001061100000015358,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5879075999999941,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005557999999723506,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-pad-int_data]",
                "duration": 3.055265199999951,
                "run_index": 112,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012193999999681182,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0522402000000284,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005861999999865475,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-pad-float_nan_data]",
                "duration": 0.5970469999999182,
                "run_index": 113,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011316999999735344,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5936949999999683,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010886000000027707,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-ffill-int_data]",
                "duration": 3.0879108000000883,
                "run_index": 114,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012063000000352986,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.084864200000027,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006339999999909196,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-ffill-float_nan_data]",
                "duration": 0.5910971000000131,
                "run_index": 115,
                "setup": {
                    "name": "setup",
                    "duration": 0.001113000000032116,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5882886999999641,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005823999999847729,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-None-int_data]",
                "duration": 3.021066099999871,
                "run_index": 116,
                "setup": {
                    "name": "setup",
                    "duration": 0.001257799999962117,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0178765999999655,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006738999999811313,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_int-None-float_nan_data]",
                "duration": 0.5941590999998994,
                "run_index": 117,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011090999999510132,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.591365699999983,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005752000000143198,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-backfill-int_data]",
                "duration": 3.0993588999999133,
                "run_index": 118,
                "setup": {
                    "name": "setup",
                    "duration": 0.001211099999977705,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0963084999999637,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006281999999941945,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-backfill-float_nan_data]",
                "duration": 0.5881124999999656,
                "run_index": 119,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011754999999880056,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5851640000000202,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005974999999693864,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-bfill-int_data]",
                "duration": 3.048220600000036,
                "run_index": 120,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013221000000385175,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0449340999999777,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006422999999813328,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-bfill-float_nan_data]",
                "duration": 0.5953090000000429,
                "run_index": 121,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011130999999977575,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5924808999999982,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000601900000049227,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-pad-int_data]",
                "duration": 3.1212470000000394,
                "run_index": 122,
                "setup": {
                    "name": "setup",
                    "duration": 0.001255000000014661,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1180807000000073,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006563000000028296,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-pad-float_nan_data]",
                "duration": 0.609396699999877,
                "run_index": 123,
                "setup": {
                    "name": "setup",
                    "duration": 0.001133599999946,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6065375999999674,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005919000000176311,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-ffill-int_data]",
                "duration": 3.0751341999999795,
                "run_index": 124,
                "setup": {
                    "name": "setup",
                    "duration": 0.0018218999999817242,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0708647000000155,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006257000000005064,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-ffill-float_nan_data]",
                "duration": 0.595213699999988,
                "run_index": 125,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011738000000036664,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.592185900000004,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000680199999976594,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-None-int_data]",
                "duration": 3.0782413999999676,
                "run_index": 126,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010809999999992215,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0754086999999686,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006707000000005792,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_rows_str-None-float_nan_data]",
                "duration": 0.6684027000000583,
                "run_index": 127,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011286000000154672,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6654052000000092,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007403000000181237,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-backfill-int_data]",
                "duration": 0.002955600000063896,
                "run_index": 128,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010541000000330314,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00040109999997639534,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004463000000214379,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-backfill-float_nan_data]",
                "duration": 0.0027549999999223473,
                "run_index": 129,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008636000000024069,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00036209999996117403,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006656999999563595,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-bfill-int_data]",
                "duration": 0.009154799999919305,
                "run_index": 130,
                "setup": {
                    "name": "setup",
                    "duration": 0.004024799999967854,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005044999999768152,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006007000000067819,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-bfill-float_nan_data]",
                "duration": 0.00437720000002173,
                "run_index": 131,
                "setup": {
                    "name": "setup",
                    "duration": 0.0017343999999752668,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004322000000342996,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004762000000368971,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-pad-int_data]",
                "duration": 0.003649099999961436,
                "run_index": 132,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008677999999804342,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000527599999998074,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0013859000000024935,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-pad-float_nan_data]",
                "duration": 0.005710899999996855,
                "run_index": 133,
                "setup": {
                    "name": "setup",
                    "duration": 0.002092199999992772,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0009292999999956919,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005972000000156186,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-ffill-int_data]",
                "duration": 0.0050426999999899635,
                "run_index": 134,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014347999999699823,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004774000000224987,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0016957000000275002,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-ffill-float_nan_data]",
                "duration": 0.004660800000067411,
                "run_index": 135,
                "setup": {
                    "name": "setup",
                    "duration": 0.0016868000000158645,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0007191000000261738,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005681000000095082,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-None-int_data]",
                "duration": 0.0038678999999319785,
                "run_index": 136,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014670999999566448,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004447000000027401,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004890000000159489,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_int-None-float_nan_data]",
                "duration": 0.01475359999989223,
                "run_index": 137,
                "setup": {
                    "name": "setup",
                    "duration": 0.005881199999976161,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0016625999999746455,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0013285999999652631,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-backfill-int_data]",
                "duration": 0.0030273999999508305,
                "run_index": 138,
                "setup": {
                    "name": "setup",
                    "duration": 0.00107959999996865,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004122999999935928,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004559000000199376,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-backfill-float_nan_data]",
                "duration": 0.00679629999996223,
                "run_index": 139,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008566999999857217,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00035510000003569075,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.004727799999955096,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-bfill-int_data]",
                "duration": 0.006881100000043716,
                "run_index": 140,
                "setup": {
                    "name": "setup",
                    "duration": 0.002902900000037789,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005115999999816268,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005636999999865111,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-bfill-float_nan_data]",
                "duration": 0.0028732000000672997,
                "run_index": 141,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010194000000183223,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003874000000223532,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00044700000000830187,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-pad-int_data]",
                "duration": 0.00834679999996979,
                "run_index": 142,
                "setup": {
                    "name": "setup",
                    "duration": 0.002776100000005499,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0011089999999853717,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0016855999999734195,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-pad-float_nan_data]",
                "duration": 0.002989000000013675,
                "run_index": 143,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010575000000017099,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00040810000001556546,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00046589999999469,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-ffill-int_data]",
                "duration": 0.002646699999957036,
                "run_index": 144,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009062999999969179,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003834999999980937,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004505999999651067,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-ffill-float_nan_data]",
                "duration": 0.005950600000062423,
                "run_index": 145,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008981000000289896,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005165000000033615,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.003637900000001082,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-None-int_data]",
                "duration": 0.005767899999909787,
                "run_index": 146,
                "setup": {
                    "name": "setup",
                    "duration": 0.001826299999947878,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0007588999999939006,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0013564000000201304,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[-1-over_columns_str-None-float_nan_data]",
                "duration": 0.009241799999983868,
                "run_index": 147,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010454999999751635,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0008995000000027176,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.006251300000030824,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-backfill-int_data]",
                "duration": 3.3215404000000603,
                "run_index": 148,
                "setup": {
                    "name": "setup",
                    "duration": 0.0022562999999991007,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3163375000000315,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006903000000306747,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-backfill-float_nan_data]",
                "duration": 0.6301569000000313,
                "run_index": 149,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008708000000297034,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6276890999999978,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000726199999974142,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-bfill-int_data]",
                "duration": 4.08429689999997,
                "run_index": 150,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008166000000073836,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.078074700000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.004588999999953103,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-bfill-float_nan_data]",
                "duration": 0.9676917000001026,
                "run_index": 151,
                "setup": {
                    "name": "setup",
                    "duration": 0.001323400000046604,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9642018000000121,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000843099999997321,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-pad-int_data]",
                "duration": 3.274955099999886,
                "run_index": 152,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010248999999475927,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.272250100000008,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006551999999828695,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-pad-float_nan_data]",
                "duration": 0.7015305000000467,
                "run_index": 153,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008774000000357773,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.69916029999996,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006154000000151427,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-ffill-int_data]",
                "duration": 3.8964540999999144,
                "run_index": 154,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009865999999760788,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.893735300000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007455999999592677,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-ffill-float_nan_data]",
                "duration": 0.7918121000000724,
                "run_index": 155,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011423000000263528,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7889417000000094,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005858000000102948,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-None-int_data]",
                "duration": 3.4744309000000158,
                "run_index": 156,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009268000000020038,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4719390000000203,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006382999999914318,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_int-None-float_nan_data]",
                "duration": 0.6060175000000072,
                "run_index": 157,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009148999999979424,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6036047000000053,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005830000000059954,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-backfill-int_data]",
                "duration": 3.0382385999999997,
                "run_index": 158,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008732999999665481,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0358250000000453,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006670000000212895,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-backfill-float_nan_data]",
                "duration": 0.6065653999999654,
                "run_index": 159,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008806999999819709,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6042381999999975,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005658000000039465,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-bfill-int_data]",
                "duration": 3.069353299999989,
                "run_index": 160,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008642999999892709,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0669955000000186,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006291999999916698,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-bfill-float_nan_data]",
                "duration": 0.5993558000001258,
                "run_index": 161,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008812000000375519,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5970073000000298,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000586100000020906,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-pad-int_data]",
                "duration": 3.143923500000028,
                "run_index": 162,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008695000000216169,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.141566399999988,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006180999999969572,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-pad-float_nan_data]",
                "duration": 0.5903964000000315,
                "run_index": 163,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008822000000350272,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5880727999999635,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005591999999978725,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-ffill-int_data]",
                "duration": 3.9033289000000764,
                "run_index": 164,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009186000000340755,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.897651499999995,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.003840200000013283,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-ffill-float_nan_data]",
                "duration": 0.7082022999999822,
                "run_index": 165,
                "setup": {
                    "name": "setup",
                    "duration": 0.0028095999999777632,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7020001000000207,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005830000000059954,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-None-int_data]",
                "duration": 3.0519575000000145,
                "run_index": 166,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012183000000050015,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.048912400000006,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006084999999984575,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_rows_str-None-float_nan_data]",
                "duration": 0.6024450999998976,
                "run_index": 167,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011177999999745225,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5987316999999734,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0014777999999751046,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-backfill-int_data]",
                "duration": 0.0036676999999940563,
                "run_index": 168,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010287000000062108,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003853999999705593,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0012249000000110755,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-backfill-float_nan_data]",
                "duration": 0.0037332000000560583,
                "run_index": 169,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014386000000286003,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00041260000000420405,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004433999999946536,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-bfill-int_data]",
                "duration": 0.0025262999999995372,
                "run_index": 170,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007962999999904241,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003361000000268177,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005975999999918713,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-bfill-float_nan_data]",
                "duration": 0.002852200000063476,
                "run_index": 171,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008900000000267028,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000422500000013315,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006496999999967557,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-pad-int_data]",
                "duration": 0.003510399999981928,
                "run_index": 172,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009769999999775791,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00037919999999758147,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011772000000291882,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-pad-float_nan_data]",
                "duration": 0.0031499000000394517,
                "run_index": 173,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011890000000107648,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003540000000157306,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004179000000021915,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-ffill-int_data]",
                "duration": 0.002636900000084097,
                "run_index": 174,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007843000000207212,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00033400000000938235,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007343000000332722,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-ffill-float_nan_data]",
                "duration": 0.002609599999971124,
                "run_index": 175,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008609999999862339,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003459000000134438,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005416999999852123,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-None-int_data]",
                "duration": 0.003985099999965769,
                "run_index": 176,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013993000000027678,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0007183999999824664,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00046809999997776686,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_int-None-float_nan_data]",
                "duration": 0.005349399999943216,
                "run_index": 177,
                "setup": {
                    "name": "setup",
                    "duration": 0.00202209999997649,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0008431999999629625,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00046200000002727393,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-backfill-int_data]",
                "duration": 0.0027299999999854663,
                "run_index": 178,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008172999999942476,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0005648000000064712,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005305999999904998,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-backfill-float_nan_data]",
                "duration": 0.0030090999999288215,
                "run_index": 179,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009823999999980515,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004773999999656553,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005668999999670632,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-bfill-int_data]",
                "duration": 0.006762999999921249,
                "run_index": 180,
                "setup": {
                    "name": "setup",
                    "duration": 0.002793599999961316,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00066309999999703,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005127000000015869,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-bfill-float_nan_data]",
                "duration": 0.005162999999868134,
                "run_index": 181,
                "setup": {
                    "name": "setup",
                    "duration": 0.0017716999999493055,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.001007399999991776,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006121999999777472,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-pad-int_data]",
                "duration": 0.0032471999999188483,
                "run_index": 182,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010775999999736996,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0006194000000050437,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00047259999996640545,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-pad-float_nan_data]",
                "duration": 0.002748299999950632,
                "run_index": 183,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008536999999932959,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004823999999530315,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005585000000110085,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-ffill-int_data]",
                "duration": 0.003669300000012754,
                "run_index": 184,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011822000000165644,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00038649999999051943,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009183999999891057,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-ffill-float_nan_data]",
                "duration": 0.0038674000000469277,
                "run_index": 185,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013734999999996944,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004438000000277498,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006766000000197891,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-None-int_data]",
                "duration": 0.0024895999999330343,
                "run_index": 186,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008634000000142805,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003526999999508007,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004100999999536725,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[0-over_columns_str-None-float_nan_data]",
                "duration": 0.0023678000000018073,
                "run_index": 187,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008066999999982727,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003464000000121814,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040799999999308056,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-backfill-int_data]",
                "duration": 3.3857315999999287,
                "run_index": 188,
                "setup": {
                    "name": "setup",
                    "duration": 0.001008799999965504,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3819795999999656,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0017344000000321103,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-backfill-float_nan_data]",
                "duration": 0.6513145000000122,
                "run_index": 189,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010818000000085704,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6485894999999573,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005614000000377928,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-bfill-int_data]",
                "duration": 3.947558000000015,
                "run_index": 190,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013902000000030057,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.9442371000000094,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005404999999996107,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-bfill-float_nan_data]",
                "duration": 0.6926177999999936,
                "run_index": 191,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008904000000029555,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6901303999999868,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007066000000008898,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-pad-int_data]",
                "duration": 3.063114599999949,
                "run_index": 192,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012394999999969514,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0600250999999616,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000610499999993408,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-pad-float_nan_data]",
                "duration": 0.6175912000000494,
                "run_index": 193,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008847000000287153,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6150580999999988,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007636999999931504,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-ffill-int_data]",
                "duration": 3.1256166000001144,
                "run_index": 194,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008451000000491149,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.123310600000025,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006157999999913955,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-ffill-float_nan_data]",
                "duration": 0.6258627000000274,
                "run_index": 195,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011200000000144428,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6230039999999804,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006187000000181797,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-None-int_data]",
                "duration": 3.453575199999989,
                "run_index": 196,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008573000000069442,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4511837000000014,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000676899999973557,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_int-None-float_nan_data]",
                "duration": 0.6045281000000386,
                "run_index": 197,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009709000000270862,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6019862999999646,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006000000000199179,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-backfill-int_data]",
                "duration": 3.201493899999946,
                "run_index": 198,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012648999999669286,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1983642000000145,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000599899999997433,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-backfill-float_nan_data]",
                "duration": 0.6710197000000448,
                "run_index": 199,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012644000000250344,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6679737000000046,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005171999999902255,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-bfill-int_data]",
                "duration": 3.4105390000000853,
                "run_index": 200,
                "setup": {
                    "name": "setup",
                    "duration": 0.0015743000000156826,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4067634000000453,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006270000000085929,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-bfill-float_nan_data]",
                "duration": 1.4033274000000802,
                "run_index": 201,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010561000000279819,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.3998887999999852,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0013264000000390297,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-pad-int_data]",
                "duration": 3.2186775000000125,
                "run_index": 202,
                "setup": {
                    "name": "setup",
                    "duration": 0.0019288999999957923,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2141743000000247,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006453999999962434,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-pad-float_nan_data]",
                "duration": 0.6919952999999737,
                "run_index": 203,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011202999999682106,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6891558000000373,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005988999999999578,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-ffill-int_data]",
                "duration": 3.348202100000094,
                "run_index": 204,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014345000000162145,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.344373800000028,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000959300000033636,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-ffill-float_nan_data]",
                "duration": 1.348725399999978,
                "run_index": 205,
                "setup": {
                    "name": "setup",
                    "duration": 0.002088899999989735,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.3440075999999976,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005400000000008731,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-None-int_data]",
                "duration": 3.4922260000000165,
                "run_index": 206,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011213999999881707,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4891746000000126,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008086000000275817,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_rows_str-None-float_nan_data]",
                "duration": 1.2990671000000589,
                "run_index": 207,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014484000000152264,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.2955559000000108,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006144000000176675,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-backfill-int_data]",
                "duration": 0.0038372000000777007,
                "run_index": 208,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012652000000343833,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00039020000002665256,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009165999999822816,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-backfill-float_nan_data]",
                "duration": 0.0052688000000102875,
                "run_index": 209,
                "setup": {
                    "name": "setup",
                    "duration": 0.0019449000000122396,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0009217999999577842,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004572000000280241,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-bfill-int_data]",
                "duration": 0.003401899999971647,
                "run_index": 210,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009714999999914653,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0006912999999713065,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007676000000174099,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-bfill-float_nan_data]",
                "duration": 0.003376600000080998,
                "run_index": 211,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012983000000303946,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003644000000235792,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004155999999966298,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-pad-int_data]",
                "duration": 0.002323000000103548,
                "run_index": 212,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007934000000204833,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00033860000002050583,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003976000000420754,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-pad-float_nan_data]",
                "duration": 0.0023124999999595275,
                "run_index": 213,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007921999999780382,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00033320000000003347,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003949000000034175,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-ffill-int_data]",
                "duration": 0.002829000000076576,
                "run_index": 214,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010123000000135107,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003881000000092172,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004163000000403372,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-ffill-float_nan_data]",
                "duration": 0.004201299999920138,
                "run_index": 215,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009852999999679923,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0008060000000114087,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.001424699999972745,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-None-int_data]",
                "duration": 0.0026192999999921085,
                "run_index": 216,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009347000000161643,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003477999999859094,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004020999999738706,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_int-None-float_nan_data]",
                "duration": 0.0023006000000123095,
                "run_index": 217,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007855000000063228,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003322999999681997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00039730000003146415,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-backfill-int_data]",
                "duration": 0.0053618999999685,
                "run_index": 218,
                "setup": {
                    "name": "setup",
                    "duration": 0.0022890999999845008,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000373899999999594,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004097999999999047,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-backfill-float_nan_data]",
                "duration": 0.003640299999972285,
                "run_index": 219,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009645000000091386,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003859999999917818,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0013252999999622261,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-bfill-int_data]",
                "duration": 0.003616199999953551,
                "run_index": 220,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014037999999914064,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003839999999968313,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00042459999997390696,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-bfill-float_nan_data]",
                "duration": 0.0023782999999752974,
                "run_index": 221,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008161999999742875,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003418000000010579,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004041000000256645,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-pad-int_data]",
                "duration": 0.0027997000001391825,
                "run_index": 222,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007986000000528293,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0006490000000098917,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005535000000236323,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-pad-float_nan_data]",
                "duration": 0.00380239999992682,
                "run_index": 223,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010001999999644795,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0008229999999684878,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000979000000029373,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-ffill-int_data]",
                "duration": 0.0027293999999642438,
                "run_index": 224,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009612000000061016,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003899999999816828,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00041699999997035775,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-ffill-float_nan_data]",
                "duration": 0.002387700000042514,
                "run_index": 225,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008190000000354303,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000342399999965437,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004073000000062166,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-None-int_data]",
                "duration": 0.0030832000000486914,
                "run_index": 226,
                "setup": {
                    "name": "setup",
                    "duration": 0.001092900000003283,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004710000000045511,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004264000000375745,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[1-over_columns_str-None-float_nan_data]",
                "duration": 0.004084300000045005,
                "run_index": 227,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010083999999892512,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0008761000000276908,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011914000000388114,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-backfill-int_data]",
                "duration": 3.3035331000000383,
                "run_index": 228,
                "setup": {
                    "name": "setup",
                    "duration": 0.001153900000019803,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3006196000000045,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006056999999941581,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-backfill-float_nan_data]",
                "duration": 0.6504927000000293,
                "run_index": 229,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010963000000288048,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6474938000000066,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008062999999651765,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-bfill-int_data]",
                "duration": 3.339328500000022,
                "run_index": 230,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011296000000129425,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.336464699999965,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006046000000310414,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-bfill-float_nan_data]",
                "duration": 1.4017905000000042,
                "run_index": 231,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011221999999975196,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.3989548000000127,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005912999999964086,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-pad-int_data]",
                "duration": 3.4489553999999885,
                "run_index": 232,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012522999999760032,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4457145000000082,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007363000000282227,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-pad-float_nan_data]",
                "duration": 1.618508200000008,
                "run_index": 233,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011387000000127045,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.6157073999999625,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005234000000200467,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-ffill-int_data]",
                "duration": 3.998436999999967,
                "run_index": 234,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008884999999736465,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.995979499999976,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006805000000440486,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-ffill-float_nan_data]",
                "duration": 0.6411863999999241,
                "run_index": 235,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011389999999664724,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6383362000000261,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005721999999650507,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-None-int_data]",
                "duration": 4.344631800000002,
                "run_index": 236,
                "setup": {
                    "name": "setup",
                    "duration": 0.000891000000024178,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.342176599999959,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006731999999942673,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_int-None-float_nan_data]",
                "duration": 0.6347886999999446,
                "run_index": 237,
                "setup": {
                    "name": "setup",
                    "duration": 0.001166499999953885,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6318459000000303,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000609800000006544,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-backfill-int_data]",
                "duration": 3.208293700000013,
                "run_index": 238,
                "setup": {
                    "name": "setup",
                    "duration": 0.000845700000013494,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.205979300000024,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006229999999618485,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-backfill-float_nan_data]",
                "duration": 0.6018224000000032,
                "run_index": 239,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008788999999751468,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5994934000000285,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005712000000244188,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-bfill-int_data]",
                "duration": 3.1413117999999827,
                "run_index": 240,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008617999999955828,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.138977299999965,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006109000000265041,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-bfill-float_nan_data]",
                "duration": 0.6582534000000351,
                "run_index": 241,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008793000000082429,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.655455800000027,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010389999999915744,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-pad-int_data]",
                "duration": 3.2605312000000026,
                "run_index": 242,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008836000000087552,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2581384999999727,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00062550000001238,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-pad-float_nan_data]",
                "duration": 0.6067314000000579,
                "run_index": 243,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009355000000255131,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6037630999999806,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00109730000002628,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-ffill-int_data]",
                "duration": 3.2095305999999937,
                "run_index": 244,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008930000000191285,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.206985099999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007594999999582797,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-ffill-float_nan_data]",
                "duration": 0.6092097999999737,
                "run_index": 245,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009052999999994427,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6062466999999856,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011524999999892316,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-None-int_data]",
                "duration": 3.4137376000000472,
                "run_index": 246,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008788000000095053,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4112719999999968,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007080000000314612,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_rows_str-None-float_nan_data]",
                "duration": 0.6353244000000018,
                "run_index": 247,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008879000000092674,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6329253999999764,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:141: in test_fillna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006232000000068183,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-backfill-int_data]",
                "duration": 0.0025190000000065993,
                "run_index": 248,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008460000000241052,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003987999999708336,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004281999999875552,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-backfill-float_nan_data]",
                "duration": 0.0029559999999833053,
                "run_index": 249,
                "setup": {
                    "name": "setup",
                    "duration": 0.000777400000004036,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003513999999995576,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010497999999756757,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-bfill-int_data]",
                "duration": 0.002456999999992604,
                "run_index": 250,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008717000000046937,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003213999999616135,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00039220000002160305,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-bfill-float_nan_data]",
                "duration": 0.002296999999941818,
                "run_index": 251,
                "setup": {
                    "name": "setup",
                    "duration": 0.000797799999986637,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00031599999999798456,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003853999999705593,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-pad-int_data]",
                "duration": 0.0023122000000057596,
                "run_index": 252,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007827000000020234,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00033710000002429297,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004096999999774198,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-pad-float_nan_data]",
                "duration": 0.002300400000024183,
                "run_index": 253,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007779000000027736,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00033519999999498395,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040940000002365196,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-ffill-int_data]",
                "duration": 0.002302600000120947,
                "run_index": 254,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007834000000457308,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003310000000169566,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040480000001252847,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-ffill-float_nan_data]",
                "duration": 0.00274969999992436,
                "run_index": 255,
                "setup": {
                    "name": "setup",
                    "duration": 0.000885799999991832,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000548699999967539,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004293999999731568,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-None-int_data]",
                "duration": 0.002530600000056893,
                "run_index": 256,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008748000000196043,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00035580000002255474,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004251999999951295,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_int-None-float_nan_data]",
                "duration": 0.0030340999999793894,
                "run_index": 257,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011357999999859203,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000371299999983421,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003912000000241278,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-backfill-int_data]",
                "duration": 0.00218649999999343,
                "run_index": 258,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007421999999905893,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00031669999998484855,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003854000000274027,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-backfill-float_nan_data]",
                "duration": 0.0022763999999710904,
                "run_index": 259,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007717999999954372,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.000327900000002046,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040489999997816994,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-bfill-int_data]",
                "duration": 0.0022862999999802014,
                "run_index": 260,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007757999999853382,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003292000000101325,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040549999999939246,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-bfill-float_nan_data]",
                "duration": 0.0022852999999258827,
                "run_index": 261,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007749999999759893,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003315999999813357,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040369999999256834,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-pad-int_data]",
                "duration": 0.002710600000057184,
                "run_index": 262,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007762000000184344,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003325000000131695,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008257000000071457,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-pad-float_nan_data]",
                "duration": 0.00347359999989294,
                "run_index": 263,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013219999999591892,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00039139999995541075,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00043820000001915105,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-ffill-int_data]",
                "duration": 0.0023062999999297062,
                "run_index": 264,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007900999999606029,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003545999999801097,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003715000000283908,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-ffill-float_nan_data]",
                "duration": 0.002652900000043701,
                "run_index": 265,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009546000000000276,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.00034820000001900553,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00039550000002464003,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-None-int_data]",
                "duration": 0.002633700000103545,
                "run_index": 266,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008882000000198786,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0004380000000310247,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004193000000327629,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna[5-over_columns_str-None-float_nan_data]",
                "duration": 0.0024731999999403342,
                "run_index": 267,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008017000000108965,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0003334999999538013,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00053629999996474,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_sanity",
                "duration": 0.1333574000000226,
                "run_index": 268,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004844999999704669,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1316882000000419,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:168: in test_fillna_sanity\n    modin_df = pd.DataFrame(df)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 174, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 152, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 80, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007002000000397857,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_downcast",
                "duration": 0.1832425999999714,
                "run_index": 269,
                "setup": {
                    "name": "setup",
                    "duration": 0.00044589999998834173,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1817982000000029,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005525999999917985,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_inplace",
                "duration": 0.04674080000000913,
                "run_index": 270,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005365000000097098,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04524539999999888,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:214: in test_fillna_inplace\n    modin_df = pd.DataFrame(df)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 174, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 152, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 80, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004223999999908301,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[1-int_data]",
                "duration": 0.08247909999994363,
                "run_index": 271,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007833999999888874,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08037419999999429,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005380999999715641,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[1-float_nan_data]",
                "duration": 0.08148290000008274,
                "run_index": 272,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006956999999943037,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07945900000004258,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006325000000515502,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[2-int_data]",
                "duration": 0.0816867000000343,
                "run_index": 273,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008363000000031207,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07943440000002511,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005797000000029584,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[2-float_nan_data]",
                "duration": 0.09630499999997255,
                "run_index": 274,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006769999999960419,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09440630000000283,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005446999999776381,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[0.5-int_data]",
                "duration": 0.08356319999995776,
                "run_index": 275,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006764999999973043,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08171160000000555,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004985999999576052,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[0.5-float_nan_data]",
                "duration": 0.08197470000004614,
                "run_index": 276,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007074000000102387,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08002630000004274,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005335999999829255,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[-1-int_data]",
                "duration": 0.08234110000000783,
                "run_index": 277,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006675000000200271,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.08050809999997455,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004979999999932261,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[-1-float_nan_data]",
                "duration": 0.10060620000001563,
                "run_index": 278,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006802999999990789,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09864590000000817,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005997000000093067,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[-2-int_data]",
                "duration": 0.10326949999989665,
                "run_index": 279,
                "setup": {
                    "name": "setup",
                    "duration": 0.0024077999999576605,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09789469999998346,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005591999999978725,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[-2-float_nan_data]",
                "duration": 0.10286689999998089,
                "run_index": 280,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008002000000146836,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.10063059999998814,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006358999999633852,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[1.5-int_data]",
                "duration": 0.06945849999999609,
                "run_index": 281,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007246999999779291,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06743560000001025,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005735000000299806,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_fillna_limit[1.5-float_nan_data]",
                "duration": 0.06993329999994558,
                "run_index": 282,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007519999999772153,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06783480000001418,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:255: in test_frame_fillna_limit\n    replace_modin_series = pd.Series(replace_pandas_series)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 149, in __init__\nE       pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 556, in __init__\nE       mgr = init_dict({data.name: data}, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 80, in arrays_to_mgr\nE       index = extract_index(arrays)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 382, in extract_index\nE       indexes.append(val.index)\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005944999999769607,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_pad_backfill_limit[int_data]",
                "duration": 0.05971570000002657,
                "run_index": 283,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006536000000210151,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05786000000000513,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:311: in test_frame_pad_backfill_limit\n    modin_df = pd.DataFrame(result)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 174, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 152, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 80, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005484999999794127,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_frame_pad_backfill_limit[float_nan_data]",
                "duration": 0.051942099999962466,
                "run_index": 284,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012133999999832668,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04902289999995446,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:311: in test_frame_pad_backfill_limit\n    modin_df = pd.DataFrame(result)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 174, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 152, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 80, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004924000000414708,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_dtype_conversion",
                "duration": 0.0737267000000088,
                "run_index": 285,
                "setup": {
                    "name": "setup",
                    "duration": 0.000502100000005612,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.07225610000000415,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:328: in test_fillna_dtype_conversion\n    df_equals(modin_df.fillna(\"nan\"), df.fillna(\"nan\"))\nmodin\\pandas\\test\\utils.py:514: in df_equals\n    df1 = to_pandas(df1)\nmodin\\utils.py:245: in to_pandas\n    return modin_obj._to_pandas()\nmodin\\experimental\\cloud\\rpyc_proxy.py:413: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Internal Error. Please email bug_reports@modin.org with the traceback and command that caused this error.\nE   Internal and external indices on axis 0 do not match.\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2791, in _to_pandas\nE       return self._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 255, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2232, in to_pandas\nE       ErrorMessage.catch_bugs_and_request_email(\nE     File \"C:\\prog\\modin\\modin\\error_message.py\", line 60, in catch_bugs_and_request_email\nE       raise Exception(\nE   Exception: Internal Error. Please email bug_reports@modin.org with the traceback and command that caused this error.\nE   Internal and external indices on axis 0 do not match."
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00046639999999342763,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_skip_certain_blocks[int_data]",
                "duration": 3.613544100000013,
                "run_index": 286,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006291999999916698,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.611741400000028,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005443000000013853,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_skip_certain_blocks[float_nan_data]",
                "duration": 0.6149109999998927,
                "run_index": 287,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006700999999793567,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.613050899999962,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:339: in test_fillna_skip_certain_blocks\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00051989999997204,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_dict_series",
                "duration": 0.285354199999972,
                "run_index": 288,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008159999999861611,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2832078999999794,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005143000000202846,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_dataframe",
                "duration": 0.1904705999998555,
                "run_index": 289,
                "setup": {
                    "name": "setup",
                    "duration": 0.00047009999997271734,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18904569999995147,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:384: in test_fillna_dataframe\n    modin_df2 = pd.DataFrame(df2)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Expected list, got type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 174, in __init__\nE       self._query_compiler = from_pandas(pandas_df)._query_compiler\nE     File \"C:\\prog\\modin\\modin\\pandas\\utils.py\", line 67, in from_pandas\nE       return DataFrame(query_compiler=FactoryDispatcher.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\dispatcher.py\", line 152, in from_pandas\nE       return cls.__factory._from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\data_management\\factories\\factories.py\", line 166, in _from_pandas\nE       return cls.io_cls.from_pandas(df)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\io\\io.py\", line 80, in from_pandas\nE       return cls.query_compiler_cls.from_pandas(df, cls.frame_cls)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 259, in from_pandas\nE       return cls(data_cls.from_pandas(df))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2151, in from_pandas\nE       new_index = df.index\nE     File \"pandas\\_libs\\properties.pyx\", line 62, in pandas._libs.properties.AxisProperty.__get__\nE   TypeError: Expected list, got type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00048469999995859325,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_columns[int_data]",
                "duration": 4.323035399999924,
                "run_index": 290,
                "setup": {
                    "name": "setup",
                    "duration": 0.00092589999997017,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.3205719000000045,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006116999999790096,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_columns[float_nan_data]",
                "duration": 0.626187699999889,
                "run_index": 291,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008742999999640233,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6235906,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:392: in test_fillna_columns\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008484999999609499,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_invalid_method[int_data]",
                "duration": 3.2811086999998906,
                "run_index": 292,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006219999999643733,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.279346099999998,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005185999999639535,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_invalid_method[float_nan_data]",
                "duration": 0.6192321000000902,
                "run_index": 293,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006572000000346634,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6171299999999746,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:408: in test_fillna_invalid_method\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007877000000462431,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_invalid_value[int_data]",
                "duration": 3.1175167999999758,
                "run_index": 294,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006736000000273634,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1155513999999584,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006181999999625987,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_invalid_value[float_nan_data]",
                "duration": 0.6682488000000717,
                "run_index": 295,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006268000000204665,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6663492000000133,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:417: in test_fillna_invalid_value\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006460000000174659,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_col_reordering[int_data]",
                "duration": 4.2692080999999575,
                "run_index": 296,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006789999999909924,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.2670631999999955,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007868999999800508,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_col_reordering[float_nan_data]",
                "duration": 0.6931411999999,
                "run_index": 297,
                "setup": {
                    "name": "setup",
                    "duration": 0.0020743999999695006,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6884169999999585,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:428: in test_fillna_col_reordering\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005754000000024462,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_fillna_datetime_columns",
                "duration": 0.16431120000004285,
                "run_index": 298,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007434999999986758,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16235620000003337,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:442: in test_fillna_datetime_columns\n    modin_df = pd.DataFrame(frame_data, index=pd.date_range(\"20130110\", periods=3))\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: object __array__ method not producing an array\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 95, in arrays_to_mgr\nE       return create_block_manager_from_arrays(arrays, arr_names, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1706, in create_block_manager_from_arrays\nE       raise construction_error(len(arrays), arrays[0].shape, axes, e)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1701, in create_block_manager_from_arrays\nE       blocks = _form_blocks(arrays, names, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1790, in _form_blocks\nE       object_blocks = _simple_blockify(items_dict[\"ObjectBlock\"], np.object_)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1834, in _simple_blockify\nE       values, placement = _stack_arrays(tuples, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1882, in _stack_arrays\nE       stacked[i] = _asarray_compat(arr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1867, in _asarray_compat\nE       return np.asarray(x)\nE   ValueError: object __array__ method not producing an array"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004680000000121254,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[median-skipna_True-0]",
                "duration": 0.828581999999983,
                "run_index": 299,
                "setup": {
                    "name": "setup",
                    "duration": 0.000745899999969879,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8265521000000149,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005381000000284075,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[median-skipna_True-1]",
                "duration": 0.6424087000000895,
                "run_index": 300,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009285000000431864,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6399483999999802,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006033000000229549,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[median-skipna_False-0]",
                "duration": 0.7326412999999548,
                "run_index": 301,
                "setup": {
                    "name": "setup",
                    "duration": 0.000827399999991485,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7304637999999954,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005226999999763393,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[median-skipna_False-1]",
                "duration": 0.6243341999999643,
                "run_index": 302,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007675999999605665,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6222457000000077,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005533000000355059,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[median-skipna_None-0]",
                "duration": 0.7621343000000138,
                "run_index": 303,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009665000000040891,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7596968999999945,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005044000000111737,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[median-skipna_None-1]",
                "duration": 0.6969496999999478,
                "run_index": 304,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007767999999828135,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6948520999999914,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005439999999907741,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[skew-skipna_True-0]",
                "duration": 0.7143573000000742,
                "run_index": 305,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007371000000375716,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7123333000000116,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005497999999874992,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[skew-skipna_True-1]",
                "duration": 0.7525118999999449,
                "run_index": 306,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008609999999862339,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7502605999999901,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005292999999824133,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[skew-skipna_False-0]",
                "duration": 0.7075808000001302,
                "run_index": 307,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012207000000330481,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7044167000000243,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000722700000039822,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[skew-skipna_False-1]",
                "duration": 0.6784398000000351,
                "run_index": 308,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007558000000358334,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6764197999999624,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005084000000010747,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[skew-skipna_None-0]",
                "duration": 0.6989118999999846,
                "run_index": 309,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007408999999825028,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6968793000000346,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005507999999849744,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew[skew-skipna_None-1]",
                "duration": 0.6278711000001067,
                "run_index": 310,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007830000000126347,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6257657000000449,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:467: in test_median_skew\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000539400000036494,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_transposed[median-rows]",
                "duration": 3.1433035000000586,
                "run_index": 311,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007072999999877538,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.141281500000048,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:475: in test_median_skew_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006074000000353408,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_transposed[median-columns]",
                "duration": 3.0845547000000124,
                "run_index": 312,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006996000000185632,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0824675999999727,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:475: in test_median_skew_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006879000000026281,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_transposed[skew-rows]",
                "duration": 3.8334237999999345,
                "run_index": 313,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007120999999870037,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.8313554999999724,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:475: in test_median_skew_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006440999999881569,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_transposed[skew-columns]",
                "duration": 3.1328874000000155,
                "run_index": 314,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007118999999988773,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.130807100000027,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:475: in test_median_skew_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000656499999990956,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[median-True]",
                "duration": 0.1976559999999381,
                "run_index": 315,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009093999999549851,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19519760000002861,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006395999999995183,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[median-False]",
                "duration": 0.17041020000004892,
                "run_index": 316,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007082000000195876,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16835439999999835,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000639400000011392,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[median-None]",
                "duration": 0.18892940000000635,
                "run_index": 317,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006983000000104767,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1867905999999948,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007421999999905893,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[skew-True]",
                "duration": 0.19740310000008776,
                "run_index": 318,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008933000000297397,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19494200000002593,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006745000000023538,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[skew-False]",
                "duration": 0.17989520000003267,
                "run_index": 319,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008075000000076216,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.17759130000001733,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006889000000001033,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[skew-None]",
                "duration": 0.18451989999999796,
                "run_index": 320,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007362000000057378,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1822927999999706,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007547000000158732,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[std-True]",
                "duration": 0.20316519999994398,
                "run_index": 321,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008144999999899483,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20097160000000258,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005645999999615015,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[std-False]",
                "duration": 0.16958839999995234,
                "run_index": 322,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007334999999670799,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1674858999999742,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006355000000439759,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[std-None]",
                "duration": 0.18285919999993894,
                "run_index": 323,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006960000000049149,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1808898999999542,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005772999999749118,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[var-True]",
                "duration": 0.1964779000000476,
                "run_index": 324,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006589000000190026,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.19447289999999384,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006872000000157641,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[var-False]",
                "duration": 0.16907810000003565,
                "run_index": 325,
                "setup": {
                    "name": "setup",
                    "duration": 0.001046200000018871,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.16634709999999586,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006386000000020431,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[var-None]",
                "duration": 0.18422030000004952,
                "run_index": 326,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008078000000182328,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.181699999999978,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009047000000350636,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[rank-True]",
                "duration": 0.24438799999995808,
                "run_index": 327,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009256999999820437,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.24188429999998107,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006523000000129286,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[rank-False]",
                "duration": 0.20404499999995096,
                "run_index": 328,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007077999999864915,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20201530000002776,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006140999999502128,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[rank-None]",
                "duration": 0.2075064999999654,
                "run_index": 329,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007890999999631276,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2053377000000296,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005906000000095446,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[sem-True]",
                "duration": 0.22182739999999512,
                "run_index": 330,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007509000000140986,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21959520000001476,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007303999999521693,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[sem-False]",
                "duration": 0.18245480000001635,
                "run_index": 331,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008055000000126711,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18023339999996324,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006104000000277665,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_rank_sem_specific[sem-None]",
                "duration": 0.18170040000006793,
                "run_index": 332,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007060000000365108,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1796515999999997,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:484: in test_median_skew_std_var_rank_sem_specific\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000636799999995219,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_sem_1953[median]",
                "duration": 0.044066799999995965,
                "run_index": 333,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007097999999814419,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04189710000002833,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:495: in test_median_skew_std_var_sem_1953\n    modin_df = pd.DataFrame(data, index=arrays)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1702, in create_block_manager_from_arrays\nE       mgr = BlockManager(blocks, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 143, in __init__\nE       self._verify_integrity()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 323, in _verify_integrity\nE       raise construction_error(tot_items, block.shape[1:], self.axes)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 582, in __init__\nE       mgr = arrays_to_mgr(arrays, columns, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 95, in arrays_to_mgr\nE       return create_block_manager_from_arrays(arrays, arr_names, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1706, in create_block_manager_from_arrays\nE       raise construction_error(len(arrays), arrays[0].shape, axes, e)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007501000000047497,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_sem_1953[skew]",
                "duration": 0.04363899999998466,
                "run_index": 334,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005543999999986227,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04199239999996962,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:495: in test_median_skew_std_var_sem_1953\n    modin_df = pd.DataFrame(data, index=arrays)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1702, in create_block_manager_from_arrays\nE       mgr = BlockManager(blocks, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 143, in __init__\nE       self._verify_integrity()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 323, in _verify_integrity\nE       raise construction_error(tot_items, block.shape[1:], self.axes)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 582, in __init__\nE       mgr = arrays_to_mgr(arrays, columns, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 95, in arrays_to_mgr\nE       return create_block_manager_from_arrays(arrays, arr_names, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1706, in create_block_manager_from_arrays\nE       raise construction_error(len(arrays), arrays[0].shape, axes, e)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005378000000177963,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_sem_1953[std]",
                "duration": 0.03987220000004754,
                "run_index": 335,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006832000000258631,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0379929000000061,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:495: in test_median_skew_std_var_sem_1953\n    modin_df = pd.DataFrame(data, index=arrays)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1702, in create_block_manager_from_arrays\nE       mgr = BlockManager(blocks, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 143, in __init__\nE       self._verify_integrity()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 323, in _verify_integrity\nE       raise construction_error(tot_items, block.shape[1:], self.axes)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 582, in __init__\nE       mgr = arrays_to_mgr(arrays, columns, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 95, in arrays_to_mgr\nE       return create_block_manager_from_arrays(arrays, arr_names, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1706, in create_block_manager_from_arrays\nE       raise construction_error(len(arrays), arrays[0].shape, axes, e)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005128999999897133,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_sem_1953[var]",
                "duration": 0.04312909999993053,
                "run_index": 336,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006035999999767228,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.04137959999997065,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:495: in test_median_skew_std_var_sem_1953\n    modin_df = pd.DataFrame(data, index=arrays)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1702, in create_block_manager_from_arrays\nE       mgr = BlockManager(blocks, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 143, in __init__\nE       self._verify_integrity()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 323, in _verify_integrity\nE       raise construction_error(tot_items, block.shape[1:], self.axes)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 582, in __init__\nE       mgr = arrays_to_mgr(arrays, columns, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 95, in arrays_to_mgr\nE       return create_block_manager_from_arrays(arrays, arr_names, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1706, in create_block_manager_from_arrays\nE       raise construction_error(len(arrays), arrays[0].shape, axes, e)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005423000000064349,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_median_skew_std_var_sem_1953[sem]",
                "duration": 0.040709599999956936,
                "run_index": 337,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006680999999844062,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.038864300000000185,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:495: in test_median_skew_std_var_sem_1953\n    modin_df = pd.DataFrame(data, index=arrays)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1702, in create_block_manager_from_arrays\nE       mgr = BlockManager(blocks, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 143, in __init__\nE       self._verify_integrity()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 323, in _verify_integrity\nE       raise construction_error(tot_items, block.shape[1:], self.axes)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)\nE   \nE   During handling of the above exception, another exception occurred:\nE   \nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 582, in __init__\nE       mgr = arrays_to_mgr(arrays, columns, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 95, in arrays_to_mgr\nE       return create_block_manager_from_arrays(arrays, arr_names, axes)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1706, in create_block_manager_from_arrays\nE       raise construction_error(len(arrays), arrays[0].shape, axes, e)\nE   ValueError: Shape of passed values is (4, 4), indices imply (2, 4)"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005090999999879386,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_True-over_rows_int-int_data]",
                "duration": 3.3743163000000322,
                "run_index": 338,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008172999999942476,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.372094200000049,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000587499999994634,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_True-over_rows_int-float_nan_data]",
                "duration": 0.5871091999998725,
                "run_index": 339,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007920999999555534,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5849230000000034,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000601999999958025,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_True-over_rows_str-int_data]",
                "duration": 3.2689543000000754,
                "run_index": 340,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007860000000050604,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2667362000000253,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006461000000399508,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_True-over_rows_str-float_nan_data]",
                "duration": 0.5905317999999511,
                "run_index": 341,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007959999999798129,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5883244999999988,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006152999999926578,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_True-over_columns_int-int_data]",
                "duration": 3.473177900000053,
                "run_index": 342,
                "setup": {
                    "name": "setup",
                    "duration": 0.000822000000027856,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4708527999999887,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006811000000084277,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_True-over_columns_int-float_nan_data]",
                "duration": 0.6592877000000499,
                "run_index": 343,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009342000000174266,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6568637000000308,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005555999999842243,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_True-over_columns_str-int_data]",
                "duration": 3.4628317999999467,
                "run_index": 344,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007784000000015112,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.460548299999971,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007266999999728796,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_True-over_columns_str-float_nan_data]",
                "duration": 0.6660171000000332,
                "run_index": 345,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007937000000310945,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6638464000000113,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005832999999597632,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_False-over_rows_int-int_data]",
                "duration": 3.396154700000068,
                "run_index": 346,
                "setup": {
                    "name": "setup",
                    "duration": 0.000831200000050103,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3938839999999573,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006083000000103311,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_False-over_rows_int-float_nan_data]",
                "duration": 0.5953469000000382,
                "run_index": 347,
                "setup": {
                    "name": "setup",
                    "duration": 0.000803000000018983,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5931674999999927,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005734000000074957,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_False-over_rows_str-int_data]",
                "duration": 3.5318667000000232,
                "run_index": 348,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007808999999951993,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5297596999999996,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005452000000332191,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_False-over_rows_str-float_nan_data]",
                "duration": 0.6737681999999268,
                "run_index": 349,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008088999999813495,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6715603999999757,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005899999999883221,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_False-over_columns_int-int_data]",
                "duration": 4.007814400000029,
                "run_index": 350,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008511999999996078,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.0054647000000045,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006473000000255524,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_False-over_columns_int-float_nan_data]",
                "duration": 0.8959640999999579,
                "run_index": 351,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009244999999964421,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8935012999999685,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000613799999996445,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_False-over_columns_str-int_data]",
                "duration": 4.054913299999953,
                "run_index": 352,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011041999999861218,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.051855100000012,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008497999999690364,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_False-over_columns_str-float_nan_data]",
                "duration": 0.6385459000000537,
                "run_index": 353,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007975999999985106,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6364017000000217,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005490000000349937,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_None-over_rows_int-int_data]",
                "duration": 3.729546300000038,
                "run_index": 354,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007818999999926746,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.7273639000000003,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006186000000525382,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_None-over_rows_int-float_nan_data]",
                "duration": 0.589129899999989,
                "run_index": 355,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008402999999930216,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5866477000000145,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008015999999884116,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_None-over_rows_str-int_data]",
                "duration": 3.3106185000000323,
                "run_index": 356,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007881000000224958,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.308368900000005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006733999999823936,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_None-over_rows_str-float_nan_data]",
                "duration": 0.6552526000000398,
                "run_index": 357,
                "setup": {
                    "name": "setup",
                    "duration": 0.000798300000042218,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6530249999999569,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006309999999984939,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_None-over_columns_int-int_data]",
                "duration": 3.5103746999998293,
                "run_index": 358,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008207999999285676,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.508003600000052,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007294999999203355,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_None-over_columns_int-float_nan_data]",
                "duration": 0.5951162999998587,
                "run_index": 359,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010044999999081483,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.592509199999995,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005981000000474523,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_None-over_columns_str-int_data]",
                "duration": 3.459278299999937,
                "run_index": 360,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007806999999502295,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4570037000000866,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007131999999501204,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_mode[numeric_only_None-over_columns_str-float_nan_data]",
                "duration": 0.5958644999999478,
                "run_index": 361,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007901999999830878,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5937033999999812,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:507: in test_mode\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005807000000004336,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nlargest",
                "duration": 0.18678590000001805,
                "run_index": 362,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005147000000533808,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18523229999993873,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005241999999725522,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nsmallest",
                "duration": 0.22941700000023957,
                "run_index": 363,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005485000000362561,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2277971000000889,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005229000000781525,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_True-over_rows_int-int_data]",
                "duration": 3.032270100000119,
                "run_index": 364,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008339000000887609,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.0298755999999685,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007266999999728796,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_True-over_rows_int-float_nan_data]",
                "duration": 0.6656878999998526,
                "run_index": 365,
                "setup": {
                    "name": "setup",
                    "duration": 0.000789800000006835,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6635428999999249,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005653999999140069,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_True-over_rows_str-int_data]",
                "duration": 3.1096406999998862,
                "run_index": 366,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007805999999845881,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.107411999999954,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006674999999631837,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_True-over_rows_str-float_nan_data]",
                "duration": 0.6700939999999491,
                "run_index": 367,
                "setup": {
                    "name": "setup",
                    "duration": 0.000789999999938118,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6677137000000357,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008003000000371685,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_True-over_columns_int-int_data]",
                "duration": 3.1737986999999066,
                "run_index": 368,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008325999999669875,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1714750999999524,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000658400000020265,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_True-over_columns_int-float_nan_data]",
                "duration": 0.6543112000000519,
                "run_index": 369,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007908000000043103,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6521698999999899,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005597000000534536,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_True-over_columns_str-int_data]",
                "duration": 3.150743099999886,
                "run_index": 370,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007624999999507054,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1485212000000047,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006968999999799053,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_True-over_columns_str-float_nan_data]",
                "duration": 0.6698077000000922,
                "run_index": 371,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007908999999699518,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6676511000000573,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005748000000949105,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_False-over_rows_int-int_data]",
                "duration": 3.093680400000153,
                "run_index": 372,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008525000000645377,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.091304300000047,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006710999999768319,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_False-over_rows_int-float_nan_data]",
                "duration": 0.6679688999998916,
                "run_index": 373,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008276999999452528,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6657516999999871,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005618000000140455,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_False-over_rows_str-int_data]",
                "duration": 3.161891499999797,
                "run_index": 374,
                "setup": {
                    "name": "setup",
                    "duration": 0.00077679999992597,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.15966949999995,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006683999999950174,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_False-over_rows_str-float_nan_data]",
                "duration": 0.821649400000183,
                "run_index": 375,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010379000000284577,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8190182000000732,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005554000000529413,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_False-over_columns_int-int_data]",
                "duration": 3.2413822999998274,
                "run_index": 376,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007798999999977241,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.239216699999929,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006057999999029562,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_False-over_columns_int-float_nan_data]",
                "duration": 0.6362533999999869,
                "run_index": 377,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007561999999552427,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6342362000000321,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005048000000442698,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_False-over_columns_str-int_data]",
                "duration": 3.430320399999914,
                "run_index": 378,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007707999999411186,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.428214099999991,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005647000000408298,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_False-over_columns_str-float_nan_data]",
                "duration": 0.7290425000001051,
                "run_index": 379,
                "setup": {
                    "name": "setup",
                    "duration": 0.001117000000022017,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7262271000000737,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005813999999872976,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_None-over_rows_int-int_data]",
                "duration": 3.524094699999864,
                "run_index": 380,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007938999999623775,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5218307000000095,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006761999999298496,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_None-over_rows_int-float_nan_data]",
                "duration": 0.7148653000001559,
                "run_index": 381,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007936000000654531,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7127297000000681,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005483999999569278,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_None-over_rows_str-int_data]",
                "duration": 3.3986944000001813,
                "run_index": 382,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007883000000674656,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3963989000000083,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007189000000380474,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_None-over_rows_str-float_nan_data]",
                "duration": 0.8009689000000435,
                "run_index": 383,
                "setup": {
                    "name": "setup",
                    "duration": 0.000757000000021435,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7989204000000427,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005344999999579159,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_None-over_columns_int-int_data]",
                "duration": 3.2785004999998364,
                "run_index": 384,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007582999999158346,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2763297000000193,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006541999999853942,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_None-over_columns_int-float_nan_data]",
                "duration": 0.7553649999999834,
                "run_index": 385,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007583000000295215,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7529072999999471,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009410999999772685,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_None-over_columns_str-int_data]",
                "duration": 3.1470900000000483,
                "run_index": 386,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007626000000300337,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.144942600000036,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:602: in test_nunique\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006221999999524996,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_nunique[dropna_None-over_columns_str-float_nan_data]",
                "duration": 0.5966617000001406,
                "run_index": 387,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007640000000037617,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5944820000000846,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:597: in test_nunique\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006517000000485496,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.25-int_data]",
                "duration": 3.237112100000104,
                "run_index": 388,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007146000000375352,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2348484999999982,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:616: in test_quantile\n    df_equals(modin_df.quantile(q), pandas_df.quantile(q))\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008344000000306551,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.25-float_nan_data]",
                "duration": 1.465755300000069,
                "run_index": 389,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007262000000309854,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4636211999999205,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:612: in test_quantile\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006817000000864937,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.5-int_data]",
                "duration": 3.278950499999837,
                "run_index": 390,
                "setup": {
                    "name": "setup",
                    "duration": 0.000697299999956158,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.276854299999968,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:616: in test_quantile\n    df_equals(modin_df.quantile(q), pandas_df.quantile(q))\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007015999999566702,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.5-float_nan_data]",
                "duration": 1.348396699999853,
                "run_index": 391,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007241999999223481,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.346336699999938,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:612: in test_quantile\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006116000000702115,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.75-int_data]",
                "duration": 3.3249984000000268,
                "run_index": 392,
                "setup": {
                    "name": "setup",
                    "duration": 0.000703199999975368,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.322983900000054,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:616: in test_quantile\n    df_equals(modin_df.quantile(q), pandas_df.quantile(q))\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006081000000222048,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.75-float_nan_data]",
                "duration": 1.4403548000000228,
                "run_index": 393,
                "setup": {
                    "name": "setup",
                    "duration": 0.00066309999999703,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4384852000000592,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:612: in test_quantile\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005433999999695516,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.66-int_data]",
                "duration": 3.3640364999999974,
                "run_index": 394,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007054000000152882,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3619343999999955,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:616: in test_quantile\n    df_equals(modin_df.quantile(q), pandas_df.quantile(q))\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006912999999713065,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.66-float_nan_data]",
                "duration": 1.4326739999999063,
                "run_index": 395,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007160999999769047,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.430718899999988,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:612: in test_quantile\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005228999999644657,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.01-int_data]",
                "duration": 3.227420399999801,
                "run_index": 396,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007006999999248364,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2254118999999264,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:616: in test_quantile\n    df_equals(modin_df.quantile(q), pandas_df.quantile(q))\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006071000000247295,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[0.01-float_nan_data]",
                "duration": 1.5371291000001293,
                "run_index": 397,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007517000000234475,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.5350455000000238,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:612: in test_quantile\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005802000000585394,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[list-int_data]",
                "duration": 6.774921200000108,
                "run_index": 398,
                "setup": {
                    "name": "setup",
                    "duration": 0.000711700000010751,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 6.772869300000025,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006285000000616492,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_quantile[list-float_nan_data]",
                "duration": 2.2631884000001037,
                "run_index": 399,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007564000000002125,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 2.260957400000052,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:612: in test_quantile\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007182000000511835,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_rank_transposed[keep-rows]",
                "duration": 4.410828899999956,
                "run_index": 400,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007276999999703548,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.4087659000000485,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006075999999666237,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_rank_transposed[keep-columns]",
                "duration": 3.8531406999998126,
                "run_index": 401,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011836999999559339,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.850185099999976,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005881999999246545,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_rank_transposed[top-rows]",
                "duration": 3.347390100000098,
                "run_index": 402,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007394000000431333,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3453362000000197,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005750999999918349,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_rank_transposed[top-columns]",
                "duration": 3.307458199999928,
                "run_index": 403,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008960999999771957,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.305137699999932,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005283000000417815,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_rank_transposed[bottom-rows]",
                "duration": 3.266634100000033,
                "run_index": 404,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008738000000221291,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2643079000000625,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005785999999261549,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_rank_transposed[bottom-columns]",
                "duration": 3.2253367999999227,
                "run_index": 405,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008751999999958571,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2229647999999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006215999999312771,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_-5-skipna_True]",
                "duration": 0.6206593000000566,
                "run_index": 406,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006947000000536718,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6187185999999656,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000551299999983712,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_-5-skipna_False]",
                "duration": 0.6795172999999295,
                "run_index": 407,
                "setup": {
                    "name": "setup",
                    "duration": 0.000988399999982903,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6763224000000037,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0012180999999600317,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_-5-skipna_None]",
                "duration": 0.6369580000000497,
                "run_index": 408,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009400000000141517,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6342272000000548,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008507999999665117,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_-1-skipna_True]",
                "duration": 0.6847852999998167,
                "run_index": 409,
                "setup": {
                    "name": "setup",
                    "duration": 0.001044999999976426,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6821193999999196,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005758999999443404,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_-1-skipna_False]",
                "duration": 0.6781794000002037,
                "run_index": 410,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010058000000299216,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.675655900000038,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005119000001059248,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_-1-skipna_None]",
                "duration": 0.7216763000001265,
                "run_index": 411,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006881000000475979,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7197021000000632,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000597999999968124,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_0-skipna_True]",
                "duration": 0.6491121000001385,
                "run_index": 412,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010091000000329586,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6464772000000494,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006167000000232292,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_0-skipna_False]",
                "duration": 0.7112430999999333,
                "run_index": 413,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006250999999792839,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7095190999999659,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004738000000088505,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_0-skipna_None]",
                "duration": 0.6426930000000084,
                "run_index": 414,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010356999999885375,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6401019999999562,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005196000000751155,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_1-skipna_True]",
                "duration": 0.719221500000117,
                "run_index": 415,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011291000000710483,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7163839999999482,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005793000000267057,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_1-skipna_False]",
                "duration": 0.7307647000001225,
                "run_index": 416,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010899000000108572,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7280537000000322,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005312000000685657,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_1-skipna_None]",
                "duration": 0.6871840000001157,
                "run_index": 417,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010895000000346045,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6844567000000552,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005482999999912863,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_5-skipna_True]",
                "duration": 0.6199284000000489,
                "run_index": 418,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010035999999900014,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6174455999999964,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000475600000072518,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_5-skipna_False]",
                "duration": 0.6814512999999351,
                "run_index": 419,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006177000000207045,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6797349999999369,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00048089999995681865,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_float_nan_only[ddof_5-skipna_None]",
                "duration": 0.675826700000016,
                "run_index": 420,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008434000000079322,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.673580099999981,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:665: in test_sem_float_nan_only\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000559800000019095,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_-5-rows]",
                "duration": 3.115046899999925,
                "run_index": 421,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009678999999778171,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.112365700000055,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000745399999914298,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_-5-columns]",
                "duration": 3.633240600000022,
                "run_index": 422,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009999000000107117,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6305290999999897,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000711700000010751,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_-1-rows]",
                "duration": 3.577420599999982,
                "run_index": 423,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007769999999709398,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5752999000000045,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005667000000357802,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_-1-columns]",
                "duration": 3.3213380999999345,
                "run_index": 424,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011398000000326647,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3184411999999384,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006172999999307649,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_0-rows]",
                "duration": 3.312099099999955,
                "run_index": 425,
                "setup": {
                    "name": "setup",
                    "duration": 0.00069589999998243,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3100948000000017,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006124999999883585,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_0-columns]",
                "duration": 3.3102689999998347,
                "run_index": 426,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006596999999146647,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.308430600000065,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005189999999402062,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_1-rows]",
                "duration": 3.2709625999999616,
                "run_index": 427,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009860000000116997,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2684245000000374,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005660999999008709,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_1-columns]",
                "duration": 3.365199700000062,
                "run_index": 428,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009823999999980515,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.362449500000025,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007854000000406813,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_5-rows]",
                "duration": 3.3150603999998793,
                "run_index": 429,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007171999999400214,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.313033799999971,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005922000000282424,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_sem_int_only[ddof_5-columns]",
                "duration": 3.572354300000029,
                "run_index": 430,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010209000000713786,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5648676999999225,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:673: in test_sem_int_only\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.005444799999963834,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[std-skipna_True-0]",
                "duration": 0.7498193000002402,
                "run_index": 431,
                "setup": {
                    "name": "setup",
                    "duration": 0.0034476000000722706,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7423978000000488,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000526300000046831,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[std-skipna_True-1]",
                "duration": 0.6921472000000222,
                "run_index": 432,
                "setup": {
                    "name": "setup",
                    "duration": 0.001274800000032883,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6890118999999686,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005856999999878099,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[std-skipna_False-0]",
                "duration": 0.6981467000002795,
                "run_index": 433,
                "setup": {
                    "name": "setup",
                    "duration": 0.001178100000061022,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6952163000000837,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000574200000073688,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[std-skipna_False-1]",
                "duration": 0.992721599999868,
                "run_index": 434,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012049999999135252,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9896383999999898,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006732000000511107,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[std-skipna_None-0]",
                "duration": 0.8920151000000942,
                "run_index": 435,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013099999999894862,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8888177000000042,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005774000001110835,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[std-skipna_None-1]",
                "duration": 0.8879587000000129,
                "run_index": 436,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009069999999837819,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.885193500000014,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0009512000000313492,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[var-skipna_True-0]",
                "duration": 0.78347169999995,
                "run_index": 437,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011843999999427979,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7805524000000332,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005505000000312066,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[var-skipna_True-1]",
                "duration": 0.841728499999931,
                "run_index": 438,
                "setup": {
                    "name": "setup",
                    "duration": 0.0014506999999639447,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8381387000000586,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006883999999445223,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[var-skipna_False-0]",
                "duration": 1.0349199999999428,
                "run_index": 439,
                "setup": {
                    "name": "setup",
                    "duration": 0.002543899999977839,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.0292017000000442,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006304999999429128,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[var-skipna_False-1]",
                "duration": 0.7693656999999803,
                "run_index": 440,
                "setup": {
                    "name": "setup",
                    "duration": 0.0025213999999778025,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7637561000000233,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005668000000014217,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[var-skipna_None-0]",
                "duration": 0.7506591000000071,
                "run_index": 441,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007915999999568157,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7485592000000452,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005167000000483313,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[var-skipna_None-1]",
                "duration": 0.7963995000000068,
                "run_index": 442,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007752999999866006,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7943086000000221,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005403000000114844,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[rank-skipna_True-0]",
                "duration": 0.6990292999997791,
                "run_index": 443,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012684999999237334,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6957644999999957,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007277999999359963,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[rank-skipna_True-1]",
                "duration": 0.8002865000001975,
                "run_index": 444,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011507000000392509,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7974800000000641,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005051000000548811,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[rank-skipna_False-0]",
                "duration": 0.7502436000000898,
                "run_index": 445,
                "setup": {
                    "name": "setup",
                    "duration": 0.001274100000046019,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.747193599999946,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005018000000518441,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[rank-skipna_False-1]",
                "duration": 0.6931373000001031,
                "run_index": 446,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007126000000425847,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.691170800000009,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005413000000089596,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[rank-skipna_None-0]",
                "duration": 0.6232742000001963,
                "run_index": 447,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008022000000664775,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.621121799999969,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005480000000943619,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_rank[rank-skipna_None-1]",
                "duration": 0.6666763000000628,
                "run_index": 448,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007721000000628919,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6645883999999569,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:686: in test_std_var_rank\n    *create_test_dfs(test_data[\"float_nan_data\"]),\nmodin\\pandas\\test\\utils.py:807: in create_test_dfs\n    post_fn, [pd.DataFrame(*args, **kwargs), pandas.DataFrame(*args, **kwargs)]\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005436999999801628,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_-5-rows]",
                "duration": 3.7532129999999597,
                "run_index": 449,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013292999999521271,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.749983199999974,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005712000000812623,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_-5-columns]",
                "duration": 3.6223607999999103,
                "run_index": 450,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011746999999786567,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6194090000000188,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006023999999342777,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_-1-rows]",
                "duration": 3.25809750000019,
                "run_index": 451,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007750000000896762,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.255929100000003,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006184000000075685,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_-1-columns]",
                "duration": 3.5506436000001713,
                "run_index": 452,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013540000001057706,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5472343999999794,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007011999999804175,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_0-rows]",
                "duration": 3.7833719999999857,
                "run_index": 453,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007408999999825028,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.781256399999961,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006338000000596367,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_0-columns]",
                "duration": 3.703839099999982,
                "run_index": 454,
                "setup": {
                    "name": "setup",
                    "duration": 0.0019235999999409614,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6992819000000736,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007100000000264117,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_1-rows]",
                "duration": 3.128357199999755,
                "run_index": 455,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013214999999036081,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.124978400000032,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007357999999157983,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_1-columns]",
                "duration": 3.392645600000037,
                "run_index": 456,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011739999999917927,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.389673900000048,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006237000000055559,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_5-rows]",
                "duration": 3.620893699999897,
                "run_index": 457,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010982999999669119,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.6179777999999487,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007193000000143002,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[std-ddof_5-columns]",
                "duration": 3.3018866000001026,
                "run_index": 458,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011691000000837448,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2989551999999094,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005932000000257176,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_-5-rows]",
                "duration": 3.1180976999999075,
                "run_index": 459,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011415999999826454,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.114683199999945,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011312999999972817,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_-5-columns]",
                "duration": 3.209344900000019,
                "run_index": 460,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009896999999909895,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.206691400000068,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006740999999692576,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_-1-rows]",
                "duration": 3.1836478000001307,
                "run_index": 461,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010852000000340922,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1807675000000017,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007099000000607703,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_-1-columns]",
                "duration": 3.169656199999963,
                "run_index": 462,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011987999999973908,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.1662086000000045,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010499999999638021,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_0-rows]",
                "duration": 3.229387299999985,
                "run_index": 463,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009691999999859036,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.226653199999987,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000795700000026045,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_0-columns]",
                "duration": 3.5112492000000657,
                "run_index": 464,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007645000000593427,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.5091734000000088,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00054679999993823,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_1-rows]",
                "duration": 3.415685200000098,
                "run_index": 465,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007626000000300337,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.4136111000000255,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005489000000125088,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_1-columns]",
                "duration": 3.2792421999996577,
                "run_index": 466,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007602999999107851,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2769758999999112,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007456999999249092,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_5-rows]",
                "duration": 3.2871719000000894,
                "run_index": 467,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011643000000276515,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.284154899999976,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006884000000582091,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_std_var_transposed[var-ddof_5-columns]",
                "duration": 3.3281321000000617,
                "run_index": 468,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012053000000378233,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.3251856000000544,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:695: in test_std_var_transposed\n    eval_general(\nmodin\\pandas\\test\\utils.py:709: in eval_general\n    comparator(*values)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005358999999316438,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_values[int_data]",
                "duration": 3.6446270999999797,
                "run_index": 469,
                "setup": {
                    "name": "setup",
                    "duration": 0.001114400000005844,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.641840000000002,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005582999999660387,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/dataframe/test_window.py::test_values[float_nan_data]",
                "duration": 0.6392268999998123,
                "run_index": 470,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007370999999238848,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6000050999999758,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\dataframe\\test_window.py:703: in test_values\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.03774759999998878,
                    "outcome": "passed"
                },
                "outcome": "failed"
            }
        ],
        "summary": {
            "failed": 269,
            "passed": 202,
            "num_tests": 471,
            "duration": 768.5175106525421
        },
        "created_at": "2021-07-28 22:16:28.079985"
    }
}