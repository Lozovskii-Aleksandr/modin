{
    "report": {
        "environment": {
            "Python": "3.8.10",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/test_general.py::test_isna[int_data]",
                "duration": 13.1955146,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 4.6659927,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.862695099999999,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:40: in test_isna\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008340999999987275,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_isna[float_nan_data]",
                "duration": 1.9036246999999982,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006088999999995792,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.9018806000000001,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:32: in test_isna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005262999999988693,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_isnull[int_data]",
                "duration": 3.9985863999999953,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.000660299999999836,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.996484699999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:56: in test_isnull\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007810999999975365,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_isnull[float_nan_data]",
                "duration": 0.7956572999999949,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006443999999987682,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7938537999999973,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:48: in test_isnull\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005147000000000901,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_notna[int_data]",
                "duration": 3.242193100000005,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006656000000013762,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.2402145000000004,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:72: in test_notna\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000647400000001852,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_notna[float_nan_data]",
                "duration": 0.634431499999998,
                "run_index": 5,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009629999999987149,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6319736999999996,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:64: in test_notna\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005318000000009704,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_notnull[int_data]",
                "duration": 3.2812892000000033,
                "run_index": 6,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009636999999997897,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.278645700000002,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:88: in test_notnull\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007161000000017737,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_notnull[float_nan_data]",
                "duration": 0.7056919000000015,
                "run_index": 7,
                "setup": {
                    "name": "setup",
                    "duration": 0.000976800000000111,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7032419999999995,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:80: in test_notnull\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004963000000017814,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge",
                "duration": 0.978343000000006,
                "run_index": 8,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004656000000018423,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9769298000000006,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004820000000016478,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_ordered",
                "duration": 0.27135230000000377,
                "run_index": 9,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004926000000011754,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2699111000000016,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:180: in test_merge_ordered\n    df = pd.merge_ordered(\nmodin\\pandas\\general.py:118: in merge_ordered\n    pandas.merge_ordered(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:279: in merge_ordered\n    result, _ = _groupby_and_merge(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:136: in _groupby_and_merge\n    merged = merge_pieces(lhs, rhs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:280: in <lambda>\n    left_by, on, left, right, lambda x, y: _merger(x, y)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:259: in _merger\n    op = _OrderedMerge(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1558: in __init__\n    _MergeOperation.__init__(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:672: in __init__\n    self._maybe_coerce_merge_keys()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1110: in _maybe_coerce_merge_keys\n    lk_is_object = is_object_dtype(lk.dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:228: in is_object_dtype\n    return _is_dtype_type(arr_or_dtype, classes(np.object_))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py:1640: in _is_dtype_type\n    elif is_list_like(arr_or_dtype):\npandas\\_libs\\lib.pyx:1033: in pandas._libs.lib.is_list_like\n    ???\npandas\\_libs\\lib.pyx:1038: in pandas._libs.lib.c_is_list_like\n    ???\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004559999999997899,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof",
                "duration": 0.26150210000000484,
                "run_index": 10,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005972000000014077,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2597245000000008,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:194: in test_merge_asof\n    df = pd.merge_asof(left, right, on=\"a\")\nmodin\\pandas\\general.py:247: in merge_asof\n    left_pandas_limited = pandas.DataFrame(left_pandas_limited, index=left.index)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py:529: in __init__\n    mgr = init_dict(data, index, columns, dtype=dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:287: in init_dict\n    return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:95: in arrays_to_mgr\n    return create_block_manager_from_arrays(arrays, arr_names, axes)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1701: in create_block_manager_from_arrays\n    blocks = _form_blocks(arrays, names, axes)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1790: in _form_blocks\n    object_blocks = _simple_blockify(items_dict[\"ObjectBlock\"], np.object_)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1834: in _simple_blockify\n    values, placement = _stack_arrays(tuples, dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1882: in _stack_arrays\n    stacked[i] = _asarray_compat(arr)\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005832000000012272,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof_on_variations",
                "duration": 0.28481289999999504,
                "run_index": 11,
                "setup": {
                    "name": "setup",
                    "duration": 0.000813699999998363,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.28260720000000106,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:246: in test_merge_asof_on_variations\n    modin_merged = pd.merge_asof(modin_left, modin_right, **on_arguments)\nmodin\\pandas\\general.py:247: in merge_asof\n    left_pandas_limited = pandas.DataFrame(left_pandas_limited, index=left.index)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py:529: in __init__\n    mgr = init_dict(data, index, columns, dtype=dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:287: in init_dict\n    return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py:95: in arrays_to_mgr\n    return create_block_manager_from_arrays(arrays, arr_names, axes)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1701: in create_block_manager_from_arrays\n    blocks = _form_blocks(arrays, names, axes)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1790: in _form_blocks\n    object_blocks = _simple_blockify(items_dict[\"ObjectBlock\"], np.object_)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1834: in _simple_blockify\n    values, placement = _stack_arrays(tuples, dtype)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py:1882: in _stack_arrays\n    stacked[i] = _asarray_compat(arr)\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000578299999997256,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof_suffixes",
                "duration": 0.23945220000000234,
                "run_index": 12,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008321000000002243,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.23718260000000058,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:271: in test_merge_asof_suffixes\n    df_equals(pandas_merged, modin_merged)\nmodin\\pandas\\test\\utils.py:527: in df_equals\n    assert_frame_equal(\nE   AssertionError"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006054000000013104,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof_bad_arguments",
                "duration": 0.2148010000000049,
                "run_index": 13,
                "setup": {
                    "name": "setup",
                    "duration": 0.00047990000000197597,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.21322449999999904,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006167000000019129,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_merge_asof_merge_options",
                "duration": 0.40232830000000064,
                "run_index": 14,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004908000000014567,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.4006962999999999,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:392: in test_merge_asof_merge_options\n    pandas.merge_asof(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:551: in merge_asof\n    op = _AsOfMerge(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1664: in __init__\n    _OrderedMerge.__init__(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1558: in __init__\n    _MergeOperation.__init__(\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:668: in __init__\n    ) = self._get_merge_keys()\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\reshape\\merge.py:1749: in _get_merge_keys\n    raise MergeError(msg)\nE   pandas.errors.MergeError: incompatible merge keys [0] dtype('O') and dtype('O'), must be the same type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006503999999978305,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_pivot",
                "duration": 0.20837200000000067,
                "run_index": 15,
                "setup": {
                    "name": "setup",
                    "duration": 0.000844000000000733,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20617470000000182,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005092999999973813,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_pivot_table",
                "duration": 0.22986530000000727,
                "run_index": 16,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005654000000028248,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2282851000000008,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:521: in test_pivot_table\n    df = pd.pivot_table(\nmodin\\pandas\\general.py:314: in pivot_table\n    return data.pivot_table(\nmodin\\experimental\\cloud\\rpyc_proxy.py:413: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: unhashable type: 'list'\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1522, in pivot_table\nE       query_compiler=self._query_compiler.pivot_table(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2957, in pivot_table\nE       keys_columns = self.getitem_column_array(unique_keys)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2162, in getitem_column_array\nE       new_modin_frame = self._modin_frame.mask(col_indices=key)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 492, in mask\nE       col_numeric_idx = self.columns.get_indexer_for(col_indices)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 4961, in get_indexer_for\nE       return self.get_indexer(target, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 3192, in get_indexer\nE       indexer = self._engine.get_indexer(target._get_engine_target())\nE     File \"pandas\\_libs\\index.pyx\", line 258, in pandas._libs.index.IndexEngine.get_indexer\nE     File \"pandas\\_libs\\hashtable_class_helper.pxi\", line 4603, in pandas._libs.hashtable.PyObjectHashTable.lookup\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 185, in __hash__\nE       return syncreq(self, consts.HANDLE_HASH)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: unhashable type: 'list'\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 590, in _handle_hash\nE       return hash(obj)\nE   TypeError: unhashable type: 'list'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00044940000000082136,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_unique",
                "duration": 0.1448290999999955,
                "run_index": 17,
                "setup": {
                    "name": "setup",
                    "duration": 0.00046429999999730853,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1433087999999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:549: in test_unique\n    assert_array_equal(modin_result, pandas_result)\nE   AssertionError: \nE   Arrays are not equal\nE   \nE   Mismatched elements: 1 / 1 (100%)\nE    x: array([Timestamp('2016-01-01 00:00:00')], dtype=object)\nE    y: array(['2016-01-01T00:00:00.000000000'], dtype='datetime64[ns]')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000591700000001083,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_value_counts[True-3-False]",
                "duration": 0.05291650000000203,
                "run_index": 18,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008510000000008233,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.050687100000001095,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:601: in test_value_counts\n    pd.value_counts(values, normalize=normalize, ascending=False), False\nmodin\\pandas\\general.py:349: in value_counts\n    return Series(values).value_counts(\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 364, in __init__\nE       data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 546, in sanitize_array\nE       if is_object_dtype(subarr.dtype) and not is_object_or_str_dtype:\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 228, in is_object_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.object_))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005273999999992895,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_datetime",
                "duration": 0.1710064000000031,
                "run_index": 19,
                "setup": {
                    "name": "setup",
                    "duration": 0.00046220000000118944,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.169527200000001,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:629: in test_to_datetime\n    df_equals(pd.to_datetime(modin_df), pandas.to_datetime(pandas_df))\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005547999999997444,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_datetime_inplace_side_effect",
                "duration": 253.01060739999994,
                "run_index": 20,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005142000000013525,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 253.00902119999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:653: in test_to_datetime_inplace_side_effect\n    df_equals(\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005577999999673011,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data0-raise-None]",
                "duration": 0.05920559999992747,
                "run_index": 21,
                "setup": {
                    "name": "setup",
                    "duration": 0.00080040000000281,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05680539999997336,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:674: in test_to_numeric\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007993999999484913,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data1-raise-float]",
                "duration": 0.058084299999961786,
                "run_index": 22,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011908999999832304,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.0549378000000047,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:674: in test_to_numeric\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007646999999906257,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data2-raise-signed]",
                "duration": 0.06171369999998433,
                "run_index": 23,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013821000000007189,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05832359999999426,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:674: in test_to_numeric\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006258999999886328,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data3-ignore-None]",
                "duration": 0.06397000000004027,
                "run_index": 24,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009661000000278364,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.06134309999998777,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:674: in test_to_numeric\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006946999999968284,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_numeric[data4-coerce-None]",
                "duration": 0.05981040000000348,
                "run_index": 25,
                "setup": {
                    "name": "setup",
                    "duration": 0.0010120000000028995,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.057169900000019425,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:674: in test_to_numeric\n    df_equals(modin_result, pandas_result)\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006164999999782594,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_to_pandas_indices",
                "duration": 3.314373499999931,
                "run_index": 26,
                "setup": {
                    "name": "setup",
                    "duration": 0.0004728999999770167,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.313020300000005,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_general.py:688: in test_to_pandas_indices\n    md_df.index = index\nmodin\\experimental\\cloud\\rpyc_proxy.py:499: in __setattr__\n    setattr(self.__remote_end__, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:178: in __setattr__\n    syncreq(self, consts.HANDLE_SETATTR, name, value)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: 'slice' object has no attribute '__array__'\nE   \nE   ========= Remote Traceback (3) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 615, in _handle_setattr\nE       return self._access_attr(obj, name, (value,), \"_rpyc_setattr\", \"allow_setattr\", setattr)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 537, in _access_attr\nE       return accessor(obj, name, *args)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2418, in __setattr__\nE       object.__setattr__(self, key, value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 518, in _set_index\nE       self._query_compiler.index = new_index\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 91, in set_axis\nE       self._modin_frame.index = idx\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 252, in _set_index\nE       self.synchronize_labels(axis=0)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 380, in synchronize_labels\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 381, in <listcomp>\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 384, in <listcomp>\nE       idx=self.index[\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 275, in method\nE       return syncreq(_self, consts.HANDLE_CALLATTR, name, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: 'slice' object has no attribute '__array__'\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 619, in _handle_callattr\nE       return self._handle_call(obj, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2045, in __getitem__\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 2045, in <listcomp>\nE       new_codes = [level_codes[key] for level_codes in self.codes]\nE     File \"C:\\prog\\modin\\modin\\experimental\\cloud\\rpyc_proxy.py\", line 213, in __array__\nE       return pickle.loads(self._remote_pickled_array(this))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\prog\\modin\\modin\\experimental\\cloud\\rpyc_proxy.py\", line 160, in sync_request\nE       return super().sync_request(handler, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: 'slice' object has no attribute '__array__'\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\experimental\\cloud\\rpyc_proxy.py\", line 38, in _pickled_array\nE       return pickle.dumps(obj.__array__())\nE   AttributeError: 'slice' object has no attribute '__array__'"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040739999997185805,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-DataFrame\\\\.mean]",
                "duration": 0.002222100000096816,
                "run_index": 27,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006812000000309126,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 702, 'Skipped: This test make sense only on BaseOnPython backend.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008597000000349908,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-DataFrame\\\\.add]",
                "duration": 0.0017924999999081592,
                "run_index": 28,
                "setup": {
                    "name": "setup",
                    "duration": 0.0006191999999600739,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 702, 'Skipped: This test make sense only on BaseOnPython backend.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005540999999880114,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-DataFrame\\\\.get_axis\\\\(0\\\\)]",
                "duration": 0.004037699999969391,
                "run_index": 29,
                "setup": {
                    "name": "setup",
                    "duration": 0.001815799999974388,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 702, 'Skipped: This test make sense only on BaseOnPython backend.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00040610000002061497,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-Series\\\\.repeat]",
                "duration": 0.0008901000001060311,
                "run_index": 30,
                "setup": {
                    "name": "setup",
                    "duration": 0.0002826000000482054,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 702, 'Skipped: This test make sense only on BaseOnPython backend.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00032490000000962027,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-GroupBy\\\\.prod]",
                "duration": 0.0009163000000285138,
                "run_index": 31,
                "setup": {
                    "name": "setup",
                    "duration": 0.00029810000000907166,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 702, 'Skipped: This test make sense only on BaseOnPython backend.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0003201000000103704,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_default_to_pandas_warning_message[<lambda>-Rolling\\\\.count]",
                "duration": 0.0009386999999492218,
                "run_index": 32,
                "setup": {
                    "name": "setup",
                    "duration": 0.00026289999999562497,
                    "outcome": "skipped",
                    "longrepr": "('C:\\\\prog\\\\modin\\\\modin\\\\pandas\\\\test\\\\test_general.py', 702, 'Skipped: This test make sense only on BaseOnPython backend.')"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0004128999999579719,
                    "outcome": "passed"
                },
                "outcome": "skipped"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_empty_dataframe",
                "duration": 0.060519800000065516,
                "run_index": 33,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005082000000129483,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05881750000003194,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006859000000076776,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_general.py::test_empty_series",
                "duration": 0.05955010000002403,
                "run_index": 34,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005317000000104599,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.05489949999997634,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.003587200000026769,
                    "outcome": "passed"
                },
                "outcome": "passed"
            }
        ],
        "summary": {
            "failed": 24,
            "passed": 5,
            "skipped": 6,
            "num_tests": 35,
            "duration": 290.0530905723572
        },
        "created_at": "2021-07-28 22:59:17.471918"
    }
}