{
    "report": {
        "environment": {
            "Python": "3.8.10",
            "Platform": "Windows-10-10.0.19042-SP0"
        },
        "tests": [
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[None-None-5-int_data]",
                "duration": 45.9541979,
                "run_index": 0,
                "setup": {
                    "name": "setup",
                    "duration": 5.1202832,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 35.7127189,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:75: in test_dataframe\n    df_equals(modin_rolled.aggregate(np.sum), pandas_rolled.aggregate(np.sum))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3553, in aggregate\nE       query_compiler=self._query_compiler.rolling_aggregate(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1145, in rolling_aggregate\nE       new_modin_frame = self._modin_frame.apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1396, in apply_full_axis\nE       return self.broadcast_apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1804, in broadcast_apply_full_axis\nE       new_partitions = self._partition_mgr_cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1153, in _map_reduce_func\nE       series_result = func(df, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1148, in <lambda>\nE       df.rolling(*rolling_args).aggregate(func=func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2002, in aggregate\nE       return super().aggregate(func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 472, in aggregate\nE       result, how = aggregate(self, func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 583, in aggregate\nE       elif is_list_like(arg):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000912599999999486,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[None-None-5-float_nan_data]",
                "duration": 1.3965182000000027,
                "run_index": 1,
                "setup": {
                    "name": "setup",
                    "duration": 0.0007985000000019227,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.3942888999999994,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:40: in test_dataframe\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000632299999999475,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[None-None-100-int_data]",
                "duration": 27.185934200000005,
                "run_index": 2,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008467000000038638,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 27.183079199999995,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:75: in test_dataframe\n    df_equals(modin_rolled.aggregate(np.sum), pandas_rolled.aggregate(np.sum))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3553, in aggregate\nE       query_compiler=self._query_compiler.rolling_aggregate(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1145, in rolling_aggregate\nE       new_modin_frame = self._modin_frame.apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1396, in apply_full_axis\nE       return self.broadcast_apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1804, in broadcast_apply_full_axis\nE       new_partitions = self._partition_mgr_cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1153, in _map_reduce_func\nE       series_result = func(df, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1148, in <lambda>\nE       df.rolling(*rolling_args).aggregate(func=func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2002, in aggregate\nE       return super().aggregate(func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 472, in aggregate\nE       result, how = aggregate(self, func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 583, in aggregate\nE       elif is_list_like(arg):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011616000000032045,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[None-None-100-float_nan_data]",
                "duration": 0.7389192000000122,
                "run_index": 3,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008710000000036189,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7363516000000061,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:40: in test_dataframe\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008255999999988717,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[None-5-5-int_data]",
                "duration": 37.33352510000002,
                "run_index": 4,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012223000000091133,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 37.330491499999994,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:75: in test_dataframe\n    df_equals(modin_rolled.aggregate(np.sum), pandas_rolled.aggregate(np.sum))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3553, in aggregate\nE       query_compiler=self._query_compiler.rolling_aggregate(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1145, in rolling_aggregate\nE       new_modin_frame = self._modin_frame.apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1396, in apply_full_axis\nE       return self.broadcast_apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1804, in broadcast_apply_full_axis\nE       new_partitions = self._partition_mgr_cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1153, in _map_reduce_func\nE       series_result = func(df, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1148, in <lambda>\nE       df.rolling(*rolling_args).aggregate(func=func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2002, in aggregate\nE       return super().aggregate(func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 472, in aggregate\nE       result, how = aggregate(self, func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 583, in aggregate\nE       elif is_list_like(arg):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005890000000050577,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[None-5-5-float_nan_data]",
                "duration": 0.6385058999999842,
                "run_index": 5,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008121999999985974,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.636320899999987,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:40: in test_dataframe\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005606000000000222,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[None-5-100-int_data]",
                "duration": 36.54873189999998,
                "run_index": 6,
                "setup": {
                    "name": "setup",
                    "duration": 0.000965600000000677,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 36.546189699999985,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:75: in test_dataframe\n    df_equals(modin_rolled.aggregate(np.sum), pandas_rolled.aggregate(np.sum))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3553, in aggregate\nE       query_compiler=self._query_compiler.rolling_aggregate(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1145, in rolling_aggregate\nE       new_modin_frame = self._modin_frame.apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1396, in apply_full_axis\nE       return self.broadcast_apply_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1804, in broadcast_apply_full_axis\nE       new_partitions = self._partition_mgr_cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1153, in _map_reduce_func\nE       series_result = func(df, *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1148, in <lambda>\nE       df.rolling(*rolling_args).aggregate(func=func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2002, in aggregate\nE       return super().aggregate(func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 472, in aggregate\nE       result, how = aggregate(self, func, *args, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\aggregation.py\", line 583, in aggregate\nE       elif is_list_like(arg):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006109999999921456,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[None-5-100-float_nan_data]",
                "duration": 0.764302100000009,
                "run_index": 7,
                "setup": {
                    "name": "setup",
                    "duration": 0.0012681999999983873,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.7605264999999974,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:40: in test_dataframe\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0012392000000147618,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[triang-None-5-int_data]",
                "duration": 6.9484465000000455,
                "run_index": 8,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011544000000185406,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 6.945534299999991,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006034000000170181,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[triang-None-5-float_nan_data]",
                "duration": 1.369686999999999,
                "run_index": 9,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009550999999987653,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.3672301999999945,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:40: in test_dataframe\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005466000000069471,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[triang-None-100-int_data]",
                "duration": 4.43719420000005,
                "run_index": 10,
                "setup": {
                    "name": "setup",
                    "duration": 0.00121230000002015,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.434130699999997,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006389000000126543,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[triang-None-100-float_nan_data]",
                "duration": 1.4450746999999353,
                "run_index": 11,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008711999999775344,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.4427951999999777,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:40: in test_dataframe\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005371000000025106,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[triang-5-5-int_data]",
                "duration": 3.9173986000000127,
                "run_index": 12,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008922000000097796,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 3.9149903999999935,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006237999999996191,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[triang-5-5-float_nan_data]",
                "duration": 1.2876837000000023,
                "run_index": 13,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008573000000069442,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.285396899999995,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:40: in test_dataframe\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005721999999934724,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[triang-5-100-int_data]",
                "duration": 4.009577300000018,
                "run_index": 14,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008291000000042459,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 4.007285800000005,
                    "outcome": "passed"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006333000000040556,
                    "outcome": "passed"
                },
                "outcome": "passed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe[triang-5-100-float_nan_data]",
                "duration": 1.3202070000000106,
                "run_index": 15,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008564000000035321,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 1.3179024000000084,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:40: in test_dataframe\n    modin_df = pd.DataFrame(data)\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 171, in __init__\nE       pandas_df = pandas.DataFrame(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 529, in __init__\nE       mgr = init_dict(data, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 287, in init_dict\nE       return arrays_to_mgr(arrays, data_names, index, columns, dtype=dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 85, in arrays_to_mgr\nE       arrays = _homogenize(arrays, index, dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\construction.py\", line 355, in _homogenize\nE       val = sanitize_array(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005917999999951462,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3-both-None-0]",
                "duration": 0.6608325000000264,
                "run_index": 16,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008568000000082066,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.6585391000000129,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:105: in test_dataframe_dt_index\n    modin_rolled.corr(modin_df, True), pandas_rolled.corr(pandas_df, True)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3489, in corr\nE       query_compiler=self._query_compiler.rolling_corr(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1114, in rolling_corr\nE       return self.default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 241, in default_to_pandas\nE       result = pandas_op(self.to_pandas(), *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1115, in <lambda>\nE       lambda df: pandas.DataFrame.rolling(df, *rolling_args).corr(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2139, in corr\nE       return super().corr(other=other, pairwise=pairwise, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1857, in corr\nE       return flex_binary_moment(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\common.py\", line 128, in flex_binary_moment\nE       result.index = MultiIndex.from_product(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 590, in from_product\nE       codes, levels = factorize_from_iterables(iterables)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2637, in factorize_from_iterables\nE       return map(list, zip(*(factorize_from_iterable(it) for it in iterables)))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2637, in <genexpr>\nE       return map(list, zip(*(factorize_from_iterable(it) for it in iterables)))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2609, in factorize_from_iterable\nE       cat = Categorical(values, ordered=False)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 377, in __init__\nE       self._codes = coerce_indexer_dtype(codes, dtype.categories)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 988, in coerce_indexer_dtype\nE       return ensure_int8(indexer)\nE     File \"pandas\\_libs\\algos_common_helper.pxi\", line 63, in pandas._libs.algos.ensure_int8\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005797999999970216,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3-both-None-columns]",
                "duration": 0.25607519999999795,
                "run_index": 17,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008239999999943848,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2537512000000106,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:105: in test_dataframe_dt_index\n    modin_rolled.corr(modin_df, True), pandas_rolled.corr(pandas_df, True)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3484, in corr\nE       other = other._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 255, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2227, in to_pandas\nE       df = self._partition_mgr_cls.to_pandas(self._partitions)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 699, in to_pandas\nE       return cls.concatenate(df_rows)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 653, in concatenate\nE       *[set(df.select_dtypes(\"category\").columns.tolist()) for df in dfs]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 653, in <listcomp>\nE       *[set(df.select_dtypes(\"category\").columns.tolist()) for df in dfs]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 3738, in select_dtypes\nE       return self.iloc[:, keep_these.values]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 889, in __getitem__\nE       return self._getitem_tuple(key)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1454, in _getitem_tuple\nE       return self._getitem_tuple_same_dim(tup)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 775, in _getitem_tuple_same_dim\nE       retval = getattr(retval, self.name)._getitem_axis(key, axis=i)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1488, in _getitem_axis\nE       return self._getbool_axis(key, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 914, in _getbool_axis\nE       return self.obj._take_with_is_copy(inds, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 3600, in _take_with_is_copy\nE       result = self.take(indices=indices, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 3586, in take\nE       new_data = self._mgr.take(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1473, in take\nE       new_labels = self.axes[axis].take(indexer)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\datetimelike.py\", line 204, in take\nE       indices = np.asarray(indices, dtype=np.intp)\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006759999999985666,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3-both-DateCol-0]",
                "duration": 0.5437607000000071,
                "run_index": 18,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008238000000062584,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5410995999999955,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:105: in test_dataframe_dt_index\n    modin_rolled.corr(modin_df, True), pandas_rolled.corr(pandas_df, True)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3489, in corr\nE       query_compiler=self._query_compiler.rolling_corr(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1114, in rolling_corr\nE       return self.default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 241, in default_to_pandas\nE       result = pandas_op(self.to_pandas(), *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1115, in <lambda>\nE       lambda df: pandas.DataFrame.rolling(df, *rolling_args).corr(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2139, in corr\nE       return super().corr(other=other, pairwise=pairwise, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1857, in corr\nE       return flex_binary_moment(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\common.py\", line 128, in flex_binary_moment\nE       result.index = MultiIndex.from_product(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 590, in from_product\nE       codes, levels = factorize_from_iterables(iterables)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2637, in factorize_from_iterables\nE       return map(list, zip(*(factorize_from_iterable(it) for it in iterables)))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2637, in <genexpr>\nE       return map(list, zip(*(factorize_from_iterable(it) for it in iterables)))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2609, in factorize_from_iterable\nE       cat = Categorical(values, ordered=False)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 377, in __init__\nE       self._codes = coerce_indexer_dtype(codes, dtype.categories)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 988, in coerce_indexer_dtype\nE       return ensure_int8(indexer)\nE     File \"pandas\\_libs\\algos_common_helper.pxi\", line 63, in pandas._libs.algos.ensure_int8\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0010134999999991123,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3-both-DateCol-columns]",
                "duration": 0.2348547999999937,
                "run_index": 19,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008417999999892345,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.23257549999999583,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:105: in test_dataframe_dt_index\n    modin_rolled.corr(modin_df, True), pandas_rolled.corr(pandas_df, True)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3484, in corr\nE       other = other._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 255, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2227, in to_pandas\nE       df = self._partition_mgr_cls.to_pandas(self._partitions)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 699, in to_pandas\nE       return cls.concatenate(df_rows)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 653, in concatenate\nE       *[set(df.select_dtypes(\"category\").columns.tolist()) for df in dfs]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 653, in <listcomp>\nE       *[set(df.select_dtypes(\"category\").columns.tolist()) for df in dfs]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 3738, in select_dtypes\nE       return self.iloc[:, keep_these.values]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 889, in __getitem__\nE       return self._getitem_tuple(key)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1454, in _getitem_tuple\nE       return self._getitem_tuple_same_dim(tup)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 775, in _getitem_tuple_same_dim\nE       retval = getattr(retval, self.name)._getitem_axis(key, axis=i)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1488, in _getitem_axis\nE       return self._getbool_axis(key, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 914, in _getbool_axis\nE       return self.obj._take_with_is_copy(inds, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 3600, in _take_with_is_copy\nE       result = self.take(indices=indices, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 3586, in take\nE       new_data = self._mgr.take(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1473, in take\nE       new_labels = self.axes[axis].take(indexer)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\datetimelike.py\", line 204, in take\nE       indices = np.asarray(indices, dtype=np.intp)\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005957000000194057,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3-right-None-0]",
                "duration": 0.5302312000000313,
                "run_index": 20,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008174000000167325,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5279887000000087,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:105: in test_dataframe_dt_index\n    modin_rolled.corr(modin_df, True), pandas_rolled.corr(pandas_df, True)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3489, in corr\nE       query_compiler=self._query_compiler.rolling_corr(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1114, in rolling_corr\nE       return self.default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 241, in default_to_pandas\nE       result = pandas_op(self.to_pandas(), *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1115, in <lambda>\nE       lambda df: pandas.DataFrame.rolling(df, *rolling_args).corr(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2139, in corr\nE       return super().corr(other=other, pairwise=pairwise, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1857, in corr\nE       return flex_binary_moment(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\common.py\", line 128, in flex_binary_moment\nE       result.index = MultiIndex.from_product(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 590, in from_product\nE       codes, levels = factorize_from_iterables(iterables)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2637, in factorize_from_iterables\nE       return map(list, zip(*(factorize_from_iterable(it) for it in iterables)))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2637, in <genexpr>\nE       return map(list, zip(*(factorize_from_iterable(it) for it in iterables)))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2609, in factorize_from_iterable\nE       cat = Categorical(values, ordered=False)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 377, in __init__\nE       self._codes = coerce_indexer_dtype(codes, dtype.categories)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 988, in coerce_indexer_dtype\nE       return ensure_int8(indexer)\nE     File \"pandas\\_libs\\algos_common_helper.pxi\", line 63, in pandas._libs.algos.ensure_int8\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006076999999891086,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3-right-None-columns]",
                "duration": 0.2298240000000078,
                "run_index": 21,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008751000000017939,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.22746570000001043,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:105: in test_dataframe_dt_index\n    modin_rolled.corr(modin_df, True), pandas_rolled.corr(pandas_df, True)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3484, in corr\nE       other = other._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 255, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2227, in to_pandas\nE       df = self._partition_mgr_cls.to_pandas(self._partitions)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 699, in to_pandas\nE       return cls.concatenate(df_rows)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 653, in concatenate\nE       *[set(df.select_dtypes(\"category\").columns.tolist()) for df in dfs]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 653, in <listcomp>\nE       *[set(df.select_dtypes(\"category\").columns.tolist()) for df in dfs]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 3738, in select_dtypes\nE       return self.iloc[:, keep_these.values]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 889, in __getitem__\nE       return self._getitem_tuple(key)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1454, in _getitem_tuple\nE       return self._getitem_tuple_same_dim(tup)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 775, in _getitem_tuple_same_dim\nE       retval = getattr(retval, self.name)._getitem_axis(key, axis=i)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1488, in _getitem_axis\nE       return self._getbool_axis(key, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 914, in _getbool_axis\nE       return self.obj._take_with_is_copy(inds, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 3600, in _take_with_is_copy\nE       result = self.take(indices=indices, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 3586, in take\nE       new_data = self._mgr.take(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1473, in take\nE       new_labels = self.axes[axis].take(indexer)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\datetimelike.py\", line 204, in take\nE       indices = np.asarray(indices, dtype=np.intp)\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006080999999937831,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3-right-DateCol-0]",
                "duration": 0.5177668000000324,
                "run_index": 22,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008232000000134576,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.5155015999999932,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:105: in test_dataframe_dt_index\n    modin_rolled.corr(modin_df, True), pandas_rolled.corr(pandas_df, True)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3489, in corr\nE       query_compiler=self._query_compiler.rolling_corr(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1114, in rolling_corr\nE       return self.default_to_pandas(\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 241, in default_to_pandas\nE       result = pandas_op(self.to_pandas(), *args, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1115, in <lambda>\nE       lambda df: pandas.DataFrame.rolling(df, *rolling_args).corr(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2139, in corr\nE       return super().corr(other=other, pairwise=pairwise, **kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1857, in corr\nE       return flex_binary_moment(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\common.py\", line 128, in flex_binary_moment\nE       result.index = MultiIndex.from_product(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\multi.py\", line 590, in from_product\nE       codes, levels = factorize_from_iterables(iterables)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2637, in factorize_from_iterables\nE       return map(list, zip(*(factorize_from_iterable(it) for it in iterables)))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2637, in <genexpr>\nE       return map(list, zip(*(factorize_from_iterable(it) for it in iterables)))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 2609, in factorize_from_iterable\nE       cat = Categorical(values, ordered=False)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\arrays\\categorical.py\", line 377, in __init__\nE       self._codes = coerce_indexer_dtype(codes, dtype.categories)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 988, in coerce_indexer_dtype\nE       return ensure_int8(indexer)\nE     File \"pandas\\_libs\\algos_common_helper.pxi\", line 63, in pandas._libs.algos.ensure_int8\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006188000000122429,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3-right-DateCol-columns]",
                "duration": 0.27583680000000754,
                "run_index": 23,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008224000000041087,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2736352000000011,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:105: in test_dataframe_dt_index\n    modin_rolled.corr(modin_df, True), pandas_rolled.corr(pandas_df, True)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3484, in corr\nE       other = other._query_compiler.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 255, in to_pandas\nE       return self._modin_frame.to_pandas()\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 2227, in to_pandas\nE       df = self._partition_mgr_cls.to_pandas(self._partitions)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 699, in to_pandas\nE       return cls.concatenate(df_rows)\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 653, in concatenate\nE       *[set(df.select_dtypes(\"category\").columns.tolist()) for df in dfs]\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 653, in <listcomp>\nE       *[set(df.select_dtypes(\"category\").columns.tolist()) for df in dfs]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\frame.py\", line 3738, in select_dtypes\nE       return self.iloc[:, keep_these.values]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 889, in __getitem__\nE       return self._getitem_tuple(key)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1454, in _getitem_tuple\nE       return self._getitem_tuple_same_dim(tup)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 775, in _getitem_tuple_same_dim\nE       retval = getattr(retval, self.name)._getitem_axis(key, axis=i)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1488, in _getitem_axis\nE       return self._getbool_axis(key, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 914, in _getbool_axis\nE       return self.obj._take_with_is_copy(inds, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 3600, in _take_with_is_copy\nE       result = self.take(indices=indices, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\generic.py\", line 3586, in take\nE       new_data = self._mgr.take(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\internals\\managers.py\", line 1473, in take\nE       new_labels = self.axes[axis].take(indexer)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\datetimelike.py\", line 204, in take\nE       indices = np.asarray(indices, dtype=np.intp)\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005567999999982476,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3s-both-None-0]",
                "duration": 0.18571220000004018,
                "run_index": 24,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008915000000229156,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18311629999999468,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:124: in test_dataframe_dt_index\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3427, in count\nE       query_compiler=self._query_compiler.rolling_count(self.rolling_args)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 44, in caller\nE       query_compiler._modin_frame.fold(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1313, in fold\nE       new_partitions = self._partition_mgr_cls.map_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 546, in map_axis_partitions\nE       return cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 46, in <lambda>\nE       lambda x: fold_function(x, *args, **kwargs),\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1045, in <lambda>\nE       lambda df, rolling_args: pandas.DataFrame(df.rolling(*rolling_args).count())\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2022, in count\nE       result = super().count()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1225, in count\nE       return self._apply(window_func, name=\"count\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 435, in _apply\nE       window_indexer = self._get_window_indexer()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 354, in _get_window_indexer\nE       index_array=self._index_array, window_size=self.window\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 342, in _index_array\nE       if needs_i8_conversion(self._on.dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008128999999996722,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3s-both-None-columns]",
                "duration": 0.21570330000000126,
                "run_index": 25,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008603999999934331,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2134580000000028,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:124: in test_dataframe_dt_index\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3427, in count\nE       query_compiler=self._query_compiler.rolling_count(self.rolling_args)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 44, in caller\nE       query_compiler._modin_frame.fold(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1313, in fold\nE       new_partitions = self._partition_mgr_cls.map_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 546, in map_axis_partitions\nE       return cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 46, in <lambda>\nE       lambda x: fold_function(x, *args, **kwargs),\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1045, in <lambda>\nE       lambda df, rolling_args: pandas.DataFrame(df.rolling(*rolling_args).count())\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2022, in count\nE       result = super().count()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1225, in count\nE       return self._apply(window_func, name=\"count\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 435, in _apply\nE       window_indexer = self._get_window_indexer()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 354, in _get_window_indexer\nE       index_array=self._index_array, window_size=self.window\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 342, in _index_array\nE       if needs_i8_conversion(self._on.dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005245000000115851,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3s-both-DateCol-0]",
                "duration": 0.2450247999999533,
                "run_index": 26,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008003999999743883,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.24287739999999758,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:94: in test_dataframe_dt_index\n    modin_df[on] = pd.date_range(\"22/06/1941\", periods=12, freq=\"T\")\nmodin\\experimental\\cloud\\rpyc_proxy.py:413: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: cannot do positional indexing on DatetimeIndex with these indexers [0] of type type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2465, in __setitem__\nE       self.insert(loc=len(self.columns), column=key, value=value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1149, in insert\nE       new_query_compiler = self._query_compiler.insert(loc, column, value)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2320, in insert\nE       new_modin_frame = self._modin_frame.apply_full_axis_select_indices(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1451, in apply_full_axis_select_indices\nE       self._partition_mgr_cls.apply_func_to_select_indices_along_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 1143, in apply_func_to_select_indices_along_full_axis\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 1146, in <listcomp>\nE       else partitions_for_apply[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 322, in deploy_axis_func\nE       return split_result_of_axis_func_pandas(axis, num_splits, result, lengths)\nE     File \"C:\\prog\\modin\\modin\\data_management\\utils.py\", line 106, in split_result_of_axis_func_pandas\nE       return [result.iloc[sums[i] : sums[i + 1]] for i in range(len(sums) - 1)]\nE     File \"C:\\prog\\modin\\modin\\data_management\\utils.py\", line 106, in <listcomp>\nE       return [result.iloc[sums[i] : sums[i + 1]] for i in range(len(sums) - 1)]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 895, in __getitem__\nE       return self._getitem_axis(maybe_callable, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1481, in _getitem_axis\nE       return self._get_slice_axis(key, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1513, in _get_slice_axis\nE       labels._validate_positional_slice(slice_obj)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: cannot do positional indexing on DatetimeIndex with these indexers [0] of type type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 3321, in _validate_positional_slice\nE       self._validate_indexer(\"positional\", key.start, \"iloc\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 5310, in _validate_indexer\nE       raise self._invalid_indexer(form, key)\nE   TypeError: cannot do positional indexing on DatetimeIndex with these indexers [0] of type type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005466000000069471,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3s-both-DateCol-columns]",
                "duration": 0.20769210000005955,
                "run_index": 27,
                "setup": {
                    "name": "setup",
                    "duration": 0.001224700000022949,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.20470030000001316,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:124: in test_dataframe_dt_index\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3427, in count\nE       query_compiler=self._query_compiler.rolling_count(self.rolling_args)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 44, in caller\nE       query_compiler._modin_frame.fold(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1313, in fold\nE       new_partitions = self._partition_mgr_cls.map_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 546, in map_axis_partitions\nE       return cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 46, in <lambda>\nE       lambda x: fold_function(x, *args, **kwargs),\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1045, in <lambda>\nE       lambda df, rolling_args: pandas.DataFrame(df.rolling(*rolling_args).count())\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2022, in count\nE       result = super().count()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1225, in count\nE       return self._apply(window_func, name=\"count\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 435, in _apply\nE       window_indexer = self._get_window_indexer()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 354, in _get_window_indexer\nE       index_array=self._index_array, window_size=self.window\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 342, in _index_array\nE       if needs_i8_conversion(self._on.dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000542400000000498,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3s-right-None-0]",
                "duration": 0.19103680000000622,
                "run_index": 28,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008703999999966072,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.18874440000001869,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:124: in test_dataframe_dt_index\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3427, in count\nE       query_compiler=self._query_compiler.rolling_count(self.rolling_args)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 44, in caller\nE       query_compiler._modin_frame.fold(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1313, in fold\nE       new_partitions = self._partition_mgr_cls.map_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 546, in map_axis_partitions\nE       return cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 46, in <lambda>\nE       lambda x: fold_function(x, *args, **kwargs),\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1045, in <lambda>\nE       lambda df, rolling_args: pandas.DataFrame(df.rolling(*rolling_args).count())\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2022, in count\nE       result = super().count()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1225, in count\nE       return self._apply(window_func, name=\"count\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 435, in _apply\nE       window_indexer = self._get_window_indexer()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 354, in _get_window_indexer\nE       index_array=self._index_array, window_size=self.window\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 342, in _index_array\nE       if needs_i8_conversion(self._on.dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005515999999943233,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3s-right-None-columns]",
                "duration": 0.21437429999997448,
                "run_index": 29,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009006999999883192,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2120335000000182,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:124: in test_dataframe_dt_index\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3427, in count\nE       query_compiler=self._query_compiler.rolling_count(self.rolling_args)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 44, in caller\nE       query_compiler._modin_frame.fold(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1313, in fold\nE       new_partitions = self._partition_mgr_cls.map_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 546, in map_axis_partitions\nE       return cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 46, in <lambda>\nE       lambda x: fold_function(x, *args, **kwargs),\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1045, in <lambda>\nE       lambda df, rolling_args: pandas.DataFrame(df.rolling(*rolling_args).count())\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2022, in count\nE       result = super().count()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1225, in count\nE       return self._apply(window_func, name=\"count\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 435, in _apply\nE       window_indexer = self._get_window_indexer()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 354, in _get_window_indexer\nE       index_array=self._index_array, window_size=self.window\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 342, in _index_array\nE       if needs_i8_conversion(self._on.dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005393999999796506,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3s-right-DateCol-0]",
                "duration": 0.2708978999999374,
                "run_index": 30,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009731999999758045,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2684320999999841,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:94: in test_dataframe_dt_index\n    modin_df[on] = pd.date_range(\"22/06/1941\", periods=12, freq=\"T\")\nmodin\\experimental\\cloud\\rpyc_proxy.py:413: in method\n    return remote(_self.__remote_end__, *_args, **_kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: cannot do positional indexing on DatetimeIndex with these indexers [0] of type type\nE   \nE   ========= Remote Traceback (2) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 2465, in __setitem__\nE       self.insert(loc=len(self.columns), column=key, value=value)\nE     File \"C:\\prog\\modin\\modin\\pandas\\dataframe.py\", line 1149, in insert\nE       new_query_compiler = self._query_compiler.insert(loc, column, value)\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 2320, in insert\nE       new_modin_frame = self._modin_frame.apply_full_axis_select_indices(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1451, in apply_full_axis_select_indices\nE       self._partition_mgr_cls.apply_func_to_select_indices_along_full_axis(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 1143, in apply_func_to_select_indices_along_full_axis\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 1146, in <listcomp>\nE       else partitions_for_apply[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 322, in deploy_axis_func\nE       return split_result_of_axis_func_pandas(axis, num_splits, result, lengths)\nE     File \"C:\\prog\\modin\\modin\\data_management\\utils.py\", line 106, in split_result_of_axis_func_pandas\nE       return [result.iloc[sums[i] : sums[i + 1]] for i in range(len(sums) - 1)]\nE     File \"C:\\prog\\modin\\modin\\data_management\\utils.py\", line 106, in <listcomp>\nE       return [result.iloc[sums[i] : sums[i + 1]] for i in range(len(sums) - 1)]\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 895, in __getitem__\nE       return self._getitem_axis(maybe_callable, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1481, in _getitem_axis\nE       return self._get_slice_axis(key, axis=axis)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexing.py\", line 1513, in _get_slice_axis\nE       labels._validate_positional_slice(slice_obj)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 253, in __call__\nE       return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py\", line 76, in syncreq\nE       return conn.sync_request(handler, proxy, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 469, in sync_request\nE       return self.async_request(handler, *args, timeout=timeout).value\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py\", line 102, in value\nE       raise self._obj\nE   _get_exception_class.<locals>.Derived: cannot do positional indexing on DatetimeIndex with these indexers [0] of type type\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 3321, in _validate_positional_slice\nE       self._validate_indexer(\"positional\", key.start, \"iloc\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\indexes\\base.py\", line 5310, in _validate_indexer\nE       raise self._invalid_indexer(form, key)\nE   TypeError: cannot do positional indexing on DatetimeIndex with these indexers [0] of type type"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000519400000001724,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_dataframe_dt_index[3s-right-DateCol-columns]",
                "duration": 0.2058488000000125,
                "run_index": 31,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008990999999980431,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2033478000000173,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:124: in test_dataframe_dt_index\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3427, in count\nE       query_compiler=self._query_compiler.rolling_count(self.rolling_args)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 44, in caller\nE       query_compiler._modin_frame.fold(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1313, in fold\nE       new_partitions = self._partition_mgr_cls.map_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 546, in map_axis_partitions\nE       return cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 46, in <lambda>\nE       lambda x: fold_function(x, *args, **kwargs),\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1045, in <lambda>\nE       lambda df, rolling_args: pandas.DataFrame(df.rolling(*rolling_args).count())\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2022, in count\nE       result = super().count()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1225, in count\nE       return self._apply(window_func, name=\"count\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 435, in _apply\nE       window_indexer = self._get_window_indexer()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 354, in _get_window_indexer\nE       index_array=self._index_array, window_size=self.window\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 342, in _index_array\nE       if needs_i8_conversion(self._on.dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0007027999999991152,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[None-None-5-int_data]",
                "duration": 0.10098999999999592,
                "run_index": 32,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008315000000038708,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09864079999999831,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:162: in test_series\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006861999999898671,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[None-None-5-float_nan_data]",
                "duration": 0.8827802000000418,
                "run_index": 33,
                "setup": {
                    "name": "setup",
                    "duration": 0.000834200000014107,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8804862000000071,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:139: in test_series\n    modin_series, pandas_series = create_test_series(data)\nmodin\\pandas\\test\\test_rolling.py:27: in create_test_series\n    modin_series = pd.Series(vals[next(iter(vals.keys()))])\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 364, in __init__\nE       data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006256000000064432,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[None-None-100-int_data]",
                "duration": 0.10542220000004932,
                "run_index": 34,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008218000000113079,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.10294720000001689,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:162: in test_series\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0008314000000098076,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[None-None-100-float_nan_data]",
                "duration": 0.8338247000000365,
                "run_index": 35,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008958000000234279,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8315006999999923,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:139: in test_series\n    modin_series, pandas_series = create_test_series(data)\nmodin\\pandas\\test\\test_rolling.py:27: in create_test_series\n    modin_series = pd.Series(vals[next(iter(vals.keys()))])\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 364, in __init__\nE       data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005323999999973239,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[None-5-5-int_data]",
                "duration": 0.10322609999997212,
                "run_index": 36,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008239000000003216,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.10089579999998932,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:162: in test_series\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006824999999821557,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[None-5-5-float_nan_data]",
                "duration": 0.9538569000000052,
                "run_index": 37,
                "setup": {
                    "name": "setup",
                    "duration": 0.000866999999999507,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9515653999999927,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:139: in test_series\n    modin_series, pandas_series = create_test_series(data)\nmodin\\pandas\\test\\test_rolling.py:27: in create_test_series\n    modin_series = pd.Series(vals[next(iter(vals.keys()))])\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 364, in __init__\nE       data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005575000000135333,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[None-5-100-int_data]",
                "duration": 0.10237190000003693,
                "run_index": 38,
                "setup": {
                    "name": "setup",
                    "duration": 0.000799700000015946,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.10007490000000985,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:162: in test_series\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000697599999995191,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[None-5-100-float_nan_data]",
                "duration": 0.9901892000000316,
                "run_index": 39,
                "setup": {
                    "name": "setup",
                    "duration": 0.000872700000002169,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9878540000000271,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:139: in test_series\n    modin_series, pandas_series = create_test_series(data)\nmodin\\pandas\\test\\test_rolling.py:27: in create_test_series\n    modin_series = pd.Series(vals[next(iter(vals.keys()))])\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 364, in __init__\nE       data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005898000000001957,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[triang-None-5-int_data]",
                "duration": 0.09553940000000694,
                "run_index": 40,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008353999999997086,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09297620000000961,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:156: in test_series\n    df_equals(modin_rolled.mean(), pandas_rolled.mean())\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000892399999997906,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[triang-None-5-float_nan_data]",
                "duration": 0.9325835999999583,
                "run_index": 41,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008106999999881737,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9303733999999793,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:139: in test_series\n    modin_series, pandas_series = create_test_series(data)\nmodin\\pandas\\test\\test_rolling.py:27: in create_test_series\n    modin_series = pd.Series(vals[next(iter(vals.keys()))])\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 364, in __init__\nE       data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005888000000027205,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[triang-None-100-int_data]",
                "duration": 0.10124050000001716,
                "run_index": 42,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008057000000007974,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09887870000000021,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:156: in test_series\n    df_equals(modin_rolled.mean(), pandas_rolled.mean())\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.000750400000015361,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[triang-None-100-float_nan_data]",
                "duration": 0.8816620999999998,
                "run_index": 43,
                "setup": {
                    "name": "setup",
                    "duration": 0.0009081999999978052,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8792471000000148,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:139: in test_series\n    modin_series, pandas_series = create_test_series(data)\nmodin\\pandas\\test\\test_rolling.py:27: in create_test_series\n    modin_series = pd.Series(vals[next(iter(vals.keys()))])\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 364, in __init__\nE       data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005985999999893465,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[triang-5-5-int_data]",
                "duration": 0.10959009999999125,
                "run_index": 44,
                "setup": {
                    "name": "setup",
                    "duration": 0.0013112999999975727,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.1058490000000063,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:156: in test_series\n    df_equals(modin_rolled.mean(), pandas_rolled.mean())\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0011184999999898082,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[triang-5-5-float_nan_data]",
                "duration": 0.9298493000000292,
                "run_index": 45,
                "setup": {
                    "name": "setup",
                    "duration": 0.0011205000000131804,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.9270649000000049,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:139: in test_series\n    modin_series, pandas_series = create_test_series(data)\nmodin\\pandas\\test\\test_rolling.py:27: in create_test_series\n    modin_series = pd.Series(vals[next(iter(vals.keys()))])\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 364, in __init__\nE       data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0005433999999979733,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[triang-5-100-int_data]",
                "duration": 0.09947990000003415,
                "run_index": 46,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008423000000163938,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.09711100000001238,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:156: in test_series\n    df_equals(modin_rolled.mean(), pandas_rolled.mean())\nmodin\\pandas\\test\\utils.py:540: in df_equals\n    assert_series_equal(df1, df2, check_dtype=False, check_series_type=False)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\_testing.py:744: in _check_types\n    assert_attr_equal(\"dtype\", left, right, obj=obj)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\inference.py:68: in is_number\n    return isinstance(obj, (Number, np.number))\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:98: in __instancecheck__\n    return _abc_instancecheck(cls, instance)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py:102: in __subclasscheck__\n    return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006842999999889798,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series[triang-5-100-float_nan_data]",
                "duration": 0.8773908999999946,
                "run_index": 47,
                "setup": {
                    "name": "setup",
                    "duration": 0.0008573000000069442,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.8750560999999948,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:139: in test_series\n    modin_series, pandas_series = create_test_series(data)\nmodin\\pandas\\test\\test_rolling.py:27: in create_test_series\n    modin_series = pd.Series(vals[next(iter(vals.keys()))])\nmodin\\experimental\\cloud\\meta_magic.py:155: in __new__\n    return cls.__real_cls__(*a, **kw)\nmodin\\experimental\\cloud\\rpyc_proxy.py:430: in __init__\n    __remote_end__ = remote_cls(*a, **kw)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: __array__() takes 1 positional argument but 2 were given\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\series.py\", line 150, in __init__\nE       pandas.Series(\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\series.py\", line 364, in __init__\nE       data = sanitize_array(data, index, dtype, copy, raise_cast_failure=True)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\construction.py\", line 482, in sanitize_array\nE       subarr = maybe_convert_platform(data)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 112, in maybe_convert_platform\nE       values = construct_1d_object_array_from_listlike(values)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\cast.py\", line 1639, in construct_1d_object_array_from_listlike\nE       result[:] = values\nE   TypeError: __array__() takes 1 positional argument but 2 were given"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.0006201999999859709,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series_dt_index[both]",
                "duration": 0.2042198000000326,
                "run_index": 48,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005738000000121701,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.2026034000000152,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:200: in test_series_dt_index\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3427, in count\nE       query_compiler=self._query_compiler.rolling_count(self.rolling_args)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 44, in caller\nE       query_compiler._modin_frame.fold(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1313, in fold\nE       new_partitions = self._partition_mgr_cls.map_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 546, in map_axis_partitions\nE       return cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 46, in <lambda>\nE       lambda x: fold_function(x, *args, **kwargs),\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1045, in <lambda>\nE       lambda df, rolling_args: pandas.DataFrame(df.rolling(*rolling_args).count())\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2022, in count\nE       result = super().count()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1225, in count\nE       return self._apply(window_func, name=\"count\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 435, in _apply\nE       window_indexer = self._get_window_indexer()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 354, in _get_window_indexer\nE       index_array=self._index_array, window_size=self.window\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 342, in _index_array\nE       if needs_i8_conversion(self._on.dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.00046879999999305255,
                    "outcome": "passed"
                },
                "outcome": "failed"
            },
            {
                "name": "modin/pandas/test/test_rolling.py::test_series_dt_index[right]",
                "duration": 0.19729379999992602,
                "run_index": 49,
                "setup": {
                    "name": "setup",
                    "duration": 0.0005647999999780495,
                    "outcome": "passed"
                },
                "call": {
                    "name": "call",
                    "duration": 0.192044199999998,
                    "outcome": "failed",
                    "longrepr": "modin\\pandas\\test\\test_rolling.py:200: in test_series_dt_index\n    df_equals(modin_rolled.count(), pandas_rolled.count())\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:253: in __call__\n    return syncreq(_self, consts.HANDLE_CALL, args, kwargs)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\netref.py:76: in syncreq\n    return conn.sync_request(handler, proxy, *args)\nmodin\\experimental\\cloud\\rpyc_proxy.py:160: in sync_request\n    return super().sync_request(handler, *args)\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py:469: in sync_request\n    return self.async_request(handler, *args, timeout=timeout).value\nC:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\async_.py:102: in value\n    raise self._obj\nE   _get_exception_class.<locals>.Derived: issubclass() arg 1 must be a class\nE   \nE   ========= Remote Traceback (1) =========\nE   Traceback (most recent call last):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 320, in _dispatch_request\nE       res = self._HANDLERS[handler](self, *args)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\rpyc\\core\\protocol.py\", line 593, in _handle_call\nE       return obj(*args, **dict(kwargs))\nE     File \"C:\\prog\\modin\\modin\\pandas\\base.py\", line 3427, in count\nE       query_compiler=self._query_compiler.rolling_count(self.rolling_args)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 44, in caller\nE       query_compiler._modin_frame.fold(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\data.py\", line 1313, in fold\nE       new_partitions = self._partition_mgr_cls.map_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 546, in map_axis_partitions\nE       return cls.broadcast_axis_partitions(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 440, in broadcast_axis_partitions\nE       [\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\partition_manager.py\", line 441, in <listcomp>\nE       left_partitions[i].apply(\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 242, in apply\nE       return self._wrap_partitions(self.deploy_axis_func(*args))\nE     File \"C:\\prog\\modin\\modin\\engines\\base\\frame\\axis_partition.py\", line 303, in deploy_axis_func\nE       result = func(dataframe, **kwargs)\nE     File \"C:\\prog\\modin\\modin\\data_management\\functions\\foldfunction.py\", line 46, in <lambda>\nE       lambda x: fold_function(x, *args, **kwargs),\nE     File \"C:\\prog\\modin\\modin\\backends\\pandas\\query_compiler.py\", line 1045, in <lambda>\nE       lambda df, rolling_args: pandas.DataFrame(df.rolling(*rolling_args).count())\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 2022, in count\nE       result = super().count()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 1225, in count\nE       return self._apply(window_func, name=\"count\")\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 435, in _apply\nE       window_indexer = self._get_window_indexer()\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 354, in _get_window_indexer\nE       index_array=self._index_array, window_size=self.window\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\window\\rolling.py\", line 342, in _index_array\nE       if needs_i8_conversion(self._on.dtype):\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1228, in needs_i8_conversion\nE       is_datetime_or_timedelta_dtype(arr_or_dtype)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1067, in is_datetime_or_timedelta_dtype\nE       return _is_dtype_type(arr_or_dtype, classes(np.datetime64, np.timedelta64))\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\site-packages\\pandas\\core\\dtypes\\common.py\", line 1640, in _is_dtype_type\nE       elif is_list_like(arr_or_dtype):\nE     File \"pandas\\_libs\\lib.pyx\", line 1033, in pandas._libs.lib.is_list_like\nE     File \"pandas\\_libs\\lib.pyx\", line 1038, in pandas._libs.lib.c_is_list_like\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 98, in __instancecheck__\nE       return _abc_instancecheck(cls, instance)\nE     File \"C:\\Users\\alozovsk\\Anaconda3\\envs\\modin\\lib\\abc.py\", line 102, in __subclasscheck__\nE       return _abc_subclasscheck(cls, subclass)\nE   TypeError: issubclass() arg 1 must be a class"
                },
                "teardown": {
                    "name": "teardown",
                    "duration": 0.004119999999971924,
                    "outcome": "passed"
                },
                "outcome": "failed"
            }
        ],
        "summary": {
            "failed": 46,
            "passed": 4,
            "num_tests": 50,
            "duration": 190.0311176776886
        },
        "created_at": "2021-07-28 22:37:12.061835"
    }
}